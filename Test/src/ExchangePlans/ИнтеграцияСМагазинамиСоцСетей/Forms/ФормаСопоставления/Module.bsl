
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИдентификаторГруппы = Параметры.ИдентификаторГруппы;
	ПоказатьВсе = Истина;//Параметры.ПоказатьВсе;
	ОбязательноЗаполнять = Параметры.ОбязательноЗаполнять;
	СсылкаНаУзелОбмена = Параметры.СсылкаНаУзелОбмена;
	ОткрытьУзелОбменаПослеЗакрытия = Параметры.ОткрытьУзелОбменаПослеЗакрытия;
	ПоказатьНоменклатуру = Параметры.ПоказатьНоменклатуру;
	
	Элементы.ФормаПоказатьВсе.Пометка = ПоказатьВсе;
	Элементы.ФормаПоказатьНоменклатуру.Пометка = ПоказатьНоменклатуру;
	Элементы.ФормаЗагрузитьНоменклатуру.Видимость = ПоказатьНоменклатуру;
	
	ОбновитьДеревоНаСервере();
	
	
	Заголовок = НСтр("ru = 'Загрузка и сопоставление товаров ВКонтакте'")
	//Если ПоказатьНоменклатуру Тогда
	//	Заголовок = НСтр("ru = 'Настройка загрузки товаров ВКонтакте'");
	//Иначе
	//	Заголовок = НСтр("ru = 'Настройка категорий товаров для обмена с ВКонтакте'");
	//КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗавершениеРаботы = Истина Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтотОбъект.Модифицированность И Не Отказ Тогда
	
		Отказ = Истина;
		
		ОповещениеПослеВопросаЗакрытияФормы = Новый ОписаниеОповещения( "ПослеВопросаЗакрытияФормы" , ЭтотОбъект );
		ПоказатьВопрос( ОповещениеПослеВопросаЗакрытияФормы, "Записать изменения?", РежимДиалогаВопрос.ДаНетОтмена );
		
		Возврат;
	КонецЕсли;
	
	Если ОбязательноЗаполнять Тогда
		
		МассивНаименований = Новый Массив;
		
		Для Каждого СтрРодитель Из ДеревоКатегорийТоваров.ПолучитьЭлементы() Цикл
			Для Каждого СтрЭлемент Из СтрРодитель.ПолучитьЭлементы() Цикл
				
				Если СтрЭлемент.Используется И НЕ (ЗначениеЗаполнено(СтрЭлемент.КатегорияНоменклатуры) Или ЗначениеЗаполнено(СтрЭлемент.ГруппаНоменклатуры)) Тогда
					МассивНаименований.Добавить(СтрШаблон("%1/%2",СтрРодитель.Наименование,СтрЭлемент.Наименование));
				КонецЕсли;
				
			КонецЦикла;
		КонецЦикла;
		
		Если МассивНаименований.Количество() Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Заполните используемые категории:" + Символы.ПС + СтрСоединить(МассивНаименований,", "),,,,Отказ);
		КонецЕсли;
	КонецЕсли;
	
	Если Не Отказ И ОткрытьУзелОбменаПослеЗакрытия Тогда
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ" , СсылкаНаУзелОбмена);
		
		ОткрытьФорму("ПланОбмена.ИнтеграцияСМагазинамиСоцСетей.Форма.ФормаУзлаВКонтакте", ПараметрыФормы, ЭтаФорма.ВладелецФормы,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВопросаЗакрытияФормы( Параметр1, Параметр2 ) Экспорт
	
	Если Параметр1 = КодВозвратаДиалога.Да Тогда
		ЗаписатьФорму( Неопределено );
	КонецЕсли;

	Если Параметр1 = КодВозвратаДиалога.Да 
	Или Параметр1 = КодВозвратаДиалога.Нет Тогда	
		ЭтотОбъект.Модифицированность = Ложь;
		ЭтотОбъект.Закрыть();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийРеквизитовЭлементовФормы

&НаКлиенте
Процедура ДеревоКатегорийТоваровПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоКатегорийТоваровПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьФорму(Команда)
	ЗаписатьФормуНаКлиенте();
	ЭтаФорма.Модифицированность = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	ЗаписатьФормуНаКлиенте();
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьФорму(Команда)
	ОбновитьДеревоНаСервере();
	ДеревоКатегорийРазвернуть();
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьВсе(Команда)
	
	ПоказатьВсе = НЕ ПоказатьВсе;
	
	Элементы.ФормаПоказатьВсе.Пометка = ПоказатьВсе;
	ОбновитьДеревоНаСервере();
	ДеревоКатегорийРазвернуть();
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьНоменклатуру(Команда)
	ПоказатьНоменклатуру = НЕ ПоказатьНоменклатуру;
	
	Элементы.ФормаПоказатьНоменклатуру.Пометка = ПоказатьНоменклатуру;
	ОбновитьДеревоНаСервере();
	ДеревоКатегорийРазвернуть();
КонецПроцедуры

&НаКлиенте
Функция РазделительИдентификаторовВложенныхКатегорийПолучить()
	Возврат "#";
КонецФункции

&НаКлиенте
Процедура ЭлементФормыТаблицаНоменклатурОтборСтрокУстановить()

	ОтборСтрок = Новый Структура( "ИдентификаторыКатегорийОтбор, СоответствиеЗаполнено" );
	
	ДеревоКатегорийТоваровТекущиеДанные = Элементы.ДеревоКатегорийТоваров.ТекущиеДанные;
	Если ДеревоКатегорийТоваровТекущиеДанные = Неопределено Тогда
		ОтборСтрок.Удалить( "ИдентификаторыКатегорийОтбор" );
	Иначе
	
		Если ПустаяСтрока( ДеревоКатегорийТоваровТекущиеДанные.Идентификатор ) Тогда
			ОтборСтрок.Удалить( "ИдентификаторыКатегорийОтбор" );
		Иначе
			РазделительИдентификаторовВложенныхКатегорий = РазделительИдентификаторовВложенныхКатегорийПолучить();
			
			ОтборСтрок.ИдентификаторыКатегорийОтбор = 
			РазделительИдентификаторовВложенныхКатегорий + ДеревоКатегорийТоваровТекущиеДанные.Идентификатор + РазделительИдентификаторовВложенныхКатегорий;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ОтображатьСопоставленные = 1 Тогда
		// Сопоставленные
		ОтборСтрок.СоответствиеЗаполнено = Истина;
	ИначеЕсли ОтображатьСопоставленные = 2 Тогда
		// Несопоставленные
		ОтборСтрок.СоответствиеЗаполнено = Ложь;
	Иначе
		// Все
		ОтборСтрок.Удалить( "СоответствиеЗаполнено" );
	КонецЕсли;
	
	Если ОтборСтрок.Количество() = 0 Тогда
		Элементы.ТаблицаНоменклатур.ОтборСтрок = Неопределено;
	Иначе
		Элементы.ТаблицаНоменклатур.ОтборСтрок = Новый ФиксированнаяСтруктура( ОтборСтрок );
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ДеревоКатегорийТоваровПриАктивизацииСтроки(Элемент)
	
	Если ПоказатьНоменклатуру Тогда
		ЭлементФормыТаблицаНоменклатурОтборСтрокУстановить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаНоменклатурПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаНоменклатурПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаХарактеристикПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаХарактеристикПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаНоменклатурПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.ТаблицаНоменклатур.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		ОтборСтрок = Новый ФиксированнаяСтруктура("ИдентификаторНоменклатуры" , "-");
		Элементы.ТаблицаХарактеристик.ОтборСтрок = ОтборСтрок;
		Возврат;
	КонецЕсли;
	
	ОтборСтрок = Новый ФиксированнаяСтруктура("ИдентификаторНоменклатуры" , ТекущиеДанные.Идентификатор);
	Элементы.ТаблицаХарактеристик.ОтборСтрок = ОтборСтрок;
	
	Элементы.СтраницыХарактеристик.ТекущаяСтраница 
	= ?(ТекущиеДанные.ЕстьХарактеристики, Элементы.СтраницаТаблицаХарактеристик, Элементы.СтраницаНетХарактеристик);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаДополнительныхРеквизитовПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаДополнительныхРеквизитовПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаЗначенийДополнительныхРеквизитовПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаЗначенийДополнительныхРеквизитовПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаДополнительныхРеквизитовПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.ТаблицаДополнительныхРеквизитов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		ОтборСтрок = Новый ФиксированнаяСтруктура("ИдентификаторДополнительногоРеквизита" , "-");
		Элементы.ТаблицаЗначенийДополнительныхРеквизитов.ОтборСтрок = ОтборСтрок;
		Возврат;
	КонецЕсли;
	
	ОтборСтрок = Новый ФиксированнаяСтруктура("ИдентификаторДополнительногоРеквизита" , ТекущиеДанные.Идентификатор);
	Элементы.ТаблицаЗначенийДополнительныхРеквизитов.ОтборСтрок = ОтборСтрок;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьНоменклатуру(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗагрузитьНоменклатуруЗавершение", ЭтаФорма);
	
	ОписаниеУзлаОбменаВК = Новый Структура;
	ОписаниеУзлаОбменаВК.Вставить("СсылкаНаУзелОбмена" , СсылкаНаУзелОбмена);
	
	ОткрытьФорму("ПланОбмена.ИнтеграцияСМагазинамиСоцСетей.Форма.ФормаЗагрузки", ОписаниеУзлаОбменаВК, ЭтаФорма,,,,ОписаниеОповещения,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьВсеПриИзменении(Элемент)
	ОбновитьДеревоНаСервере();
	ДеревоКатегорийРазвернуть();
КонецПроцедуры

&НаКлиенте
Процедура НайтиНоменклатуру(Команда)
	НайтиНоменклатуруНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаВиртуальныеКаталогиПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаВиртуальныеКаталогиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьДеревоНаСервере()
	
	СоответствиеКаталогов = Новый Соответствие;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СопоставлениеКаталоговДляМагазинаСоцСетей.Идентификатор КАК Идентификатор,
	|	СопоставлениеКаталоговДляМагазинаСоцСетей.Наименование КАК Наименование,
	|	СопоставлениеКаталоговДляМагазинаСоцСетей.КатегорияНоменклатуры КАК КатегорияНоменклатуры,
	|	СопоставлениеКаталоговДляМагазинаСоцСетей.ГруппаНоменклатуры КАК ГруппаНоменклатуры
	|ИЗ
	|	РегистрСведений.СопоставлениеКаталоговДляМагазинаСоцСетей КАК СопоставлениеКаталоговДляМагазинаСоцСетей
	|ГДЕ
	|	СопоставлениеКаталоговДляМагазинаСоцСетей.УзелИнформационнойБазы = &СсылкаНаУзелОбмена";
	
	Запрос.УстановитьПараметр("СсылкаНаУзелОбмена", СсылкаНаУзелОбмена);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		СтруктураКаталога = Новый Структура;
		СтруктураКаталога.Вставить("КатегорияНоменклатуры" , ВыборкаДетальныеЗаписи.КатегорияНоменклатуры);
		СтруктураКаталога.Вставить("ГруппаНоменклатуры" , ВыборкаДетальныеЗаписи.ГруппаНоменклатуры);
		
		СоответствиеКаталогов.Вставить(ВыборкаДетальныеЗаписи.Идентификатор, СтруктураКаталога);
		
	КонецЦикла;
	
	СоответствиеУдалениеСтрок = Новый Соответствие;
	
	ОписаниеУзлаОбмена = ПланыОбмена.ИнтеграцияСМагазинамиСоцСетей.ПолучитьОписаниеУзлаОбмена(СсылкаНаУзелОбмена);
	
	ДеревоКатегорийТоваров.ПолучитьЭлементы().Очистить();
	
	
	МассивТоваров = ПланыОбмена.ИнтеграцияСМагазинамиСоцСетей.ПолучитьВсеТоварыИзМагазина(ОписаниеУзлаОбмена,Истина);
	
	МассивИспользуемыхВМагазине = ПланыОбмена.ИнтеграцияСМагазинамиСоцСетей.ПолучитьИспользуемыеКатегорииТоваров(ОписаниеУзлаОбмена, МассивТоваров);
	
	
	// +заполнение дерева категорий товаров по данным из описания товаров
	ДеревоКатегорийТоваровПоиск = Новый Соответствие;

    ЭлементВсеКатегорииИдентификатор = "ВСЕ";
	КатегорияРодитель = ДеревоКатегорийТоваров.ПолучитьЭлементы().Добавить();
	КатегорияРодитель.Наименование = "<Все категории>";
	КатегорияРодитель.Используется = Истина;
	КатегорияРодитель.ЭтоГруппа = Истина;
	
	ДеревоКатегорийТоваровПоиск.Вставить( ЭлементВсеКатегорииИдентификатор, КатегорияРодитель );
	
	Для Каждого МассивТоваровЭлемент Из МассивТоваров Цикл
		
		КатегорияРодитель = ДеревоКатегорийТоваровПоиск.Получить( ЭлементВсеКатегорииИдентификатор );
		
		ВложенныеКатегорииКоличество = МассивТоваровЭлемент.ВложенныеКатегории.Количество();
		Для НомерПП = 1 По ВложенныеКатегорииКоличество Цикл
			
			ВложенныеКатегорииЭлемент = МассивТоваровЭлемент.ВложенныеКатегории[ ВложенныеКатегорииКоличество - НомерПП ];
			
			КатегорииЭлемент = ДеревоКатегорийТоваровПоиск.Получить( ВложенныеКатегорииЭлемент.ИдентификаторКатегории );
			Если КатегорииЭлемент = Неопределено Тогда
			
				КатегорииЭлемент = КатегорияРодитель.ПолучитьЭлементы().Добавить();
				КатегорииЭлемент.Наименование = ВложенныеКатегорииЭлемент.НаименованиеКатегории;
				КатегорииЭлемент.Идентификатор = ВложенныеКатегорииЭлемент.ИдентификаторКатегории;
				КатегорииЭлемент.Используется = Истина;
				
				Если НомерПП > 1 Тогда
					КатегорииЭлемент.ЭтоГруппа = Истина;
				КонецЕсли;
				
				ЗаполнитьКаталогСтроки(КатегорииЭлемент, СоответствиеКаталогов);
				
				ДеревоКатегорийТоваровПоиск.Вставить( ВложенныеКатегорииЭлемент.ИдентификаторКатегории, КатегорииЭлемент );
			КонецЕсли;
			
			КатегорияРодитель = КатегорииЭлемент;
		КонецЦикла;
		
	КонецЦикла;
	
    // -заполнение дерева категорий товаров по данным из описания товаров
	
	ТаблицаНоменклатур.Очистить();
	ТаблицаХарактеристик.Очистить();
	ТаблицаДополнительныхРеквизитов.Очистить();
	ТаблицаЗначенийДополнительныхРеквизитов.Очистить();
	Элементы.ГруппаНоменклатура.Видимость = ПоказатьНоменклатуру;
	Если ПоказатьНоменклатуру Тогда
		
		ОписаниеУзелОбмена = ПланыОбмена.ИнтеграцияСМагазинамиСоцСетей.ПолучитьОписаниеУзлаОбмена(СсылкаНаУзелОбмена);
		
		ОтборИдентификатор = Новый Структура( "Идентификатор" );
		Для Каждого МассивТоваровЭлемент Из МассивТоваров Цикл
			
			Если ЗначениеЗаполнено(МассивТоваровЭлемент.ИдентификаторНоменклатуры) Тогда
				
				ОтборИдентификатор.Идентификатор = МассивТоваровЭлемент.Идентификатор;
				Если ТаблицаХарактеристик.НайтиСтроки( ОтборИдентификатор ).Количество() = 0 Тогда
					
					НовСтр = ТаблицаХарактеристик.Добавить();
					НовСтр.Идентификатор = МассивТоваровЭлемент.Идентификатор;
					НовСтр.Наименование = МассивТоваровЭлемент.Наименование;
					НовСтр.Артикул = МассивТоваровЭлемент.Артикул; 
					НовСтр.ИдентификаторНоменклатуры = МассивТоваровЭлемент.ИдентификаторНоменклатуры;
					
				КонецЕсли;
				
			Иначе
				
				НовСтр = ТаблицаНоменклатур.Добавить();
				НовСтр.Идентификатор = МассивТоваровЭлемент.Идентификатор;
				НовСтр.Наименование = МассивТоваровЭлемент.Наименование;
				НовСтр.Артикул = МассивТоваровЭлемент.Артикул; 
				НовСтр.ИдентификаторКатегории = МассивТоваровЭлемент.ИдентификаторКатегории;
				НовСтр.ИдентификаторыКатегорийОтбор = МассивТоваровЭлемент.ИдентификаторыКатегорийОтбор;
				НовСтр.НаименованиеКатегории = МассивТоваровЭлемент.НаименованиеКатегории;
				НовСтр.ЕстьХарактеристики = МассивТоваровЭлемент.ЕстьХарактеристики;

				ОтборИдентификатор.Идентификатор = МассивТоваровЭлемент.Идентификатор;
				Если ТаблицаХарактеристик.НайтиСтроки( ОтборИдентификатор ).Количество() = 0 Тогда
				
					НовСтр = ТаблицаХарактеристик.Добавить();
					НовСтр.Идентификатор = МассивТоваровЭлемент.Идентификатор;
					НовСтр.Наименование = МассивТоваровЭлемент.Наименование;
					НовСтр.Артикул = МассивТоваровЭлемент.Артикул; 
					НовСтр.ИдентификаторНоменклатуры = МассивТоваровЭлемент.Идентификатор;
					
				КонецЕсли;

			КонецЕсли;
			
		КонецЦикла;
		
		ПодборкиТоваров = ПланыОбмена.ИнтеграцияСМагазинамиСоцСетей.ПолучитьПодборкиТоваров(ОписаниеУзелОбмена);
		
		Если ПодборкиТоваров.Количество() Тогда
			Элементы.СтраницаВиртуальныеКаталоги.Видимость = Истина;
			Элементы.СтраницыТело.ОтображениеСтраниц = ОтображениеСтраницФормы.ЗакладкиСверху;
		Иначе
			Элементы.СтраницаВиртуальныеКаталоги.Видимость = Ложь;
			Элементы.СтраницыТело.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
		КонецЕсли;
		
		Если ПодборкиТоваров.Количество() = 0 Тогда
			МассивИдентификаторов = Новый Массив;
		Иначе
			МассивИдентификаторов = Новый Массив(ПодборкиТоваров.Количество());
			Для Н = 0 По ПодборкиТоваров.ВГраница() Цикл
				МассивИдентификаторов[Н] = ПодборкиТоваров[Н].Идентификатор;
			КонецЦикла;
		КонецЕсли;
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаНоменклатур.Идентификатор КАК Идентификатор,
		|	ТаблицаНоменклатур.ИдентификаторКатегории КАК ИдентификаторКатегории,
		|	ТаблицаНоменклатур.ИдентификаторыКатегорийОтбор КАК ИдентификаторыКатегорийОтбор,
		|	ТаблицаНоменклатур.НаименованиеКатегории КАК НаименованиеКатегории,
		|	ТаблицаНоменклатур.ЕстьХарактеристики КАК ЕстьХарактеристики,
		|	ТаблицаНоменклатур.Наименование КАК Наименование,
		|	ТаблицаНоменклатур.Артикул КАК Артикул
		|ПОМЕСТИТЬ ВТ_ТаблицаНоменклатур
		|ИЗ
		|	&ТаблицаНоменклатур КАК ТаблицаНоменклатур
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаХарактеристик.Идентификатор КАК Идентификатор,
		|	ТаблицаХарактеристик.ИдентификаторНоменклатуры КАК ИдентификаторНоменклатуры,
		|	ТаблицаХарактеристик.Наименование КАК Наименование,
		|	ТаблицаХарактеристик.Артикул КАК Артикул
		|ПОМЕСТИТЬ ВТ_ТаблицаХарактеристик
		|ИЗ
		|	&ТаблицаХарактеристик КАК ТаблицаХарактеристик
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СопоставлениеИдентификаторовМагазиновСоцСетей.Ссылка КАК Ссылка,
		|	СопоставлениеИдентификаторовМагазиновСоцСетей.Идентификатор КАК Идентификатор
		|ИЗ
		|	РегистрСведений.СопоставлениеИдентификаторовМагазиновСоцСетей КАК СопоставлениеИдентификаторовМагазиновСоцСетей
		|ГДЕ
		|	СопоставлениеИдентификаторовМагазиновСоцСетей.УзелИнформационнойБазы = &УзелИнформационнойБазы
		|	И СопоставлениеИдентификаторовМагазиновСоцСетей.Идентификатор В(&МассивИдентификаторов)
		|	И СопоставлениеИдентификаторовМагазиновСоцСетей.ТипИдентификатора = ""album""
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ТаблицаНоменклатур.Идентификатор КАК Идентификатор,
		|	СопоставлениеИдентификаторовМагазиновСоцСетей.Ссылка КАК Номенклатура,
		|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК Характеристика,
		|	ВТ_ТаблицаНоменклатур.Наименование КАК Наименование,
		|	ВТ_ТаблицаНоменклатур.Артикул КАК Артикул,
		|	ВТ_ТаблицаНоменклатур.ИдентификаторКатегории КАК ИдентификаторКатегории,
		|	ВТ_ТаблицаНоменклатур.ИдентификаторыКатегорийОтбор КАК ИдентификаторыКатегорийОтбор,
		|	ВТ_ТаблицаНоменклатур.НаименованиеКатегории КАК НаименованиеКатегории,
		|	ВТ_ТаблицаНоменклатур.ЕстьХарактеристики КАК ЕстьХарактеристики
		|ИЗ
		|	ВТ_ТаблицаНоменклатур КАК ВТ_ТаблицаНоменклатур
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СопоставлениеИдентификаторовМагазиновСоцСетей КАК СопоставлениеИдентификаторовМагазиновСоцСетей
		|		ПО ВТ_ТаблицаНоменклатур.Идентификатор = СопоставлениеИдентификаторовМагазиновСоцСетей.Идентификатор
		|			И (СопоставлениеИдентификаторовМагазиновСоцСетей.УзелИнформационнойБазы = &УзелИнформационнойБазы)
		|			И (СопоставлениеИдентификаторовМагазиновСоцСетей.ТипИдентификатора = ""item"")
		|			И (ВЫРАЗИТЬ(СопоставлениеИдентификаторовМагазиновСоцСетей.Ссылка КАК Справочник.Номенклатура) ССЫЛКА Справочник.Номенклатура)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Наименование,
		|	Идентификатор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ТаблицаХарактеристик.Идентификатор КАК Идентификатор,
		|	СопоставлениеИдентификаторовМагазиновСоцСетей.Ссылка КАК Характеристика,
		|	СопоставлениеИдентификаторовМагазиновСоцСетей.Ссылка.Владелец КАК Номенклатура,
		|	ВТ_ТаблицаХарактеристик.ИдентификаторНоменклатуры КАК ИдентификаторНоменклатуры,
		|	ВТ_ТаблицаХарактеристик.Наименование КАК Наименование,
		|	ВТ_ТаблицаХарактеристик.Артикул КАК Артикул
		|ИЗ
		|	ВТ_ТаблицаХарактеристик КАК ВТ_ТаблицаХарактеристик
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СопоставлениеИдентификаторовМагазиновСоцСетей КАК СопоставлениеИдентификаторовМагазиновСоцСетей
		|		ПО ВТ_ТаблицаХарактеристик.Идентификатор = СопоставлениеИдентификаторовМагазиновСоцСетей.Идентификатор
		|			И (СопоставлениеИдентификаторовМагазиновСоцСетей.УзелИнформационнойБазы = &УзелИнформационнойБазы)
		|			И (СопоставлениеИдентификаторовМагазиновСоцСетей.ТипИдентификатора = ""item"")
		|			И (ВЫРАЗИТЬ(СопоставлениеИдентификаторовМагазиновСоцСетей.Ссылка КАК Справочник.ХарактеристикиНоменклатуры) ССЫЛКА Справочник.ХарактеристикиНоменклатуры)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Наименование,
		|	Идентификатор";
		
		Запрос.УстановитьПараметр("ТаблицаНоменклатур" , ТаблицаНоменклатур.Выгрузить());
		Запрос.УстановитьПараметр("ТаблицаХарактеристик" , ТаблицаХарактеристик.Выгрузить());
		Запрос.УстановитьПараметр("УзелИнформационнойБазы" , СсылкаНаУзелОбмена);
		Запрос.УстановитьПараметр("МассивИдентификаторов" , МассивИдентификаторов);
		
		РезультатЗапроса = Запрос.ВыполнитьПакет();
		
		ТаблицаНоменклатур.Очистить();
		ТаблицаНоменклатур.Загрузить(РезультатЗапроса[РезультатЗапроса.ВГраница() - 1].Выгрузить());
		
		ТаблицаХарактеристик.Очистить();
		ТаблицаХарактеристик.Загрузить(РезультатЗапроса[РезультатЗапроса.ВГраница()].Выгрузить());
		
		// +дозаполнение Номенклатуры по заполненным Характеристикам
		ТипНоменклатура = Тип( "СправочникСсылка.Номенклатура" );
		ТипХарактеристикиНоменклатуры = Тип( "СправочникСсылка.ХарактеристикиНоменклатуры" );
		ОтборДляПоискаСтрок = Новый Структура( "ИдентификаторНоменклатуры" );
		Для Каждого ТаблицаНоменклатурСтрока Из ТаблицаНоменклатур Цикл
			
			// +заполнение признака ЕстьХарактеристики по свойству Номенклатуры
			// изначально заполняется по наличию "Вариантов" на сайте ВКонтакте
			Номенклатура = ТаблицаНоменклатурСтрока.Номенклатура;
			Если Не ТаблицаНоменклатурСтрока.ЕстьХарактеристики Тогда
				НоменклатураЕстьХарактеристики = ЗначениеРеквизитаОбъекта( Номенклатура, "ИспользоватьХарактеристики" );
				ТаблицаНоменклатурСтрока.ЕстьХарактеристики = НоменклатураЕстьХарактеристики;
			КонецЕсли;
			// -заполнение признака ЕстьХарактеристики по свойству товара
			
			ИдентификаторНоменклатуры = ТаблицаНоменклатурСтрока.Идентификатор;
			
			ОтборДляПоискаСтрок.ИдентификаторНоменклатуры = ИдентификаторНоменклатуры;
			ТаблицаХарактеристикСтроки = ТаблицаХарактеристик.НайтиСтроки( ОтборДляПоискаСтрок );
			
			Для Каждого ТаблицаХарактеристикСтрока Из ТаблицаХарактеристикСтроки Цикл
			
				Если ЗначениеЗаполнено( ТаблицаХарактеристикСтрока.Характеристика )
				И ТипЗнч( ТаблицаХарактеристикСтрока.Характеристика ) = ТипХарактеристикиНоменклатуры
				Тогда
				
					ХарактеристикаВладелец = ОбщегоНазначения.ЗначениеРеквизитаОбъекта( ТаблицаХарактеристикСтрока.Характеристика, "Владелец" );
					Если ТипЗнч( ХарактеристикаВладелец ) = ТипНоменклатура Тогда
						ТаблицаНоменклатурСтрока.ЕстьХарактеристики = Истина;
						ТаблицаНоменклатурСтрока.Номенклатура = ХарактеристикаВладелец;
						Прервать;
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла;
		// -дозаполнение Номенклатуры по заполненным Характеристикам
		
		СоответствиеПодборок = Новый Соответствие;
		ВыборкаДетальныеЗаписи = РезультатЗапроса[РезультатЗапроса.ВГраница() - 2].Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			СоответствиеПодборок.Вставить(ВыборкаДетальныеЗаписи.Идентификатор, ВыборкаДетальныеЗаписи.Ссылка);
		КонецЦикла;
		
		ТаблицаВиртуальныеКаталоги.Очистить();
		Для Н = 0 По ПодборкиТоваров.ВГраница() Цикл
			ТекОписание = ПодборкиТоваров[Н];
			
			НовСтр = ТаблицаВиртуальныеКаталоги.Добавить();
			НовСтр.Наименование = ТекОписание.Наименование;
			НовСтр.Идентификатор = ТекОписание.Идентификатор;
			НовСтр.ВиртуальныйКаталог = СоответствиеПодборок.Получить(ТекОписание.Идентификатор);
			
		КонецЦикла;
		
	КонецЕсли;
	
	ЭлементыФормыЗаполнитьПризнакТоваровСоответствиеЗаполнено();	
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьКаталогСтроки(Строка, СоответствиеКаталогов)
	
	ОписаниеКаталога = СоответствиеКаталогов.Получить(Строка.Идентификатор);
	Если ОписаниеКаталога = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(Строка, ОписаниеКаталога, "КатегорияНоменклатуры,ГруппаНоменклатуры");
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьФормуНаСервере()
	
	НЗ = РегистрыСведений.СопоставлениеКаталоговДляМагазинаСоцСетей.СоздатьНаборЗаписей();
	НЗ.Отбор.УзелИнформационнойБазы.Установить(СсылкаНаУзелОбмена);
	
	ЗаписатьФормуНаСервереРекурсивно(ДеревоКатегорийТоваров, НЗ);
	
	НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);
	
	Попытка
		НЗ.Записать();
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
	КонецПопытки;
	
	ЗаписатьТоварыНаСервере();
	ЗаписатьВиртуальныеКаталогиНаСервере();
	
	ПараметрыЗадания = Новый Структура;
	ПараметрыЗадания.Вставить("СсылкаНаУзелОбмена", СсылкаНаУзелОбмена);
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(Новый УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = "ПроверитьОбновитьФайлыНоменклатур";
	ПараметрыВыполнения.ЗапуститьНеВФоне = Ложь;
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;
	
	Попытка
		ДлительныеОперации.ВыполнитьВФоне(
		"ПланыОбмена.ИнтеграцияСМагазинамиСоцСетей.ПроверитьОбновитьФайлыНоменклатур",
		ПараметрыЗадания,
		ПараметрыВыполнения);
	Исключение
		ПредставлениеОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ВызватьИсключение ПредставлениеОшибки;
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьФормуНаСервереРекурсивно(СтрокаДерева, СопоставлениеКаталоговВнешнейСистемы)
	
	Для Каждого Стр Из СтрокаДерева.ПолучитьЭлементы() Цикл
		
		Если ЗначениеЗаполнено(Стр.КатегорияНоменклатуры) Или ЗначениеЗаполнено(Стр.ГруппаНоменклатуры) Тогда
			НовСтр = СопоставлениеКаталоговВнешнейСистемы.Добавить();
			НовСтр.УзелИнформационнойБазы = СсылкаНаУзелОбмена;
			НовСтр.Идентификатор = Стр.Идентификатор;
			НовСтр.Наименование = Стр.Наименование;
			НовСтр.КатегорияНоменклатуры = Стр.КатегорияНоменклатуры;
			НовСтр.ГруппаНоменклатуры = Стр.ГруппаНоменклатуры;
		КонецЕсли;
		
		Если Стр.ПолучитьЭлементы().Количество() Тогда
			ЗаписатьФормуНаСервереРекурсивно(Стр, СопоставлениеКаталоговВнешнейСистемы);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьФормуНаКлиенте()

	ЗаписатьФормуНаСервере();
    ОбщегоНазначенияКлиент.СообщитьПользователю( "Сопоставление товаров успешно записано." );
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьНоменклатуруЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	НайтиНоменклатуруНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура НайтиНоменклатуруНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаНоменклатур.Идентификатор КАК Идентификатор,
	|	ТаблицаНоменклатур.ИдентификаторКатегории КАК ИдентификаторКатегории,
	|	ТаблицаНоменклатур.ЕстьХарактеристики КАК ЕстьХарактеристики,
	|	ТаблицаНоменклатур.Наименование КАК Наименование,
	|	ТаблицаНоменклатур.Артикул КАК Артикул
	|ПОМЕСТИТЬ ВТ_ТаблицаНоменклатур
	|ИЗ
	|	&ТаблицаНоменклатур КАК ТаблицаНоменклатур
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаХарактеристик.Идентификатор КАК Идентификатор,
	|	ТаблицаХарактеристик.ИдентификаторНоменклатуры КАК ИдентификаторНоменклатуры,
	|	ТаблицаХарактеристик.Наименование КАК Наименование,
	|	ТаблицаХарактеристик.Артикул КАК Артикул
	|ПОМЕСТИТЬ ВТ_ТаблицаХарактеристик
	|ИЗ
	|	&ТаблицаХарактеристик КАК ТаблицаХарактеристик
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаНоменклатур.Идентификатор КАК Идентификатор,
	|	СопоставлениеИдентификаторовМагазиновСоцСетей.Ссылка КАК Номенклатура,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК Характеристика
	|ПОМЕСТИТЬ ВТ_Номенклатура
	|ИЗ
	|	ВТ_ТаблицаНоменклатур КАК ВТ_ТаблицаНоменклатур
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СопоставлениеИдентификаторовМагазиновСоцСетей КАК СопоставлениеИдентификаторовМагазиновСоцСетей
	|		ПО ВТ_ТаблицаНоменклатур.Идентификатор = СопоставлениеИдентификаторовМагазиновСоцСетей.Идентификатор
	|ГДЕ
	|	СопоставлениеИдентификаторовМагазиновСоцСетей.УзелИнформационнойБазы = &УзелИнформационнойБазы
	|	И СопоставлениеИдентификаторовМагазиновСоцСетей.ТипИдентификатора = ""item""
	|	И ВЫРАЗИТЬ(СопоставлениеИдентификаторовМагазиновСоцСетей.Ссылка КАК Справочник.Номенклатура) ССЫЛКА Справочник.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаНоменклатур.Идентификатор КАК Идентификатор,
	|	Номенклатура.Ссылка КАК Номенклатура,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК Характеристика,
	|	ЛОЖЬ КАК Определен
	|ПОМЕСТИТЬ ВТ_ПоискПоНаименованиюАртикулу
	|ИЗ
	|	ВТ_ТаблицаНоменклатур КАК ВТ_ТаблицаНоменклатур
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
	|		ПО ВТ_ТаблицаНоменклатур.Артикул = Номенклатура.Артикул
	|			И (ВТ_ТаблицаНоменклатур.Наименование = (ВЫРАЗИТЬ(Номенклатура.НаименованиеПолное КАК СТРОКА(1000)))
	|				ИЛИ ВТ_ТаблицаНоменклатур.Наименование = Номенклатура.Наименование)
	|ГДЕ
	|	НЕ ВТ_ТаблицаНоменклатур.Идентификатор В
	|				(ВЫБРАТЬ
	|					ВТ_Номенклатура.Идентификатор КАК Идентификатор
	|				ИЗ
	|					ВТ_Номенклатура КАК ВТ_Номенклатура)
	|	И НЕ Номенклатура.ПометкаУдаления
	|	И НЕ Номенклатура.ЭтоГруппа
	|	И ВТ_ТаблицаНоменклатур.Наименование <> """"
	|	И ВТ_ТаблицаНоменклатур.Артикул <> """"
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_Номенклатура.Идентификатор,
	|	ВТ_Номенклатура.Номенклатура,
	|	ВТ_Номенклатура.Характеристика,
	|	ИСТИНА
	|ИЗ
	|	ВТ_Номенклатура КАК ВТ_Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаНоменклатур.Идентификатор КАК Идентификатор,
	|	Номенклатура.Ссылка КАК Номенклатура,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК Характеристика,
	|	ЛОЖЬ КАК Определен
	|ПОМЕСТИТЬ ВТ_ПоискПоАртикулу
	|ИЗ
	|	ВТ_ТаблицаНоменклатур КАК ВТ_ТаблицаНоменклатур
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
	|		ПО ВТ_ТаблицаНоменклатур.Артикул = Номенклатура.Артикул
	|ГДЕ
	|	НЕ ВТ_ТаблицаНоменклатур.Идентификатор В
	|				(ВЫБРАТЬ
	|					ВТ_ПоискПоНаименованиюАртикулу.Идентификатор КАК Идентификатор
	|				ИЗ
	|					ВТ_ПоискПоНаименованиюАртикулу КАК ВТ_ПоискПоНаименованиюАртикулу)
	|	И НЕ Номенклатура.ПометкаУдаления
	|	И НЕ Номенклатура.ЭтоГруппа
	|	И ВТ_ТаблицаНоменклатур.Артикул <> """"
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ПоискПоНаименованиюАртикулу.Идентификатор,
	|	ВТ_ПоискПоНаименованиюАртикулу.Номенклатура,
	|	ВТ_ПоискПоНаименованиюАртикулу.Характеристика,
	|	ВТ_ПоискПоНаименованиюАртикулу.Определен
	|ИЗ
	|	ВТ_ПоискПоНаименованиюАртикулу КАК ВТ_ПоискПоНаименованиюАртикулу
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаНоменклатур.Идентификатор КАК Идентификатор,
	|	Номенклатура.Ссылка КАК Номенклатура,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК Характеристика,
	|	ЛОЖЬ КАК Определен
	|ПОМЕСТИТЬ ВТ_ПоискПоНаименованию
	|ИЗ
	|	ВТ_ТаблицаНоменклатур КАК ВТ_ТаблицаНоменклатур
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
	|		ПО (ВТ_ТаблицаНоменклатур.Наименование = (ВЫРАЗИТЬ(Номенклатура.НаименованиеПолное КАК СТРОКА(1000)))
	|				ИЛИ ВТ_ТаблицаНоменклатур.Наименование = Номенклатура.Наименование)
	|ГДЕ
	|	НЕ ВТ_ТаблицаНоменклатур.Идентификатор В
	|				(ВЫБРАТЬ
	|					ВТ_ПоискПоАртикулу.Идентификатор КАК Идентификатор
	|				ИЗ
	|					ВТ_ПоискПоАртикулу КАК ВТ_ПоискПоАртикулу)
	|	И НЕ Номенклатура.ПометкаУдаления
	|	И НЕ Номенклатура.ЭтоГруппа
	|	И ВТ_ТаблицаНоменклатур.Наименование <> """"
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ПоискПоАртикулу.Идентификатор,
	|	ВТ_ПоискПоАртикулу.Номенклатура,
	|	ВТ_ПоискПоАртикулу.Характеристика,
	|	ВТ_ПоискПоАртикулу.Определен
	|ИЗ
	|	ВТ_ПоискПоАртикулу КАК ВТ_ПоискПоАртикулу
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаХарактеристик.Идентификатор КАК Идентификатор,
	|	СопоставлениеИдентификаторовМагазиновСоцСетей.Ссылка КАК Характеристика,
	|	СопоставлениеИдентификаторовМагазиновСоцСетей.Ссылка.Владелец КАК Номенклатура
	|ПОМЕСТИТЬ ВТ_Характеристика
	|ИЗ
	|	ВТ_ТаблицаХарактеристик КАК ВТ_ТаблицаХарактеристик
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СопоставлениеИдентификаторовМагазиновСоцСетей КАК СопоставлениеИдентификаторовМагазиновСоцСетей
	|		ПО ВТ_ТаблицаХарактеристик.Идентификатор = СопоставлениеИдентификаторовМагазиновСоцСетей.Идентификатор
	|ГДЕ
	|	СопоставлениеИдентификаторовМагазиновСоцСетей.УзелИнформационнойБазы = &УзелИнформационнойБазы
	|	И СопоставлениеИдентификаторовМагазиновСоцСетей.ТипИдентификатора = ""item""
	|	И ВЫРАЗИТЬ(СопоставлениеИдентификаторовМагазиновСоцСетей.Ссылка КАК Справочник.ХарактеристикиНоменклатуры) ССЫЛКА Справочник.ХарактеристикиНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаХарактеристик.Идентификатор КАК Идентификатор,
	|	ХарактеристикиНоменклатуры.Ссылка КАК Характеристика,
	|	ХарактеристикиНоменклатуры.Владелец КАК Номенклатура,
	|	ЛОЖЬ КАК Определен
	|ПОМЕСТИТЬ ВТ_ПоискПоНаименованиюАртикулуХарактеристика
	|ИЗ
	|	ВТ_ТаблицаХарактеристик КАК ВТ_ТаблицаХарактеристик
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|		ПО ВТ_ТаблицаХарактеристик.Артикул = ХарактеристикиНоменклатуры.Артикул
	|			И (ВТ_ТаблицаХарактеристик.Наименование = (ВЫРАЗИТЬ(ХарактеристикиНоменклатуры.НаименованиеДляПечати КАК СТРОКА(1000)))
	|				ИЛИ ВТ_ТаблицаХарактеристик.Наименование = ХарактеристикиНоменклатуры.Наименование)
	|ГДЕ
	|	НЕ ВТ_ТаблицаХарактеристик.Идентификатор В
	|				(ВЫБРАТЬ
	|					ВТ_Характеристика.Идентификатор КАК Идентификатор
	|				ИЗ
	|					ВТ_Характеристика КАК ВТ_Характеристика)
	|	И НЕ ХарактеристикиНоменклатуры.ПометкаУдаления
	|	И ВТ_ТаблицаХарактеристик.Артикул <> """"
	|	И ВТ_ТаблицаХарактеристик.Наименование <> """"
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаХарактеристик.Идентификатор КАК Идентификатор,
	|	ХарактеристикиНоменклатуры.Ссылка КАК Характеристика,
	|	ХарактеристикиНоменклатуры.Владелец КАК Номенклатура,
	|	ЛОЖЬ КАК Определен
	|ПОМЕСТИТЬ ВТ_ПоискПоАртикулуХарактеристика
	|ИЗ
	|	ВТ_ТаблицаХарактеристик КАК ВТ_ТаблицаХарактеристик
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|		ПО ВТ_ТаблицаХарактеристик.Артикул = ХарактеристикиНоменклатуры.Артикул
	|ГДЕ
	|	НЕ ВТ_ТаблицаХарактеристик.Идентификатор В
	|				(ВЫБРАТЬ
	|					ВТ_ПоискПоНаименованиюАртикулуХарактеристика.Идентификатор КАК Идентификатор
	|				ИЗ
	|					ВТ_ПоискПоНаименованиюАртикулуХарактеристика КАК ВТ_ПоискПоНаименованиюАртикулуХарактеристика)
	|	И НЕ ХарактеристикиНоменклатуры.ПометкаУдаления
	|	И ВТ_ТаблицаХарактеристик.Артикул <> """"
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ПоискПоНаименованиюАртикулуХарактеристика.Идентификатор,
	|	ВТ_ПоискПоНаименованиюАртикулуХарактеристика.Характеристика,
	|	ВТ_ПоискПоНаименованиюАртикулуХарактеристика.Номенклатура,
	|	ВТ_ПоискПоНаименованиюАртикулуХарактеристика.Определен
	|ИЗ
	|	ВТ_ПоискПоНаименованиюАртикулуХарактеристика КАК ВТ_ПоискПоНаименованиюАртикулуХарактеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаХарактеристик.Идентификатор КАК Идентификатор,
	|	ХарактеристикиНоменклатуры.Ссылка КАК Характеристика,
	|	ХарактеристикиНоменклатуры.Владелец КАК Номенклатура,
	|	ЛОЖЬ КАК Определен
	|ПОМЕСТИТЬ ВТ_ПоискПоНаименованиюХарактеристика
	|ИЗ
	|	ВТ_ТаблицаХарактеристик КАК ВТ_ТаблицаХарактеристик
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|		ПО (ВТ_ТаблицаХарактеристик.Наименование = (ВЫРАЗИТЬ(ХарактеристикиНоменклатуры.НаименованиеДляПечати КАК СТРОКА(1000)))
	|				ИЛИ ВТ_ТаблицаХарактеристик.Наименование = ХарактеристикиНоменклатуры.Наименование)
	|ГДЕ
	|	НЕ ВТ_ТаблицаХарактеристик.Идентификатор В
	|				(ВЫБРАТЬ
	|					ВТ_ПоискПоАртикулуХарактеристика.Идентификатор КАК Идентификатор
	|				ИЗ
	|					ВТ_ПоискПоАртикулуХарактеристика КАК ВТ_ПоискПоАртикулуХарактеристика)
	|	И НЕ ХарактеристикиНоменклатуры.ПометкаУдаления
	|	И ВТ_ТаблицаХарактеристик.Наименование <> """"
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ПоискПоАртикулуХарактеристика.Идентификатор,
	|	ВТ_ПоискПоАртикулуХарактеристика.Характеристика,
	|	ВТ_ПоискПоАртикулуХарактеристика.Номенклатура,
	|	ВТ_ПоискПоАртикулуХарактеристика.Определен
	|ИЗ
	|	ВТ_ПоискПоАртикулуХарактеристика КАК ВТ_ПоискПоАртикулуХарактеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПоискПоНаименованию.Идентификатор КАК Идентификатор,
	|	МАКСИМУМ(ВТ_ПоискПоНаименованию.Номенклатура) КАК Номенклатура,
	|	ВТ_ПоискПоНаименованию.Определен КАК Определен,
	|	ВТ_ТаблицаНоменклатур.Наименование КАК Наименование,
	|	ВТ_ТаблицаНоменклатур.Артикул КАК Артикул,
	|	ВТ_ТаблицаНоменклатур.ИдентификаторКатегории КАК ИдентификаторКатегории,
	|	ВТ_ТаблицаНоменклатур.ЕстьХарактеристики КАК ЕстьХарактеристики
	|ИЗ
	|	ВТ_ПоискПоНаименованию КАК ВТ_ПоискПоНаименованию
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ТаблицаНоменклатур КАК ВТ_ТаблицаНоменклатур
	|		ПО ВТ_ПоискПоНаименованию.Идентификатор = ВТ_ТаблицаНоменклатур.Идентификатор
	|ГДЕ
	|	НЕ ВТ_ПоискПоНаименованию.Номенклатура В
	|				(ВЫБРАТЬ
	|					ВТ_ПоискПоНаименованию.Номенклатура КАК Номенклатура
	|				ИЗ
	|					ВТ_ПоискПоНаименованию КАК ВТ_ПоискПоНаименованию
	|				СГРУППИРОВАТЬ ПО
	|					ВТ_ПоискПоНаименованию.Номенклатура
	|				ИМЕЮЩИЕ
	|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТ_ПоискПоНаименованию.Идентификатор) > 1)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ПоискПоНаименованию.Идентификатор,
	|	ВТ_ПоискПоНаименованию.Определен,
	|	ВТ_ТаблицаНоменклатур.Наименование,
	|	ВТ_ТаблицаНоменклатур.ЕстьХарактеристики,
	|	ВТ_ТаблицаНоменклатур.ИдентификаторКатегории,
	|	ВТ_ТаблицаНоменклатур.Артикул
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ТаблицаНоменклатур.Идентификатор,
	|	NULL,
	|	ЛОЖЬ,
	|	ВТ_ТаблицаНоменклатур.Наименование,
	|	ВТ_ТаблицаНоменклатур.Артикул,
	|	ВТ_ТаблицаНоменклатур.ИдентификаторКатегории,
	|	ВТ_ТаблицаНоменклатур.ЕстьХарактеристики
	|ИЗ
	|	ВТ_ТаблицаНоменклатур КАК ВТ_ТаблицаНоменклатур
	|ГДЕ
	|	НЕ ВТ_ТаблицаНоменклатур.Идентификатор В
	|				(ВЫБРАТЬ
	|					ВТ_ПоискПоНаименованию.Идентификатор КАК Идентификатор
	|				ИЗ
	|					ВТ_ПоискПоНаименованию КАК ВТ_ПоискПоНаименованию
	|				ГДЕ
	|					НЕ ВТ_ПоискПоНаименованию.Номенклатура В
	|							(ВЫБРАТЬ
	|								ВТ_ПоискПоНаименованию.Номенклатура КАК Номенклатура
	|							ИЗ
	|								ВТ_ПоискПоНаименованию КАК ВТ_ПоискПоНаименованию
	|							СГРУППИРОВАТЬ ПО
	|								ВТ_ПоискПоНаименованию.Номенклатура
	|							ИМЕЮЩИЕ
	|								КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТ_ПоискПоНаименованию.Идентификатор) > 1))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Наименование,
	|	Идентификатор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПоискПоНаименованиюХарактеристика.Идентификатор КАК Идентификатор,
	|	МАКСИМУМ(ВТ_ПоискПоНаименованиюХарактеристика.Характеристика) КАК Характеристика,
	|	ВТ_ПоискПоНаименованиюХарактеристика.Определен КАК Определен,
	|	ВТ_ТаблицаХарактеристик.ИдентификаторНоменклатуры КАК ИдентификаторНоменклатуры,
	|	ВТ_ТаблицаХарактеристик.Наименование КАК Наименование,
	|	ВТ_ТаблицаХарактеристик.Артикул КАК Артикул
	|ИЗ
	|	ВТ_ПоискПоНаименованиюХарактеристика КАК ВТ_ПоискПоНаименованиюХарактеристика
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ТаблицаХарактеристик КАК ВТ_ТаблицаХарактеристик
	|		ПО ВТ_ПоискПоНаименованиюХарактеристика.Идентификатор = ВТ_ТаблицаХарактеристик.Идентификатор
	|ГДЕ
	|	НЕ (ВТ_ПоискПоНаименованиюХарактеристика.Номенклатура, ВТ_ПоискПоНаименованиюХарактеристика.Характеристика) В
	|				(ВЫБРАТЬ
	|					ВТ_ПоискПоНаименованиюХарактеристика.Номенклатура КАК Номенклатура,
	|					ВТ_ПоискПоНаименованиюХарактеристика.Характеристика КАК Характеристика
	|				ИЗ
	|					ВТ_ПоискПоНаименованиюХарактеристика КАК ВТ_ПоискПоНаименованиюХарактеристика
	|				СГРУППИРОВАТЬ ПО
	|					ВТ_ПоискПоНаименованиюХарактеристика.Номенклатура,
	|					ВТ_ПоискПоНаименованиюХарактеристика.Характеристика
	|				ИМЕЮЩИЕ
	|					КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТ_ПоискПоНаименованиюХарактеристика.Идентификатор) > 1)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ПоискПоНаименованиюХарактеристика.Идентификатор,
	|	ВТ_ТаблицаХарактеристик.ИдентификаторНоменклатуры,
	|	ВТ_ТаблицаХарактеристик.Наименование,
	|	ВТ_ПоискПоНаименованиюХарактеристика.Определен,
	|	ВТ_ТаблицаХарактеристик.Артикул
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ТаблицаХарактеристик.Идентификатор,
	|	NULL,
	|	ЛОЖЬ,
	|	ВТ_ТаблицаХарактеристик.ИдентификаторНоменклатуры,
	|	ВТ_ТаблицаХарактеристик.Наименование,
	|	ВТ_ТаблицаХарактеристик.Артикул
	|ИЗ
	|	ВТ_ТаблицаХарактеристик КАК ВТ_ТаблицаХарактеристик
	|ГДЕ
	|	НЕ ВТ_ТаблицаХарактеристик.Идентификатор В
	|				(ВЫБРАТЬ
	|					ВТ_ПоискПоНаименованиюХарактеристика.Идентификатор КАК Идентификатор
	|				ИЗ
	|					ВТ_ПоискПоНаименованиюХарактеристика КАК ВТ_ПоискПоНаименованиюХарактеристика
	|				ГДЕ
	|					НЕ (ВТ_ПоискПоНаименованиюХарактеристика.Номенклатура, ВТ_ПоискПоНаименованиюХарактеристика.Характеристика) В
	|							(ВЫБРАТЬ
	|								ВТ_ПоискПоНаименованиюХарактеристика.Номенклатура КАК Номенклатура,
	|								ВТ_ПоискПоНаименованиюХарактеристика.Характеристика КАК Характеристика
	|							ИЗ
	|								ВТ_ПоискПоНаименованиюХарактеристика КАК ВТ_ПоискПоНаименованиюХарактеристика
	|							СГРУППИРОВАТЬ ПО
	|								ВТ_ПоискПоНаименованиюХарактеристика.Номенклатура,
	|								ВТ_ПоискПоНаименованиюХарактеристика.Характеристика
	|							ИМЕЮЩИЕ
	|								КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТ_ПоискПоНаименованиюХарактеристика.Идентификатор) > 1))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Наименование,
	|	Идентификатор";
	
	
	ОтборНоменклатура = Новый Структура( "Номенклатура", Справочники.Номенклатура.ПустаяСсылка() );
	ТаблицаНоменклатурДляЗапроса = ТаблицаНоменклатур.Выгрузить().Скопировать( ОтборНоменклатура );
	
	ОтборХарактеристика = Новый Структура( "Характеристика", Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка() );
	ТаблицаХарактеристикДляЗапроса = ТаблицаХарактеристик.Выгрузить().Скопировать( ОтборХарактеристика );
	
	Если ТаблицаНоменклатурДляЗапроса.Количество() = 0 И ТаблицаХарактеристикДляЗапроса.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ТаблицаНоменклатур", ТаблицаНоменклатурДляЗапроса );
	Запрос.УстановитьПараметр("ТаблицаХарактеристик" , ТаблицаХарактеристикДляЗапроса );
	Запрос.УстановитьПараметр("УзелИнформационнойБазы" , СсылкаНаУзелОбмена );
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ТаблицаНоменклатурИзЗапроса = РезультатЗапроса[РезультатЗапроса.ВГраница() - 1].Выгрузить();
	ТаблицаХарактеристикИзЗапроса = РезультатЗапроса[РезультатЗапроса.ВГраница()].Выгрузить();

	Если ТаблицаНоменклатурИзЗапроса.Количество() = 0 И ТаблицаХарактеристикИзЗапроса.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполненоТоваров = 0;
	// +заполним пустую Номенклатуру если нашли ссылку в запросе
	Для Каждого ТаблицаНоменклатурИзЗапросаСтрока Из ТаблицаНоменклатурИзЗапроса Цикл
	
		Если Не ЗначениеЗаполнено( ТаблицаНоменклатурИзЗапросаСтрока.Номенклатура ) Тогда
			Продолжить;
		КонецЕсли;

		ТаблицаНоменклатурСтроки = ТаблицаНоменклатур.НайтиСтроки( Новый Структура( "Идентификатор", ТаблицаНоменклатурИзЗапросаСтрока.Идентификатор ));
		Если ТаблицаНоменклатурСтроки.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		ТаблицаНоменклатурСтрока = ТаблицаНоменклатурСтроки[0];
		Если ЗначениеЗаполнено( ТаблицаНоменклатурСтрока.Номенклатура ) Тогда
			Продолжить;
		КонецЕсли;
		
		ТаблицаНоменклатурСтрока.Номенклатура = ТаблицаНоменклатурИзЗапросаСтрока.Номенклатура;
		ТаблицаНоменклатурСтрока.ЗаполненоЧерезПоиск = Истина;
		
		ЗаполненоТоваров = ЗаполненоТоваров + 1;
		
		Если Не ТаблицаНоменклатурСтрока.ЕстьХарактеристики Тогда
			НоменклатураЕстьХарактеристики = ЗначениеРеквизитаОбъекта( ТаблицаНоменклатурСтрока.Номенклатура, "ИспользоватьХарактеристики" );
			ТаблицаНоменклатурСтрока.ЕстьХарактеристики = НоменклатураЕстьХарактеристики;
		КонецЕсли;
		
	КонецЦикла;
	// -заполним пустую Номенклатуру если нашли ссылку в запросом
    
    // +заполним пустые Характеристки если нашли ссылку запросом
	Для Каждого ТаблицаХарактеристикИзЗапросаСтрока Из ТаблицаХарактеристикИзЗапроса Цикл
	
		Если Не ЗначениеЗаполнено( ТаблицаХарактеристикИзЗапросаСтрока.Характеристика ) Тогда
			Продолжить;
		КонецЕсли;

		ТаблицаХарактеристикСтроки = ТаблицаХарактеристик.НайтиСтроки( Новый Структура( "Идентификатор", ТаблицаХарактеристикИзЗапросаСтрока.Идентификатор ));
		Если ТаблицаХарактеристикСтроки.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		ТаблицаХарактеристикСтроки = ТаблицаХарактеристикСтроки[0];
		Если ЗначениеЗаполнено( ТаблицаХарактеристикСтроки.Характеристика ) Тогда
			Продолжить;
		КонецЕсли;
		
		ТаблицаХарактеристикСтроки.Характеристика = ТаблицаХарактеристикИзЗапросаСтрока.Характеристика;
		ТаблицаХарактеристикСтроки.ЗаполненоЧерезПоиск = Истина;
		
		ЗаполненоТоваров = ЗаполненоТоваров + 1;
		
	КонецЦикла;
	// -заполним пустые Характеристки если нашли ссылку в запросе

	ОбщегоНазначения.СообщитьПользователю( "Найдено и заполнено товаров: " + ЗаполненоТоваров );
	Если ЗаполненоТоваров > 0 Тогда
		ЭтаФорма.Модифицированность = Истина;
	КонецЕсли;
	
	ЭлементыФормыЗаполнитьПризнакТоваровСоответствиеЗаполнено();
	
КонецПроцедуры

&НаСервере
Процедура ЭлементыФормыЗаполнитьПризнакТоваровСоответствиеЗаполнено( ИдентификаторНоменклатуры = Неопределено )
	
	Если ИдентификаторНоменклатуры = Неопределено Тогда
		ТаблицаНоменклатурДляОбработки = ТаблицаНоменклатур;
	Иначе
		ТаблицаНоменклатурДляОбработки = ТаблицаНоменклатур.НайтиСтроки( Новый Структура( "Идентификатор", ИдентификаторНоменклатуры ) );
	КонецЕсли;
	
	Для Каждого ТаблицаНоменклатурСтрока Из ТаблицаНоменклатурДляОбработки Цикл
	
		ТаблицаНоменклатурСтрока.СоответствиеЗаполнено = ЗначениеЗаполнено( ТаблицаНоменклатурСтрока.Номенклатура );
		
		Если Не ТаблицаНоменклатурСтрока.ЕстьХарактеристики Тогда
			Продолжить;
		КонецЕсли;
		
		ТаблицаХарактеристикСтроки = ТаблицаХарактеристик.НайтиСтроки( Новый Структура( "ИдентификаторНоменклатуры, Характеристика", 
		ТаблицаНоменклатурСтрока.Идентификатор, Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка() ));
		Если ТаблицаХарактеристикСтроки.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		ТаблицаНоменклатурСтрока.СоответствиеЗаполнено = Ложь;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьТоварыНаСервере()
	
	// перезапись всех номенклатур и характеристик
	
	НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);
	
	// запись категорий полным замещением по узлу обмена
	НоменклатураХарактеристикДляМагазинаСоцСетейНаборЗаписей = РегистрыСведений.НоменклатураХарактеристикДляМагазинаСоцСетей.СоздатьНаборЗаписей();
	НоменклатураХарактеристикДляМагазинаСоцСетейНаборЗаписей.Отбор.УзелИнформационнойБазы.Установить( СсылкаНаУзелОбмена );
	
	// +Характеристики
	ОтборПоИдентификатор = Новый Структура( "Идентификатор" );
	МассивИсключения = Новый Массив;
	Для Каждого ТаблицаХарактеристикСтрока Из ТаблицаХарактеристик Цикл

		ИнтеграцияСМагазинамиСоцСетейСервер.СопоставлениеИдентификаторовМагазиновСоцСетейПоИдентификаторуУдалить( 
		СсылкаНаУзелОбмена, "item", ТаблицаХарактеристикСтрока.Идентификатор );

		Если Не ЗначениеЗаполнено(ТаблицаХарактеристикСтрока.Характеристика) Тогда
			Продолжить;
		КонецЕсли;

		МассивИсключения.Добавить(ТаблицаХарактеристикСтрока.ИдентификаторНоменклатуры);
		
		НоваяЗапись = РегистрыСведений.СопоставлениеИдентификаторовМагазиновСоцСетей.СоздатьМенеджерЗаписи();
		НоваяЗапись.Идентификатор = ТаблицаХарактеристикСтрока.Идентификатор;
		НоваяЗапись.Ссылка = ТаблицаХарактеристикСтрока.Характеристика;
		НоваяЗапись.УзелИнформационнойБазы = СсылкаНаУзелОбмена;
		НоваяЗапись.ТипИдентификатора = "item";
		НоваяЗапись.ДатаЗагрузки = ТекущаяДатаСеанса();
		НоваяЗапись.Записать();

		// +Категории
		ОтборПоИдентификатор.Идентификатор = ТаблицаХарактеристикСтрока.ИдентификаторНоменклатуры;
		ТаблицаНоменклатурСтроки = ТаблицаНоменклатур.НайтиСтроки( ОтборПоИдентификатор );
		Если ТаблицаНоменклатурСтроки.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		ТаблицаНоменклатурСтрока = ТаблицаНоменклатурСтроки[ 0 ];
		
		НоваяЗапись = НоменклатураХарактеристикДляМагазинаСоцСетейНаборЗаписей.Добавить();
		НоваяЗапись.УзелИнформационнойБазы = СсылкаНаУзелОбмена;
		НоваяЗапись.Номенклатура = ТаблицаНоменклатурСтрока.Номенклатура;
		НоваяЗапись.Характеристика = ТаблицаХарактеристикСтрока.Характеристика;
		НоваяЗапись.Идентификатор = ТаблицаНоменклатурСтрока.ИдентификаторКатегории;
		НоваяЗапись.Сортировка = 0;
		НоваяЗапись.Наименование = ТаблицаНоменклатурСтрока.НаименованиеКатегории;
		// -Категории
		
	КонецЦикла;
	// -Характеристики
	
	// +Номенклатура
	Для Каждого ТаблицаНоменклатурСтрока Из ТаблицаНоменклатур Цикл
		
		Если МассивИсключения.Найти(ТаблицаНоменклатурСтрока.Идентификатор) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ИнтеграцияСМагазинамиСоцСетейСервер.СопоставлениеИдентификаторовМагазиновСоцСетейПоИдентификаторуУдалить( 
		СсылкаНаУзелОбмена, "item", ТаблицаНоменклатурСтрока.Идентификатор );

		Если Не ЗначениеЗаполнено(ТаблицаНоменклатурСтрока.Номенклатура) Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяЗапись = РегистрыСведений.СопоставлениеИдентификаторовМагазиновСоцСетей.СоздатьМенеджерЗаписи();
		НоваяЗапись.Идентификатор = ТаблицаНоменклатурСтрока.Идентификатор;
		НоваяЗапись.Ссылка = ТаблицаНоменклатурСтрока.Номенклатура;
		НоваяЗапись.УзелИнформационнойБазы = СсылкаНаУзелОбмена;
		НоваяЗапись.ТипИдентификатора = "item";
		НоваяЗапись.ДатаЗагрузки = ТекущаяДатаСеанса();
		НоваяЗапись.Записать();
		
		// +Категории
		НоваяЗапись = НоменклатураХарактеристикДляМагазинаСоцСетейНаборЗаписей.Добавить();
		НоваяЗапись.УзелИнформационнойБазы = СсылкаНаУзелОбмена;
		НоваяЗапись.Номенклатура = ТаблицаНоменклатурСтрока.Номенклатура;
		НоваяЗапись.Характеристика = Неопределено;
		НоваяЗапись.Идентификатор = ТаблицаНоменклатурСтрока.ИдентификаторКатегории;
		НоваяЗапись.Сортировка = 0;
		НоваяЗапись.Наименование = ТаблицаНоменклатурСтрока.НаименованиеКатегории;
		// -Категории
		
	КонецЦикла;
	// -Номенклатура
	
	НоменклатураХарактеристикДляМагазинаСоцСетейНаборЗаписей.Записать( Истина );
	
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьВиртуальныеКаталогиНаСервере()
	
	НЗ = РегистрыСведений.СопоставлениеИдентификаторовМагазиновСоцСетей.СоздатьНаборЗаписей();
	НЗ.Отбор.УзелИнформационнойБазы.Установить(СсылкаНаУзелОбмена);
	НЗ.Отбор.ТипИдентификатора.Установить("album");
	
	Для Каждого Стр Из ТаблицаВиртуальныеКаталоги Цикл
		Если ЗначениеЗаполнено(Стр.ВиртуальныйКаталог) Тогда
			
			НоваяЗапись = НЗ.Добавить();
			НоваяЗапись.Идентификатор = Стр.Идентификатор;
			НоваяЗапись.Ссылка = Стр.ВиртуальныйКаталог;
			НоваяЗапись.УзелИнформационнойБазы = СсылкаНаУзелОбмена;
			НоваяЗапись.ТипИдентификатора = "album";
			НоваяЗапись.ДатаЗагрузки = ТекущаяДатаСеанса();
			
		КонецЕсли;
	КонецЦикла;
	
	НЗ.Записать(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
    
    ЭлементФормыИдентификаторыВКонтактеОбновить();
    
    ДеревоКатегорийРазвернуть();
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоКатегорийРазвернуть()
	ДеревоКатегорийЭлементы = ДеревоКатегорийТоваров.ПолучитьЭлементы();
	Если ДеревоКатегорийЭлементы.Количество() > 0 Тогда
		Элементы.ДеревоКатегорийТоваров.Развернуть( ДеревоКатегорийЭлементы[0].ПолучитьИдентификатор(), Истина );
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗначениеРеквизитаОбъекта( Объект, Реквизит )
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта( Объект, Реквизит );
КонецФункции

&НаКлиенте
Процедура ТаблицаНоменклатурНоменклатураПриИзменении(Элемент)
	
	ТаблицаНоменклатурТекущиеДанные = Элементы.ТаблицаНоменклатур.ТекущиеДанные;
	Если ТаблицаНоменклатурТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаНоменклатурТекущиеДанные.ЗаполненоЧерезПоиск = Ложь;
	
	Номенклатура = ТаблицаНоменклатурТекущиеДанные.Номенклатура;
	Если Не ТаблицаНоменклатурТекущиеДанные.ЕстьХарактеристики Тогда
		НоменклатураЕстьХарактеристики = ЗначениеРеквизитаОбъекта( Номенклатура, "ИспользоватьХарактеристики" );
		ТаблицаНоменклатурТекущиеДанные.ЕстьХарактеристики = НоменклатураЕстьХарактеристики;
	КонецЕсли;
	
	Элементы.СтраницыХарактеристик.ТекущаяСтраница 
	= ?(ТаблицаНоменклатурТекущиеДанные.ЕстьХарактеристики, Элементы.СтраницаТаблицаХарактеристик, Элементы.СтраницаНетХарактеристик);
	
	ТаблицаХарактеристикСтроки = ТаблицаХарактеристик.НайтиСтроки( Новый Структура( "ИдентификаторНоменклатуры", ТаблицаНоменклатурТекущиеДанные.Идентификатор ));
	
	Если ТаблицаХарактеристикСтроки.Количество() > 0 Тогда
	    
	    // очистим характеристику если владелец не равен выбранной номенклатуре
		Для Каждого ТаблицаХарактеристикСтрока Из ТаблицаХарактеристикСтроки Цикл
		
			Если Не ЗначениеЗаполнено( ТаблицаХарактеристикСтрока.Характеристика ) Тогда
				Продолжить;
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено( Номенклатура ) Тогда
				ТаблицаХарактеристикСтрока.Характеристика = Неопределено;
				Продолжить;
			КонецЕсли;
			
			ХарактеристикаВладелец = ЗначениеРеквизитаОбъекта( ТаблицаХарактеристикСтрока.Характеристика, "Владелец" );
			Если ХарактеристикаВладелец <> Номенклатура Тогда
				ТаблицаХарактеристикСтрока.Характеристика = Неопределено;
			КонецЕсли;
			
		КонецЦикла;
		
	Иначе
		
		ТаблицаХарактеристикСтрока = ТаблицаХарактеристик.Добавить();
		
		ТаблицаХарактеристикСтрока.Идентификатор = ТаблицаНоменклатурТекущиеДанные.Идентификатор;
		ТаблицаХарактеристикСтрока.Характеристика = Неопределено;
		ТаблицаХарактеристикСтрока.Наименование = ТаблицаНоменклатурТекущиеДанные.Наименование;
		ТаблицаХарактеристикСтрока.Артикул = ТаблицаНоменклатурТекущиеДанные.Артикул;
		ТаблицаХарактеристикСтрока.Определен = Ложь;
		ТаблицаХарактеристикСтрока.ИдентификаторНоменклатуры = ТаблицаНоменклатурТекущиеДанные.Идентификатор;
		
	КонецЕсли;
	
	ЭлементыФормыЗаполнитьПризнакТоваровСоответствиеЗаполнено( ТаблицаНоменклатурТекущиеДанные.Идентификатор );
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаХарактеристикХарактеристикаПриИзменении(Элемент)
	
	ТаблицаХарактеристикТекущиеДанные = Элементы.ТаблицаХарактеристик.ТекущиеДанные;
	Если Не ЗначениеЗаполнено( ТаблицаХарактеристикТекущиеДанные.Характеристика ) Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаХарактеристикТекущиеДанные.ЗаполненоЧерезПоиск = Ложь;
	
	ХарактеристикаВладелец = ЗначениеРеквизитаОбъекта( ТаблицаХарактеристикТекущиеДанные.Характеристика, "Владелец" );
	Если ТипЗнч( ХарактеристикаВладелец ) = Тип( "СправочникСсылка.КатегорииНоменклатуры" ) Тогда
		ТаблицаХарактеристикТекущиеДанные.Характеристика = Неопределено;
		ОбщегоНазначенияКлиент.СообщитьПользователю( "Характеристики категорий номенклутуры не используются в обмене с ВКонтакте. Пожалуйста, выберите, другую характеристику. " );
	КонецЕсли;
	
	ЭлементыФормыЗаполнитьПризнакТоваровСоответствиеЗаполнено( ТаблицаХарактеристикТекущиеДанные.ИдентификаторНоменклатуры );
	
КонецПроцедуры

&НаКлиенте
Процедура ОтображатьСопоставленныеПриИзменении(Элемент)
	
	ЭлементФормыТаблицаНоменклатурОтборСтрокУстановить();
	
КонецПроцедуры

&НаКлиенте
Процедура ЭлементФормыИдентификаторыВКонтактеОбновить()
	Элементы.ДеревоКатегорийТоваровИдентификатор.Видимость = ЭтаФорма.ПоказатьИдентификаторыВКонтакте;
	Элементы.ТаблицаНоменклатурИдентификаторТовара.Видимость = ЭтаФорма.ПоказатьИдентификаторыВКонтакте;
	Элементы.ТаблицаНоменклатурИдентификаторКатегории.Видимость = ЭтаФорма.ПоказатьИдентификаторыВКонтакте;
	Элементы.ТаблицаХарактеристикИдентификатор.Видимость = ЭтаФорма.ПоказатьИдентификаторыВКонтакте;
КонецПроцедуры

&НаКлиенте
Процедура КнопкаПоказатьИдентификаторыВКонтактеПереключить(Команда)
	
	ЭтаФорма.ПоказатьИдентификаторыВКонтакте = Не ЭтаФорма.ПоказатьИдентификаторыВКонтакте;
	Элементы.КнопкаПоказатьИдентификаторыВКонтактеПереключить.Пометка = ЭтаФорма.ПоказатьИдентификаторыВКонтакте;
	
	ЭлементФормыИдентификаторыВКонтактеОбновить();
	
КонецПроцедуры

#КонецОбласти
