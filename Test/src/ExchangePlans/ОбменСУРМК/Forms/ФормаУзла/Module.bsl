#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИспользоватьРасширенныйРежимНастройкиУРМК = ИнтеграцияУРМКСлужебный.ИспользоватьРасширенныйРежимНастройкиУРМК();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	НастроитьФорму();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Оповестить("Запись_УзелПланаОбмена");
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	ОбменДаннымиСервер.ФормаУзлаПриЗаписиНаСервере(ТекущийОбъект, Отказ);
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	ОбменДаннымиКлиент.ФормаНастройкиПередЗакрытием(Отказ, ЭтотОбъект, ЗавершениеРаботы);
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПустаяСсылкаКассаККМ = Метаданные.ОпределяемыеТипы.КассаККМУРМК.Тип.ПривестиЗначение();
	ПустаяСсылкаОрганизация = Метаданные.ОпределяемыеТипы.ОрганизацияУРМК.Тип.ПривестиЗначение();
	
	ОрганизацияТипРеквизитаСтрокой = ОбщегоНазначения.СтроковоеПредставлениеТипа(ТипЗнч(ПустаяСсылкаОрганизация));
	ИмяРеквизитаОрганизация = ИнтеграцияУРМКСлужебный.ИменаРеквизитовПоТипу(ПустаяСсылкаКассаККМ, Тип(ОрганизацияТипРеквизитаСтрокой));
	
	Если ИмяРеквизитаОрганизация = "" Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого СтрокаДанных Из Объект.КассыККМ Цикл
		Если Объект.Организации.Количество() > 0 Тогда
			СтрокаДанных.Организация = СтрокаДанных.КассаККМ[ИмяРеквизитаОрганизация];
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)

	Если ИмяСобытия = "ОбновлениеОтборовНаУзле" Тогда
		ЭтотОбъект.Прочитать();
	КонецЕсли;
	
КонецПроцедуры
	
#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ИзменитьСоставКассККМ(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Ключ", Объект.УРМК);
	
	ОткрытьФорму("Справочник.УниверсальныеРабочиеМестаКассиров.ФормаОбъекта", ПараметрыФормы);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура НастроитьФорму()
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ГруппаЭлементыРасширенногоРежима",
		"Видимость",
		ИспользоватьРасширенныйРежимНастройкиУРМК);
		
	УстановитьДоступностьКоманды();
	СформироватьЗаголовокКомандыПодбора();
	
КонецПроцедуры

#Область РаботаСФизическимиЛицами

&НаКлиенте
Процедура ПодобратьФизическихЛиц(Команда)
	
	ОбработкаОповещения = Новый ОписаниеОповещения("ВыборСпискаФизическихЛиц", ЭтаФорма);
	ПараметрыОткрытияФормы = Новый Структура;
	ПараметрыОткрытияФормы.Вставить("АдресТаблицыФизическихЛиц", ВернутьАдресВременногоХранилищаТаблицыФизическихЛиц());
	
	ОткрытьФорму("ПланОбмена.ОбменСУРМК.Форма.ФормаПодбораФизическихЛиц", ПараметрыОткрытияФормы,ЭтаФорма, Новый УникальныйИдентификатор,
		, ,ОбработкаОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборСпискаФизическихЛиц(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	КоличествоЗаписейДо = Объект.СписокФизическихЛицДляВыгрузки.Количество();
	ЗагрузитьТаблицуФизическихЛиц(Результат);
	КоличествоЗаписейПосле = Объект.СписокФизическихЛицДляВыгрузки.Количество();
	
	Если КоличествоЗаписейДо <> КоличествоЗаписейПосле Тогда
		Модифицированность = Истина;
		СформироватьЗаголовокКомандыПодбора();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьТаблицуФизическихЛиц(АдресВременногоХранилища)
	
	ТаблицаФизЛиц = ПолучитьИзВременногоХранилища(АдресВременногоХранилища);
	
	Если ТаблицаФизЛиц.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Объект.СписокФизическихЛицДляВыгрузки.Загрузить(ТаблицаФизЛиц);
	
КонецПроцедуры

&НаСервере
Функция ВернутьАдресВременногоХранилищаТаблицыФизическихЛиц()
	
	Возврат ПоместитьВоВременноеХранилище(Объект.СписокФизическихЛицДляВыгрузки.Выгрузить());
	
КонецФункции

&НаКлиенте
Процедура УстановитьДоступностьКоманды()
	
	Элементы.ПодобратьФизическихЛиц.Доступность = Объект.ВыгружатьФизическихЛицЧастично;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгружатьФизическихЛицПриИзменении(Элемент)
	
	Если Объект.ВыгружатьФизическихЛиц Тогда
		Объект.ВыгружатьФизическихЛицЧастично = Ложь;
	КонецЕсли;
	
	УстановитьДоступностьКоманды();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгружатьФизическихЛицЧастичноПриИзменении(Элемент)
	
	Если Объект.ВыгружатьФизическихЛицЧастично Тогда
		Объект.ВыгружатьФизическихЛиц = Ложь;
	КонецЕсли;
	УстановитьДоступностьКоманды();
	СформироватьЗаголовокКомандыПодбора();
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьЗаголовокКомандыПодбора()
	КоличествоЗаписей = Объект.СписокФизическихЛицДляВыгрузки.Количество();
	Если КоличествоЗаписей = 0 ИЛИ НЕ Объект.ВыгружатьФизическихЛицЧастично Тогда
		ЗаголовокКоманды = НСтр("ru = 'Подобрать'");
	Иначе
		ЗаголовокКоманды = СтрШаблон(НСтр("ru = 'Список физических лиц (количество: %1)'"), КоличествоЗаписей);
	КонецЕсли;
	
	Элементы.ПодобратьФизическихЛиц.Заголовок = ЗаголовокКоманды;
КонецПроцедуры
#КонецОбласти

#КонецОбласти