
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// Параметры:
//   Ограничение - см. УправлениеДоступомПереопределяемый.ПриЗаполненииОграниченияДоступа.Ограничение.
//
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

// Определяет список команд заполнения.
//
// Параметры:
//   КомандыЗаполнения - ТаблицаЗначений - Таблица с командами заполнения. Для изменения.
//       См. описание 1 параметра процедуры ЗаполнениеОбъектовПереопределяемый.ПередДобавлениемКомандЗаполнения().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ЗаполнениеОбъектовПереопределяемый.ПередДобавлениемКомандЗаполнения().
//
//@skip-warning
Процедура ДобавитьКомандыЗаполнения(КомандыЗаполнения, Параметры) Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область ИнтерфейсПечати

// Сформировать печатные формы объектов
//
// Параметры:
//   МассивОбъектов - Массив - ссылки на объекты, которые нужно распечатать.
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати.
//   КоллекцияПечатныхФорм - ТаблицаЗначений - информация о табличных документах.
//   ОбъектыПечати - СписокЗначений - соответствие между объектами и именами областей в табличных документах.
//   ПараметрыВывода - Структура - дополнительные параметры сформированных табличных документов.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "ЖурналУчетаСчетовФактур");
	Если ПечатнаяФорма <> Неопределено Тогда
		
		ПечатнаяФорма.ТабличныйДокумент = Новый ТабличныйДокумент;
		ПечатнаяФорма.ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЖурналУчетаСчетовФактур";
		ПечатнаяФорма.ПолныйПутьКМакету = "Документ.ЖурналУчетаСчетовФактур.ЖурналУчетаСчетовФактур534";
		ПечатнаяФорма.СинонимМакета = НСтр("ru = 'Журнал учета счетов-фактур'");
		
		ПечатьЖурналаУчетаСчетовФактур(ПечатнаяФорма, МассивОбъектов, ОбъектыПечати);
		
	КонецЕсли;
	
	// параметры отправки печатных форм по электронной почте
	ЭлектроннаяПочтаУНФ.ЗаполнитьПараметрыОтправки(ПараметрыВывода.ПараметрыОтправки, МассивОбъектов,
		КоллекцияПечатныхФорм);
	
КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ЖурналУчетаСчетовФактур";
	КомандаПечати.Представление = НСтр("ru = 'Печать журнала счетов-фактур'");
	КомандаПечати.Порядок = 1;
	
КонецПроцедуры

#КонецОбласти

// Получает пакет электронных представлений документов.
//
// Параметры:
//  ВыгружаемыеДокументы - Массив - перечень документов для которых
//                 необходимо получить электронные представления в виде двоичных данных.
//  УникальныйИдентификатор - УникальныйИдентификатор - уникальный идентификатор по которому
//                 осуществляется привязка двоичных данных во временном хранилище.
//
// Возвращаемое значение:
//   Соответствие - соответствие переданных ссылок на документы и массива структур с полями:
//                 ТипФайла - Строка - описание типа файла;
//                 ИмяФайла - Строка - имя файла с расширением;
//                 АдресВременногоХранилища - Строка - адрес временного хранилища, в котором размещены двоичные данные файла.
//
Функция СформироватьЭлектронныеДокументы(ВыгружаемыеДокументы, УникальныйИдентификатор = Неопределено) Экспорт
	
	Если УникальныйИдентификатор = Неопределено Тогда
		УникальныйИдентификатор = Новый УникальныйИдентификатор;
	КонецЕсли;
	
	Результат = Новый Соответствие;
	
	Для Каждого ВыгружаемыйДокумент Из ВыгружаемыеДокументы Цикл
		
		ЭтоЖурналУчетаСчетовФактур = (ВыгружаемыйДокумент.Метаданные().Имя = "ЖурналУчетаСчетовФактур");
		Если ЭтоЖурналУчетаСчетовФактур Тогда
			ОбъектВыгрузки = ВыгружаемыйДокумент.ПолучитьОбъект();
			ФайлыВыгрузки = ОбъектВыгрузки.ВыгрузитьДокумент(УникальныйИдентификатор);
			
			МассивВыгрузки = Новый Массив;
			Для Каждого ФайлВыгрузки Из ФайлыВыгрузки Цикл
				
				ЭлементВыгрузки = Новый Структура;
				ЭлементВыгрузки.Вставить("ТипФайла", "ФайлВыгрузки");
				ЭлементВыгрузки.Вставить("ИмяФайла", ФайлВыгрузки.ИмяФайлаВыгрузки);
				ЭлементВыгрузки.Вставить("АдресВременногоХранилища", ФайлВыгрузки.АдресФайлаВыгрузки);
				
				МассивВыгрузки.Добавить(ЭлементВыгрузки);
			КонецЦикла;
			
			Результат.Вставить(ВыгружаемыйДокумент, МассивВыгрузки);
			
		Иначе
			Результат.Вставить(ВыгружаемыйДокумент, Неопределено);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Формирует таблицы данных для заполнения журнала счетов-фактур
//
// Параметры:
//  Организация - СправочникСсылка.Организации - организация отчета
//  Квартал - дата - период заполнения отчета
//
// Возвращаемое значение:
//  Структура;
//  - Выставленные - массив структур, содержащий данные таблицы ПолученныеСчетаФактуры
//  - Полученные - массив структур, содержащий данные таблицы ВыставленныеСчетаФактуры
//  - СведенийРНПТ - массив структур, содержащий данные таблицы СведенияПрослеживаемости
//
Функция ДанныеЖурналаСчетовФактурЗаКвартал(Организация, Квартал) Экспорт

	НачалоПериода = НачалоКвартала(Квартал);
	КонецПериода = КонецКвартала(Квартал);
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	СоздатьВТСписокСчетовФактурЗаКвартал(Организация, НачалоПериода, КонецПериода, МенеджерВременныхТаблиц);
	
	Возврат ДанныеЖурналаСчетовФактур(МенеджерВременныхТаблиц);
	
КонецФункции

// Формирует таблицы данных для заполнения журнала счетов-фактур
//
// Параметры:
//  СчетФактура - ДокументСсылка.СчетФактура, ДокументСсылка.СчетФактураПолученный
//
// Возвращаемое значение:
//  Структура;
//  - Выставленные - массив структур, содержащий данные таблицы ПолученныеСчетаФактуры
//  - Полученные - массив структур, содержащий данные таблицы ВыставленныеСчетаФактуры
//  - СведенийРНПТ - массив структур, содержащий данные таблицы СведенияПрослеживаемости
//
Функция ДанныеЖурналаСчетовФактурПоДокументу(СчетФактура) Экспорт

	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	СоздатьВТСписокСчетовФактурПоДокументу(СчетФактура, МенеджерВременныхТаблиц);
	
	Возврат ДанныеЖурналаСчетовФактур(МенеджерВременныхТаблиц);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПечатьЖурналаУчетаСчетовФактур(ОписаниеПечатнойФормы, МассивОбъектов, ОбъектыПечати)

	ТабличныйДокумент	= ОписаниеПечатнойФормы.ТабличныйДокумент;
	УстановитьПривилегированныйРежим(Истина);

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов",        МассивОбъектов);
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЖурналУчетаСчетовФактур.Ссылка КАК Ссылка,
	               |	ЖурналУчетаСчетовФактур.ПредставлениеОтчета КАК ПредставлениеОтчета
	               |ИЗ
	               |	Документ.ЖурналУчетаСчетовФактур КАК ЖурналУчетаСчетовФактур
	               |ГДЕ
	               |	ЖурналУчетаСчетовФактур.Ссылка В(&МассивОбъектов)";
	ВыборкаПоОбъектам = Запрос.Выполнить().Выбрать();

	ПервыйДокумент = Истина;
	Пока ВыборкаПоОбъектам.Следующий() Цикл
	
		Если НЕ ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;

		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ПредставлениеОтчета = ВыборкаПоОбъектам.ПредставлениеОтчета.Получить();
		Если ПредставлениеОтчета <> Неопределено Тогда 
			ТабличныйДокумент.Вывести(ПредставлениеОтчета);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Функция НомерСчетаФактурыНаПечать(Префикс, ЦифровойИндексОбособленногоПодразделения, Номер, Дата)
	НомерНаПечать = ПечатьДокументовУНФ.ПолучитьНомерНаПечатьСУчетомДатыДокумента(Дата, Номер, Префикс);

	Если ЗначениеЗаполнено(ЦифровойИндексОбособленногоПодразделения) Тогда

		НомерНаПечать = НомерНаПечать + "/" + СокрЛП(ЦифровойИндексОбособленногоПодразделения);

	КонецЕсли;
	Возврат НомерНаПечать;
КонецФункции

#Область ПолучениеДанныхЗаполнения

Процедура СоздатьВТСписокСчетовФактурЗаКвартал(Организация, НачалоПериода, КонецПериода, МенеджерВременныхТаблиц)
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	СчетФактура.Ссылка КАК СчетФактура
	               |ПОМЕСТИТЬ ВТСписокСчетовФактур
	               |ИЗ
	               |	Документ.СчетФактура КАК СчетФактура
	               |ГДЕ
	               |	СчетФактура.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	               |	И НЕ СчетФактура.ПометкаУдаления
	               |	И СчетФактура.Организация = &Организация
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	СчетФактураПолученный.Ссылка
	               |ИЗ
	               |	Документ.СчетФактураПолученный КАК СчетФактураПолученный
	               |ГДЕ
	               |	НЕ СчетФактураПолученный.ПометкаУдаления
	               |	И СчетФактураПолученный.Организация = &Организация
	               |	И ВЫБОР
	               |			КОГДА СчетФактураПолученный.ДатаВходящегоДокумента > ДАТАВРЕМЯ(1, 1, 1)
	               |				ТОГДА СчетФактураПолученный.ДатаВходящегоДокумента
	               |			ИНАЧЕ СчетФактураПолученный.Дата
	               |		КОНЕЦ МЕЖДУ &НачалоПериода И &КонецПериода";	
	Запрос.Выполнить();
КонецПроцедуры

Процедура СоздатьВТСписокСчетовФактурПоДокументу(СчетФактура, МенеджерВременныхТаблиц)

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("СчетФактура", СчетФактура);
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	СчетФактура.Ссылка КАК СчетФактура
	               |ПОМЕСТИТЬ ВТСписокСчетовФактур
	               |ИЗ
	               |	Документ.СчетФактура КАК СчетФактура
	               |ГДЕ
	               |	СчетФактура.Ссылка = &СчетФактура
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	СчетФактураПолученный.Ссылка
	               |ИЗ
	               |	Документ.СчетФактураПолученный КАК СчетФактураПолученный
	               |ГДЕ
	               |	СчетФактураПолученный.Ссылка = &СчетФактура";	
	Запрос.Выполнить();
	
КонецПроцедуры

Функция ДанныеЖурналаСчетовФактур(МенеджерВременныхТаблиц)
	
	ДанныеСчетовФактур = Новый Структура;
	ДанныеСчетовФактур.Вставить("Полученные", Новый Массив);
	ДанныеСчетовФактур.Вставить("Выставленные", Новый Массив);
	ДанныеСчетовФактур.Вставить("СведенияРНПТ", Новый Массив);
	
	МетаданныеДокумента = Метаданные.Документы.ЖурналУчетаСчетовФактур;
	КолонкиВыставленныеСчФ = КолонкиТабличнойЧасти(МетаданныеДокумента.ТабличныеЧасти.ВыставленныеСчетаФактуры);
	КолонкиПолученныеСчФ = КолонкиТабличнойЧасти(МетаданныеДокумента.ТабличныеЧасти.ПолученныеСчетаФактуры);
	КолонкиПрослеживаемость = КолонкиТабличнойЧасти(МетаданныеДокумента.ТабличныеЧасти.СведенияПрослеживаемости);
	
	СоздатьВТСчетаФактурыВЖурнал(МенеджерВременныхТаблиц);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = ТекстЗапросаСчетаФактурыВыданные();
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗаписьЖурнала = Новый Структура(КолонкиВыставленныеСчФ);
		ЗаполнитьЗначенияСвойств(ЗаписьЖурнала, Выборка);
		ДанныеСчетовФактур.Выставленные.Добавить(ЗаписьЖурнала);
		Если ЗначениеЗаполнено(Выборка.НомерСчетаФактуры) Тогда
			ЗаписьЖурнала.НомерСчетаФактуры = НомерСчетаФактурыНаПечать(Выборка.Префикс,
				Выборка.ЦифровойИндексОбособленногоПодразделения, Выборка.НомерСчетаФактуры, Выборка.ДатаСчетаФактуры);
		КонецЕсли;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = ТекстЗапросаСчетаФактурыПолученные();
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗаписьЖурнала = Новый Структура(КолонкиПолученныеСчФ);
		ЗаполнитьЗначенияСвойств(ЗаписьЖурнала, Выборка);
		ДанныеСчетовФактур.Полученные.Добавить(ЗаписьЖурнала);
	КонецЦикла;
	
	СведенияРНПТ = ДанныеПрослеживаемости(Запрос.МенеджерВременныхТаблиц);
	Для Каждого Строка Из СведенияРНПТ Цикл
		ДанныеПрослеживаемости = Новый Структура(КолонкиПрослеживаемость);
		ЗаполнитьЗначенияСвойств(ДанныеПрослеживаемости, Строка);
		ДанныеСчетовФактур.СведенияРНПТ.Добавить(ДанныеПрослеживаемости);
	КонецЦикла;
	
	Возврат ДанныеСчетовФактур;
КонецФункции

Процедура СоздатьВТСчетаФактурыВЖурнал(МенеджерВременныхТаблиц)
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	СчетФактураПолученныйДокументыОснования.Ссылка КАК СчетФактура,
	               |	СчетФактураПолученный.Организация КАК Организация,
	               |	ОтчетКомитентуЗапасы.Партия КАК Партия,
	               |	ВЫБОР
	               |		КОГДА ОтчетКомитентуЗапасы.Покупатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	               |			ТОГДА ЕСТЬNULL(РасходнаяНакладнаяОснованиеОтчета.Контрагент, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка))
	               |		ИНАЧЕ ОтчетКомитентуЗапасы.Покупатель
	               |	КОНЕЦ КАК Покупатель,
	               |	ВЫБОР
	               |		КОГДА ОтчетКомитентуЗапасы.ДатаРеализации = ДАТАВРЕМЯ(1, 1, 1)
	               |			ТОГДА ЕСТЬNULL(НАЧАЛОПЕРИОДА(РасходнаяНакладнаяОснованиеОтчета.Дата, ДЕНЬ), ДАТАВРЕМЯ(1, 1, 1))
	               |		ИНАЧЕ ОтчетКомитентуЗапасы.ДатаРеализации
	               |	КОНЕЦ КАК ДатаРеализации,
	               |	ОтчетКомитентуЗапасы.Сумма КАК Сумма,
	               |	ОтчетКомитентуЗапасы.СуммаНДС КАК СуммаНДС,
	               |	СчетФактураПолученный.ВидОперации КАК ВидОперации,
	               |	СчетФактураПолученный.ВалютаДокумента КАК Валюта,
	               |	СчетФактураПолученный.Контрагент КАК Контрагент,
	               |	СчетФактураПолученный.Дата КАК Дата,
	               |	СчетФактураПолученный.ДатаВходящегоДокумента КАК ДатаСчетаФактуры,
	               |	СчетФактураПолученный.НомерВходящегоДокумента КАК НомерСчетаФактуры,
	               |	ВЫБОР
	               |		КОГДА ОтчетКомитентуЗапасы.СуммаНДС = 0
	               |				И ОтчетКомитентуЗапасы.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.ВидыСтавокНДС.БезНДС)
	               |			ТОГДА ИСТИНА
	               |		ИНАЧЕ ЛОЖЬ
	               |	КОНЕЦ КАК СчетФактураБезНДС,
	               |	СчетФактураПолученный.КодСпособаВыставления КАК КодСпособаВыставления,
	               |	ВЫБОР
	               |		КОГДА СчетФактураПолученный.ДатаПолучения > ДАТАВРЕМЯ(1, 1, 1)
	               |			ТОГДА СчетФактураПолученный.ДатаПолучения
	               |		ИНАЧЕ СчетФактураПолученный.Дата
	               |	КОНЕЦ КАК ДатаПередачиПолучения,
	               |	""01"" КАК КодВидаОперации,
	               |	2 КАК КодВидаСделки,
	               |	ОтчетКомитентуЗапасы.Номенклатура КАК Номенклатура
	               |ПОМЕСТИТЬ ВТСчетаФактурыВЖурналЧасть2
	               |ИЗ
	               |	Документ.СчетФактураПолученный.ДокументыОснования КАК СчетФактураПолученныйДокументыОснования
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетКомитенту КАК ОтчетКомитенту
	               |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетКомитенту.Запасы КАК ОтчетКомитентуЗапасы
	               |			ПО (ОтчетКомитентуЗапасы.Ссылка = ОтчетКомитенту.Ссылка)
	               |				И (ОтчетКомитенту.Проведен)
	               |			ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасходнаяНакладная КАК РасходнаяНакладнаяОснованиеОтчета
	               |			ПО ОтчетКомитенту.ДокументОснование = РасходнаяНакладнаяОснованиеОтчета.Ссылка
	               |		ПО СчетФактураПолученныйДокументыОснования.ДокументОснование = ОтчетКомитенту.Ссылка
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный КАК СчетФактураПолученный
	               |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСписокСчетовФактур КАК ВТСписокСчетовФактур
	               |			ПО СчетФактураПолученный.Ссылка = ВТСписокСчетовФактур.СчетФактура
	               |		ПО СчетФактураПолученныйДокументыОснования.Ссылка = СчетФактураПолученный.Ссылка
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	СчетФактураПолученныйДокументыОснования.Ссылка,
	               |	СчетФактураПолученный.Организация,
	               |	ОтчетКомитентуЗапасы.Партия,
	               |	ОтчетКомитентуЗапасы.Сумма,
	               |	ОтчетКомитентуЗапасы.СуммаНДС,
	               |	СчетФактураПолученный.ВидОперации,
	               |	СчетФактураПолученный.ВалютаДокумента,
	               |	СчетФактураПолученный.Контрагент,
	               |	СчетФактураПолученный.Дата,
	               |	СчетФактураПолученный.ДатаВходящегоДокумента,
	               |	СчетФактураПолученный.НомерВходящегоДокумента,
	               |	СчетФактураПолученный.КодСпособаВыставления,
	               |	ВЫБОР
	               |		КОГДА ОтчетКомитентуЗапасы.СуммаНДС = 0
	               |				И ОтчетКомитентуЗапасы.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.ВидыСтавокНДС.БезНДС)
	               |			ТОГДА ИСТИНА
	               |		ИНАЧЕ ЛОЖЬ
	               |	КОНЕЦ,
	               |	ВЫБОР
	               |		КОГДА СчетФактураПолученный.ДатаПолучения > ДАТАВРЕМЯ(1, 1, 1)
	               |			ТОГДА СчетФактураПолученный.ДатаПолучения
	               |		ИНАЧЕ СчетФактураПолученный.Дата
	               |	КОНЕЦ,
	               |	ОтчетКомитентуЗапасы.Номенклатура,
	               |	ВЫБОР
	               |		КОГДА ОтчетКомитентуЗапасы.Покупатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	               |			ТОГДА ЕСТЬNULL(РасходнаяНакладнаяОснованиеОтчета.Контрагент, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка))
	               |		ИНАЧЕ ОтчетКомитентуЗапасы.Покупатель
	               |	КОНЕЦ,
	               |	ВЫБОР
	               |		КОГДА ОтчетКомитентуЗапасы.ДатаРеализации = ДАТАВРЕМЯ(1, 1, 1)
	               |			ТОГДА ЕСТЬNULL(НАЧАЛОПЕРИОДА(РасходнаяНакладнаяОснованиеОтчета.Дата, ДЕНЬ), ДАТАВРЕМЯ(1, 1, 1))
	               |		ИНАЧЕ ОтчетКомитентуЗапасы.ДатаРеализации
	               |	КОНЕЦ
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СчетФактураВыставленный.Ссылка КАК СчетФактура,
	               |	СчетФактураВыставленный.Организация КАК Организация,
	               |	СчетФактураВыставленный.ВидОперации КАК ВидОперации,
	               |	СчетФактураВыставленный.ВалютаДокумента КАК Валюта,
	               |	СчетФактураВыставленный.Контрагент КАК Контрагент,
	               |	СчетФактураВыставленный.Дата КАК Дата,
	               |	СчетФактураВыставленный.Номер КАК НомерСчетаФактуры,
	               |	СчетФактураВыставленный.Дата КАК ДатаСчетаФактуры,
	               |	СчетФактураВыставленный.КодСпособаВыставления КАК КодСпособаВыставления,
	               |	ВЫБОР
	               |		КОГДА СчетФактураВыставленный.ДатаВыставления > ДАТАВРЕМЯ(1, 1, 1)
	               |			ТОГДА СчетФактураВыставленный.ДатаВыставления
	               |		ИНАЧЕ СчетФактураВыставленный.Дата
	               |	КОНЕЦ КАК ДатаПередачиПолучения,
	               |	""01"" КАК КодВидаОперации,
	               |	РасходнаяНакладнаяЗапасы.Сумма КАК Сумма,
	               |	РасходнаяНакладнаяЗапасы.СуммаНДС КАК СуммаНДС,
	               |	ЕСТЬNULL(ВТСчетаФактурыПолученные.СчетФактура, ЗНАЧЕНИЕ(Документ.СчетФактураПолученный.ПустаяСсылка)) КАК СчетФактураКомитента,
	               |	ВЫБОР
	               |		КОГДА РасходнаяНакладнаяЗапасы.СуммаНДС = 0
	               |				И РасходнаяНакладнаяЗапасы.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.ВидыСтавокНДС.БезНДС)
	               |			ТОГДА ИСТИНА
	               |		ИНАЧЕ ЛОЖЬ
	               |	КОНЕЦ КАК СчетФактураБезНДС,
	               |	РасходнаяНакладнаяЗапасы.ИдентификаторСтроки КАК ДокументЗапасыИдСтроки,
	               |	РасходнаяНакладнаяЗапасы.Ссылка КАК ДокументЗапасы,
	               |	РасходнаяНакладнаяЗапасы.Номенклатура КАК Номенклатура
	               |ПОМЕСТИТЬ ВТСчетаФактурыВЖурналЧасть1
	               |ИЗ
	               |	Документ.СчетФактура.ДокументыОснования КАК СчетФактураДокументыОснования
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактура КАК СчетФактураВыставленный
	               |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСписокСчетовФактур КАК ВТСписокСчетовФактур
	               |			ПО СчетФактураВыставленный.Ссылка = ВТСписокСчетовФактур.СчетФактура
	               |		ПО СчетФактураДокументыОснования.Ссылка = СчетФактураВыставленный.Ссылка
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РасходнаяНакладная.Запасы КАК РасходнаяНакладнаяЗапасы
	               |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПартииНоменклатуры КАК ПартииНоменклатуры
	               |			ПО РасходнаяНакладнаяЗапасы.Партия = ПартииНоменклатуры.Ссылка
	               |				И (ПартииНоменклатуры.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПартий.ТоварыНаКомиссии))
	               |			ЛЕВОЕ СОЕДИНЕНИЕ ВТСчетаФактурыВЖурналЧасть2 КАК ВТСчетаФактурыПолученные
	               |			ПО РасходнаяНакладнаяЗапасы.Партия = ВТСчетаФактурыПолученные.Партия
	               |				И РасходнаяНакладнаяЗапасы.Ссылка.Контрагент = ВТСчетаФактурыПолученные.Покупатель
	               |				И (ВТСчетаФактурыПолученные.ДатаРеализации = ДАТАВРЕМЯ(1, 1, 1)
	               |					ИЛИ НАЧАЛОПЕРИОДА(РасходнаяНакладнаяЗапасы.Ссылка.Дата, ДЕНЬ) = НАЧАЛОПЕРИОДА(ВТСчетаФактурыПолученные.ДатаРеализации, ДЕНЬ))
	               |		ПО СчетФактураДокументыОснования.ДокументОснование = РасходнаяНакладнаяЗапасы.Ссылка";	
	Запрос.Выполнить();
КонецПроцедуры

Функция ТекстЗапросаСчетаФактурыПолученные()
	Текст = "ВЫБРАТЬ
	        |	ВТСчетаФактурыВЖурнал.СчетФактура КАК СчетФактура,
	        |	ВТСчетаФактурыВЖурнал.Организация КАК Организация,
	        |	ВТСчетаФактурыВЖурнал.ВидОперации КАК ВидОперации,
	        |	СУММА(ВТСчетаФактурыВЖурнал.Сумма) КАК СуммаДокумента,
	        |	СУММА(ВТСчетаФактурыВЖурнал.СуммаНДС) КАК СуммаНДС,
	        |	ВТСчетаФактурыВЖурнал.Валюта КАК Валюта,
	        |	ВТСчетаФактурыВЖурнал.Контрагент КАК Контрагент,
	        |	ВТСчетаФактурыВЖурнал.Дата КАК Дата,
	        |	ВТСчетаФактурыВЖурнал.НомерСчетаФактуры КАК НомерСчетаФактуры,
	        |	ВТСчетаФактурыВЖурнал.ДатаСчетаФактуры КАК ДатаСчетаФактуры,
	        |	МИНИМУМ(ВТСчетаФактурыВЖурнал.СчетФактураБезНДС) КАК СчетФактураБезНДС,
	        |	ВТСчетаФактурыВЖурнал.КодСпособаВыставления КАК КодСпособаВыставления,
	        |	ВТСчетаФактурыВЖурнал.ДатаПередачиПолучения КАК ДатаПередачиПолучения,
	        |	ВТСчетаФактурыВЖурнал.КодВидаОперации КАК КодВидаОперации,
	        |	ВТСчетаФактурыВЖурнал.КодВидаСделки КАК КодВидаСделки
	        |ИЗ
	        |	ВТСчетаФактурыВЖурналЧасть2 КАК ВТСчетаФактурыВЖурнал
	        |
	        |СГРУППИРОВАТЬ ПО
	        |	ВТСчетаФактурыВЖурнал.СчетФактура,
	        |	ВТСчетаФактурыВЖурнал.Организация,
	        |	ВТСчетаФактурыВЖурнал.ВидОперации,
	        |	ВТСчетаФактурыВЖурнал.Валюта,
	        |	ВТСчетаФактурыВЖурнал.Контрагент,
	        |	ВТСчетаФактурыВЖурнал.Дата,
	        |	ВТСчетаФактурыВЖурнал.НомерСчетаФактуры,
	        |	ВТСчетаФактурыВЖурнал.ДатаСчетаФактуры,
	        |	ВТСчетаФактурыВЖурнал.КодСпособаВыставления,
	        |	ВТСчетаФактурыВЖурнал.ДатаПередачиПолучения,
	        |	ВТСчетаФактурыВЖурнал.КодВидаОперации,
	        |	ВТСчетаФактурыВЖурнал.КодВидаСделки
	        |
	        |УПОРЯДОЧИТЬ ПО
	        |	ДатаПередачиПолучения";
	
	Возврат Текст;
КонецФункции

Функция ТекстЗапросаСчетаФактурыВыданные()
	Текст = "ВЫБРАТЬ
	        |	ВТСчетаФактурыВыданные.СчетФактура КАК СчетФактура,
	        |	ВТСчетаФактурыВыданные.Организация КАК Организация,
	        |	ВТСчетаФактурыВыданные.ВидОперации КАК ВидОперации,
	        |	ВТСчетаФактурыВыданные.Валюта КАК Валюта,
	        |	ВТСчетаФактурыВыданные.Контрагент КАК Контрагент,
	        |	ВТСчетаФактурыВыданные.Дата КАК Дата,
	        |	ВТСчетаФактурыВыданные.НомерСчетаФактуры КАК НомерСчетаФактуры,
	        |	ВТСчетаФактурыВыданные.ДатаСчетаФактуры КАК ДатаСчетаФактуры,
	        |	ВТСчетаФактурыВыданные.КодСпособаВыставления КАК КодСпособаВыставления,
	        |	ВТСчетаФактурыВыданные.ДатаПередачиПолучения КАК ДатаПередачиПолучения,
	        |	ВТСчетаФактурыВыданные.КодВидаОперации КАК КодВидаОперации,
	        |	СУММА(ВТСчетаФактурыВыданные.Сумма) КАК СуммаДокумента,
	        |	СУММА(ВТСчетаФактурыВыданные.СуммаНДС) КАК СуммаНДС,
	        |	ВТСчетаФактурыВыданные.СчетФактураКомитента КАК СчетФактураКомитента,
	        |	МИНИМУМ(ВТСчетаФактурыВыданные.СчетФактураБезНДС) КАК СчетФактураБезНДС,
	        |	Организации.Префикс КАК Префикс,
	        |	ВЫБОР
	        |		КОГДА НЕ ГоловныеОрганизации.Ссылка ЕСТЬ NULL
	        |				И ГоловныеОрганизации.Ссылка <> Организации.Ссылка
	        |			ТОГДА Организации.ЦифровойИндексОбособленногоПодразделения
	        |		ИНАЧЕ """"
	        |	КОНЕЦ КАК ЦифровойИндексОбособленногоПодразделения
	        |ИЗ
	        |	ВТСчетаФактурыВЖурналЧасть1 КАК ВТСчетаФактурыВыданные
	        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
	        |			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК ГоловныеОрганизации
	        |			ПО Организации.ГоловнаяОрганизация = ГоловныеОрганизации.Ссылка
	        |		ПО ВТСчетаФактурыВыданные.Организация = Организации.Ссылка
	        |
	        |СГРУППИРОВАТЬ ПО
	        |	ВТСчетаФактурыВыданные.ВидОперации,
	        |	ВТСчетаФактурыВыданные.ДатаПередачиПолучения,
	        |	ВТСчетаФактурыВыданные.Дата,
	        |	ВТСчетаФактурыВыданные.СчетФактура,
	        |	ВТСчетаФактурыВыданные.СчетФактураКомитента,
	        |	ВТСчетаФактурыВыданные.ДатаСчетаФактуры,
	        |	ВТСчетаФактурыВыданные.КодВидаОперации,
	        |	ВТСчетаФактурыВыданные.Контрагент,
	        |	ВТСчетаФактурыВыданные.Валюта,
	        |	ВТСчетаФактурыВыданные.НомерСчетаФактуры,
	        |	ВТСчетаФактурыВыданные.Организация,
	        |	ВТСчетаФактурыВыданные.КодСпособаВыставления,
	        |	Организации.Префикс,
	        |	ВЫБОР
	        |		КОГДА НЕ ГоловныеОрганизации.Ссылка ЕСТЬ NULL
	        |				И ГоловныеОрганизации.Ссылка <> Организации.Ссылка
	        |			ТОГДА Организации.ЦифровойИндексОбособленногоПодразделения
	        |		ИНАЧЕ """"
	        |	КОНЕЦ
	        |
	        |УПОРЯДОЧИТЬ ПО
	        |	ДатаПередачиПолучения";
	
	
	Возврат Текст;
КонецФункции

Функция ДанныеПрослеживаемости(МенеджерВременныхТаблиц)
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВТСчетаФактурыВЖурнал.СчетФактура КАК СчетФактура,
	               |	ВТСчетаФактурыВЖурнал.СчетФактураКомитента КАК СчетФактураПолученный,
	               |	РасходнаяНакладнаяСведенияПрослеживаемости.РНПТ КАК РНПТ,
	               |	РасходнаяНакладнаяСведенияПрослеживаемости.Количество КАК Количество,
	               |	РасходнаяНакладнаяСведенияПрослеживаемости.КоличествоПрослеживаемости КАК КоличествоПрослеживаемости,
	               |	РасходнаяНакладнаяСведенияПрослеживаемости.СтранаПроисхождения КАК СтранаПроисхождения,
	               |	ВТСчетаФактурыВЖурнал.Номенклатура КАК Номенклатура,
	               |	ВТСчетаФактурыВЖурнал.Сумма - ВТСчетаФактурыВЖурнал.СуммаНДС КАК Сумма,
	               |	РасходнаяНакладнаяСведенияПрослеживаемости.ИдентификаторСтроки КАК ИдентификаторСтроки
	               |ИЗ
	               |	ВТСчетаФактурыВЖурналЧасть1 КАК ВТСчетаФактурыВЖурнал
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РасходнаяНакладная.СведенияПрослеживаемости КАК РасходнаяНакладнаяСведенияПрослеживаемости
	               |		ПО ВТСчетаФактурыВЖурнал.ДокументЗапасы = РасходнаяНакладнаяСведенияПрослеживаемости.Ссылка
	               |			И ВТСчетаФактурыВЖурнал.ДокументЗапасыИдСтроки = РасходнаяНакладнаяСведенияПрослеживаемости.ИдентификаторСтроки
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ВТСчетаФактурыВЖурнал.СчетФактура,
	               |	ВТСчетаФактурыВЖурнал.СчетФактура,
	               |	РасходнаяНакладнаяСведенияПрослеживаемости.РНПТ,
	               |	РасходнаяНакладнаяСведенияПрослеживаемости.Количество,
	               |	РасходнаяНакладнаяСведенияПрослеживаемости.КоличествоПрослеживаемости,
	               |	РасходнаяНакладнаяСведенияПрослеживаемости.СтранаПроисхождения,
	               |	ВТСчетаФактурыВЖурнал.Номенклатура,
	               |	ВТСчетаФактурыВЖурнал.Сумма - ВТСчетаФактурыВЖурнал.СуммаНДС,
	               |	РасходнаяНакладнаяСведенияПрослеживаемости.ИдентификаторСтроки
	               |ИЗ
	               |	ВТСчетаФактурыВЖурналЧасть2 КАК ВТСчетаФактурыВЖурнал
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РасходнаяНакладная.Запасы КАК РасходнаяНакладнаяЗапасы
	               |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РасходнаяНакладная.СведенияПрослеживаемости КАК РасходнаяНакладнаяСведенияПрослеживаемости
	               |			ПО РасходнаяНакладнаяЗапасы.Ссылка = РасходнаяНакладнаяСведенияПрослеживаемости.Ссылка
	               |				И РасходнаяНакладнаяЗапасы.ИдентификаторСтроки = РасходнаяНакладнаяСведенияПрослеживаемости.ИдентификаторСтроки
	               |		ПО (ВТСчетаФактурыВЖурнал.Покупатель = РасходнаяНакладнаяЗапасы.Ссылка.Контрагент)
	               |			И (ВТСчетаФактурыВЖурнал.ДатаРеализации = ДАТАВРЕМЯ(1, 1, 1)
	               |				ИЛИ НАЧАЛОПЕРИОДА(РасходнаяНакладнаяЗапасы.Ссылка.Дата, ДЕНЬ) = НАЧАЛОПЕРИОДА(ВТСчетаФактурыВЖурнал.ДатаРеализации, ДЕНЬ))
	               |			И ВТСчетаФактурыВЖурнал.Партия = РасходнаяНакладнаяЗапасы.Партия";

	
	Прослеживаемость = Запрос.Выполнить().Выгрузить();
	
	// Одной строке расходной накладной может соответствовать несколько РНПТ, в этому случае нужно распределить сумму
	КолонкиПоиска = "СчетФактура, СчетФактураПолученный, ИдентификаторСтроки";
	КолонкиТаблицыСумм = КолонкиПоиска + ", Сумма";
	
	СуммыПроданного = Прослеживаемость.Скопировать( , КолонкиТаблицыСумм);
	СуммыПроданного.Свернуть(КолонкиТаблицыСумм);
	Для Каждого СтрокаСуммы Из СуммыПроданного Цикл
		ОтборРНПТ = Новый Структура(КолонкиПоиска);
		ЗаполнитьЗначенияСвойств(ОтборРНПТ, СтрокаСуммы);
		СтрокиРНПТ = Прослеживаемость.НайтиСтроки(ОтборРНПТ);
		Если СтрокиРНПТ.Количество() > 1 Тогда
			Коэффициенты = Новый Массив;
			Для Каждого СтрокаКоличество Из СтрокиРНПТ Цикл
				Коэффициенты.Добавить(СтрокаКоличество.Количество);
			КонецЦикла;
			СуммыРНПТ = ОбщегоНазначенияКлиентСервер.РаспределитьСуммуПропорциональноКоэффициентам(СтрокаСуммы.Сумма, Коэффициенты, 2);
			Для Индекс = 0 По СтрокиРНПТ.Количество() - 1 Цикл
				СтрокиРНПТ[Индекс].Сумма = СуммыРНПТ[Индекс];
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Прослеживаемость;
КонецФункции

Функция КолонкиТабличнойЧасти(ТабличнаяЧасть)
	
	Реквизиты = Новый Структура;
	Для Каждого Колонка Из ТабличнаяЧасть.Реквизиты Цикл
		Реквизиты.Вставить(Колонка.Имя, Неопределено);
	КонецЦикла;
	
	Возврат Новый ФиксированнаяСтруктура(Реквизиты);
КонецФункции


#КонецОбласти

#КонецОбласти

#КонецЕсли