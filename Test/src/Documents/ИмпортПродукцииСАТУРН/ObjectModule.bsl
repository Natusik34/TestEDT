
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	
	Если ТипДанныхЗаполнения = Тип("Структура")Тогда
	
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
		
	ИначеЕсли ТипДанныхЗаполнения = Тип("СправочникСсылка.ИмпортируемаяПартияСАТУРН")
		ИЛИ (ТипДанныхЗаполнения = Тип("Массив")
		И ДанныеЗаполнения.Количество()
		И ТипЗнч(ДанныеЗаполнения[0]) = Тип("СправочникСсылка.ИмпортируемаяПартияСАТУРН"))Тогда 
		
		ЗаполнитьИмпортПродукцииПоДаннымПартииСАТУРН(ДанныеЗаполнения);
		
	КонецЕсли;
	
	ИнтеграцияСАТУРНПереопределяемый.ОбработкаЗаполненияДокумента(ЭтотОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ЗаполнитьОбъектПоСтатистике();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	МассивНепроверяемыхРеквизитов.Добавить("Товары.Серия");
	
	ИнтеграцияСАТУРНПереопределяемый.ПриОпределенииОбработкиПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	Для Каждого СтрокаТабличнойЧасти Из Товары Цикл
		
		Если Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.ИмпортируемаяПартия) Тогда
			
			СтрокаТабличнойЧасти.Идентификатор = "";
			
		Иначе
			
			СтрокаТабличнойЧасти.Идентификатор = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаТабличнойЧасти.ИмпортируемаяПартия, "Идентификатор");
			
		КонецЕсли;
		
	КонецЦикла;
	
	ИнтеграцияСАТУРН.ЗаписатьСоответствиеНоменклатуры(ЭтотОбъект);
	
	ИнтеграцияИСПереопределяемый.ПередЗаписьюОбъекта(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ИнтеграцияСАТУРН.ЗаписатьСтатусДокументаПоУмолчанию(ЭтотОбъект);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Для Каждого СтрокаТабличнойЧасти Из Товары Цикл
		
		СтрокаТабличнойЧасти.Идентификатор       = "";
		СтрокаТабличнойЧасти.ИмпортируемаяПартия = Справочники.ИмпортируемаяПартияСАТУРН.ПустаяСсылка();
		СтрокаТабличнойЧасти.Партия        = Справочники.ПартииСАТУРН.ПустаяСсылка();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Инициализация дополнительных свойств для проведения документа
	ИнтеграцияИС.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	
	// Инициализация данных документа
	Документы.ИмпортПродукцииСАТУРН.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	ИнтеграцияИС.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	РегистрыНакопления.ОстаткиПартийСАТУРН.ОтразитьДвижения(ДополнительныеСвойства, Движения, Отказ);
	РегистрыСведений.МестаХраненияПартийСАТУРН.ОтразитьДвижения(ДополнительныеСвойства, Движения, Отказ);
	ИнтеграцияИСПереопределяемый.ОтразитьДвижения(ДополнительныеСвойства, Движения, Отказ);
	
	ИнтеграцияИС.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ИнтеграцияИСПереопределяемый.ОбработкаПроведения(ЭтотОбъект, Отказ, РежимПроведения);
	
	ИнтеграцияИС.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбработкаЗаполнения

Процедура ЗаполнитьОбъектПоСтатистике()
	
	ДанныеСтатистики = ЗаполнениеОбъектовПоСтатистикеСАТУРН.ДанныеЗаполненияИмпортПродукцииСАТУРН(ОрганизацияСАТУРН);
	
	Для Каждого КлючИЗначение Из ДанныеСтатистики Цикл
		ЗаполнениеОбъектовПоСтатистикеСАТУРН.ЗаполнитьПустойРеквизит(ЭтотОбъект, ДанныеСтатистики, КлючИЗначение.Ключ);
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьИмпортПродукцииПоДаннымПартииСАТУРН(ДанныеЗаполнения, ДополнитьДокумент = Ложь)

	РезультатДанныеИмпортныхПартий = ДанныеИмпортныхПартий(ДанныеЗаполнения);
	
	ДанныеШапки = РезультатДанныеИмпортныхПартий.ДанныеШапки;
	ДанныеТЧ    = РезультатДанныеИмпортныхПартий.ДанныеПартий;
	
	Если ДанныеШапки.Следующий() Тогда
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеШапки);
		
	КонецЕсли;
	
	Товары.Очистить();
	
	Пока ДанныеТЧ.Следующий() Цикл
		
		НоваяСтрокаТоваров = Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаТоваров, ДанныеТЧ);
		
	КонецЦикла;

КонецПроцедуры

Функция ДанныеИмпортныхПартий(МассивИмпортныхПартий)
	
	СтруктураВозврата = Новый Структура("ДанныеШапки, ДанныеПартий");
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ИмпортируемаяПартияСАТУРН.ОрганизацияСАТУРН КАК ОрганизацияСАТУРН,
		|	ИмпортируемаяПартияСАТУРН.МестоХранения     КАК МестоХранения,
		|	ИмпортируемаяПартияСАТУРН.ДатаПолучения     КАК ДатаПолучения,
		|	ИмпортируемаяПартияСАТУРН.НомерТТНАРГУС     КАК НомерТТНАРГУС
		|ИЗ
		|	Справочник.ИмпортируемаяПартияСАТУРН КАК ИмпортируемаяПартияСАТУРН
		|ГДЕ
		|	ИмпортируемаяПартияСАТУРН.Ссылка В (&МассивСсылок)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ИмпортируемаяПартияСАТУРН.Ссылка                          КАК ИмпортируемаяПартия,
		|	ИмпортируемаяПартияСАТУРН.ПАТ                             КАК ПАТ,
		|	ИмпортируемаяПартияСАТУРН.КоличествоУпаковок
		|		* ИмпортируемаяПартияСАТУРН.КоличествоВУпаковкеСАТУРН КАК КоличествоСАТУРН,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличинСАТУРН.Вес)    КАК ТипИзмеряемойВеличиныСАТУРН,
		|	ИмпортируемаяПартияСАТУРН.Идентификатор                   КАК Идентификатор
		|ИЗ
		|	Справочник.ИмпортируемаяПартияСАТУРН КАК ИмпортируемаяПартияСАТУРН
		|ГДЕ
		|	ИмпортируемаяПартияСАТУРН.Ссылка В (&МассивСсылок)";
	
	Запрос.УстановитьПараметр("МассивСсылок", МассивИмпортныхПартий);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ДанныеШапки = РезультатЗапроса[0].Выбрать();
	ДанныеПартий = РезультатЗапроса[1].Выбрать();

	СтруктураВозврата.ДанныеШапки  = ДанныеШапки;
	СтруктураВозврата.ДанныеПартий = ДанныеПартий;
	
	Возврат СтруктураВозврата;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли
