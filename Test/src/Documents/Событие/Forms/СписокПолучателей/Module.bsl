
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	АдресТаблицыУчастников = Неопределено;
	Параметры.Свойство("АдресТаблицыУчастников", АдресТаблицыУчастников);
	Если АдресТаблицыУчастников = Неопределено Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ЗаполнитьТаблицуПолучателей(АдресТаблицыУчастников, Отказ);
	
	Заголовок = СтрШаблон(НСтр("ru = 'Получатели: %1'"), ТаблицаПолучателей.Количество());
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_Контрагент"
		Или ИмяСобытия = "Запись_КонтактноеЛицо"
		Или ИмяСобытия = "Запись_Лид"  Тогда
		
		ОбработатьСозданиеКонтакта(Параметр);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблицаПолучателей

&НаКлиенте
Процедура ТаблицаПолучателейВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	СтрокаДанных = ТаблицаПолучателей.НайтиПоИдентификатору(ВыбраннаяСтрока);
	
	Если ЗначениеЗаполнено(СтрокаДанных.КонтактCRM) Тогда
		ПоказатьЗначение(, СтрокаДанных.КонтактCRM);
		Возврат;
	КонецЕсли;
	
	Если Поле.Имя = Элементы.ТаблицаПолучателейСохранитьВCRM.Имя Тогда
		ПоказатьМенюСозданияКонтакта(Элемент);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьТаблицуПолучателей(АдресХранилища, Отказ)
	
	ПолученнаяТаблицаКонтактов = ПолучитьИзВременногоХранилища(АдресХранилища);
	Если ТипЗнч(ПолученнаяТаблицаКонтактов) <> Тип("ТаблицаЗначений") Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если ПолученнаяТаблицаКонтактов.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ПолученнаяТаблицаКонтактов[0].Контакт) = Тип("СправочникСсылка.АдресатыПисем") Тогда
		Элементы.ТаблицаПолучателейСохранитьВCRM.Видимость = Истина;
	Иначе
		УсловноеОформление.Элементы.Очистить();
	КонецЕсли;
	
	Если ПолученнаяТаблицаКонтактов.Колонки.Найти("ИндексКартинки") = Неопределено Тогда
		ПолученнаяТаблицаКонтактов.Колонки.Добавить("ИндексКартинки", Новый ОписаниеТипов("Число"));
	КонецЕсли;
	
	Для Каждого Получатель Из ПолученнаяТаблицаКонтактов Цикл
		
		НовыйПолучатель = ТаблицаПолучателей.Добавить();
		ЗаполнитьЗначенияСвойств(НовыйПолучатель, Получатель, , "КонтактСтрокой");
		
		НовыйПолучатель.КонтактСтрокой = СтрШаблон("%1 <%2>", Получатель.КонтактСтрокой, Получатель.КакСвязаться);
		
		Важность = ЭлектроннаяПочтаУНФ.ВажностьОтображенияКонтакта(НовыйПолучатель.КонтактCRM);
		НовыйПолучатель.Важность = Важность;
		
		Если Не ЗначениеЗаполнено(Получатель.КонтактCRM) Тогда
			НовыйПолучатель.СохранитьВCRM = НСтр("ru = 'Сохранить в CRM'");
		КонецЕсли;
		
	КонецЦикла;
	
	ТаблицаПолучателей.Сортировать("Важность Убыв");
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьМенюСозданияКонтакта(Элемент)
	
	ПараметрыДляПередачи = Новый Структура;
	ПараметрыДляПередачи.Вставить("Элемент", Элемент);
	ПараметрыДляПередачи.Вставить("Форма", ЭтотОбъект);
	
	ИндексПоля = Формат(ТаблицаПолучателей.Индекс(Элемент.ТекущиеДанные), "ЧГ=");
	ПутьДоПоля = СтрШаблон("ТаблицаПолучателей[%1].СохранитьВCRM", ИндексПоля);
	ПараметрыДляПередачи.Вставить("ПутьДоПоля", ПутьДоПоля);
	
	ЭлектроннаяПочтаУНФКлиент.ПоказатьМенюСозданияКонтакта(ПараметрыДляПередачи);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьСозданиеКонтакта(ПараметрыПослеЗаписи)
	
	ТипПараметров = ТипЗнч(ПараметрыПослеЗаписи);
	Ссылка = Неопределено;
	
	Если ТипПараметров = Тип("СправочникСсылка.Контрагенты") Или ТипПараметров = Тип("СправочникСсылка.Лиды") Тогда
		Ссылка = ПараметрыПослеЗаписи;
	ИначеЕсли ТипПараметров = Тип("Структура") Тогда
		
		Контакт = Неопределено;
		Если ПараметрыПослеЗаписи.Свойство("КонтактноеЛицо", Контакт) Тогда
			Ссылка = Контакт;
		КонецЕсли;
		
	Иначе
		Возврат;
	КонецЕсли;
	
	Если Ссылка = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеКонтакта = ДанныеКонтакта(Ссылка);
	
	СтруктураДляПоиска = Новый Структура("КакСвязаться", ДанныеКонтакта.КакСвязаться);
	Строки = ТаблицаПолучателей.НайтиСтроки(СтруктураДляПоиска);
	
	Для Каждого Строка Из Строки Цикл
		ЗаполнитьЗначенияСвойств(Строка, ДанныеКонтакта);
		Строка.СохранитьВCRM = "";
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ДанныеКонтакта(Знач Ссылка)
	
	ДанныеКонтакта = Новый Структура;
	
	ПоляКонтакта = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка,
		"Представление, АдресЭПДляПоиска");
	
	ДанныеКонтакта.Вставить("КонтактCRM", Ссылка);
	КонтактСтрокой = СтрШаблон("%1 <%2>", ПоляКонтакта.Представление, ПоляКонтакта.АдресЭПДляПоиска);
	ДанныеКонтакта.Вставить("КонтактСтрокой", КонтактСтрокой);
	ДанныеКонтакта.Вставить("КакСвязаться", ПоляКонтакта.АдресЭПДляПоиска);
	ДанныеКонтакта.Вставить("Важность", ЭлектроннаяПочтаУНФ.ВажностьОтображенияКонтакта(Ссылка));
	ДанныеКонтакта.Вставить("ИндексКартинки", ЭлектроннаяПочтаУНФ.НомерКартинкиУчастникаПоТипуКонтакта(Ссылка));
	
	Возврат ДанныеКонтакта;
	
КонецФункции

#КонецОбласти
