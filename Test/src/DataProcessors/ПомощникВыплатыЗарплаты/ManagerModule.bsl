
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область СлужебныйПрограммныйИнтерфейс

Функция ДанныеЗаполненияВедомостиПоДокументу(ДокументОснование, МетаданныеДокумент) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.ФизическоеЛицо КАК ФизическоеЛицо,
	               |	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.ЗарплатныйПроект КАК ЗарплатныйПроект,
	               |	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.Организация КАК Организация,
	               |	МАКСИМУМ(ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.ДатаОткрытияЛицевогоСчета) КАК ДатаОткрытияЛицевогоСчета
	               |ПОМЕСТИТЬ ВТПоследниеОткрытыеСчетаСотрудников
	               |ИЗ
	               |	РегистрСведений.ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам КАК ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЗарплатныеПроекты КАК ЗарплатныеПроекты
	               |		ПО ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.ЗарплатныйПроект = ЗарплатныеПроекты.Ссылка
	               |ГДЕ
	               |	НЕ ЕСТЬNULL(ЗарплатныеПроекты.ПометкаУдаления, ЛОЖЬ)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.ФизическоеЛицо,
	               |	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.Организация,
	               |	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.ЗарплатныйПроект
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.ФизическоеЛицо КАК ФизическоеЛицо,
	               |	МАКСИМУМ(ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.ЗарплатныйПроект) КАК ЗарплатныйПроект,
	               |	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.Организация КАК Организация
	               |ПОМЕСТИТЬ ВТЗарплатныеПроектыСотрудников
	               |ИЗ
	               |	ВТПоследниеОткрытыеСчетаСотрудников КАК ВТПоследниеОткрытыеСчетаСотрудников
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам КАК ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам
	               |		ПО ВТПоследниеОткрытыеСчетаСотрудников.ФизическоеЛицо = ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.ФизическоеЛицо
	               |			И ВТПоследниеОткрытыеСчетаСотрудников.ЗарплатныйПроект = ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.ЗарплатныйПроект
	               |			И ВТПоследниеОткрытыеСчетаСотрудников.Организация = ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.Организация
	               |			И ВТПоследниеОткрытыеСчетаСотрудников.ДатаОткрытияЛицевогоСчета = ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.ДатаОткрытияЛицевогоСчета
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.ФизическоеЛицо,
	               |	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.Организация
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЗарплатаКВыплатеОстатки.Сотрудник КАК Сотрудник,
	               |	ЗарплатаКВыплатеОстатки.Организация КАК Организация,
	               |	ЗарплатаКВыплатеОстатки.ПериодВзаиморасчетов КАК ПериодРегистрации,
	               |	ЗарплатаКВыплатеОстатки.ПериодВзаиморасчетов КАК ПериодВзаиморасчетов,
	               |	ЗарплатаКВыплатеОстатки.ФизическоеЛицо КАК ФизическоеЛицо,
	               |	ЗарплатаКВыплатеОстатки.СтатьяФинансирования КАК СтатьяФинансирования,
	               |	ЗарплатаКВыплатеОстатки.СтатьяРасходов КАК СтатьяРасходов,
	               |	ЗарплатаКВыплатеОстатки.Подразделение КАК Подразделение,
	               |	ЗарплатаКВыплатеОстатки.ДокументОснование КАК ДокументОснование,
	               |	ЗарплатаКВыплатеОстатки.ВидДоходаИсполнительногоПроизводства КАК ВидДоходаИсполнительногоПроизводства,
	               |	ЗарплатаКВыплатеОстатки.СуммаКВыплатеОстаток КАК КВыплате,
	               |	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.ЗарплатныйПроект КАК ЗарплатныйПроект,
	               |	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.НомерЛицевогоСчета КАК НомерЛицевогоСчета,
	               |	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.СпособЗачисления КАК СпособЗачисления,
	               |	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.БанковскийСчет КАК БанковскийСчет,
	               |	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.БанковскаяКарта КАК БанковскаяКарта,
	               |	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.Телефон КАК Телефон
	               |ИЗ
	               |	РегистрНакопления.ЗарплатаКВыплате.Остатки(, ДокументОснование = &ДокументОснование) КАК ЗарплатаКВыплатеОстатки
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗарплатныеПроектыСотрудников КАК ВТЗарплатныеПроектыСотрудников
	               |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам КАК ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам
	               |			ПО ВТЗарплатныеПроектыСотрудников.ФизическоеЛицо = ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.ФизическоеЛицо
	               |				И ВТЗарплатныеПроектыСотрудников.ЗарплатныйПроект = ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.ЗарплатныйПроект
	               |				И ВТЗарплатныеПроектыСотрудников.Организация = ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.Организация
	               |		ПО ЗарплатаКВыплатеОстатки.Организация = ВТЗарплатныеПроектыСотрудников.Организация
	               |			И ЗарплатаКВыплатеОстатки.ФизическоеЛицо = ВТЗарплатныеПроектыСотрудников.ФизическоеЛицо
	               |ГДЕ
	               |	ЗарплатаКВыплатеОстатки.СуммаКВыплатеОстаток > 0";
	
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	
	ВыборкаЗарплата = Запрос.Выполнить().Выбрать();
	
	ДанныеЗаполнения = Новый Структура;
	ДанныеЗаполнения.Вставить("Состав", Новый Массив);
	ДанныеЗаполнения.Вставить("Зарплата", Новый Массив);
	ДанныеЗаполнения.Вставить("НДФЛ", Новый Массив);

	ДанныеЗаполнения.Вставить("СообщениеПользователю", "");
	
	КолонкиСостав = СтрСоединить(КолонкиТабличнойЧасти(МетаданныеДокумент.ТабличныеЧасти.Состав), ",");
	КолонкиЗарплата = СтрСоединить(КолонкиТабличнойЧасти(МетаданныеДокумент.ТабличныеЧасти.Зарплата), ",");
	КолонкиНДФЛ = СтрСоединить(КолонкиТабличнойЧасти(МетаданныеДокумент.ТабличныеЧасти.НДФЛ), ",");
	Пока ВыборкаЗарплата.СледующийПоЗначениюПоля("ФизическоеЛицо") Цикл
		ИдСтрокиСостава = Новый УникальныйИдентификатор;
		ДанныеЗаполнения.Вставить("Организация", ВыборкаЗарплата.Организация);
		ДанныеЗаполнения.Вставить("ПериодРегистрации", ВыборкаЗарплата.ПериодРегистрации);
		ДанныеЗаполнения.Вставить("СпособВыплаты", Справочники.СпособыВыплатыЗарплаты.Зарплата);
		ДанныеЗаполнения.Вставить("ВидДоходаИсполнительногоПроизводства",
			ВыборкаЗарплата.ВидДоходаИсполнительногоПроизводства);
		Если НЕ ЗначениеЗаполнено(ДанныеЗаполнения.ВидДоходаИсполнительногоПроизводства) Тогда
			ДанныеЗаполнения.ВидДоходаИсполнительногоПроизводства = Перечисления.ВидыДоходовИсполнительногоПроизводства.ЗарплатаВознаграждения;
		КонецЕсли;
		
		СтрокаСостав = Новый Структура(КолонкиСостав);
		ЗаполнитьЗначенияСвойств(СтрокаСостав, ВыборкаЗарплата);
		СтрокаСостав.ИдентификаторСтроки = ИдСтрокиСостава;
		Если СтрокаСостав.Свойство("СпособЗачисления") И НЕ ЗначениеЗаполнено(СтрокаСостав.СпособЗачисления) Тогда
			СтрокаСостав.СпособЗачисления = Перечисления.СпособыЗачисленияВыплат.ПоЛицевомуСчету;
		КонецЕсли;
		ДанныеЗаполнения.Состав.Добавить(СтрокаСостав);
		
		ФизическоеЛицо = ВыборкаЗарплата.ФизическоеЛицо;
		Пока ВыборкаЗарплата.Следующий() Цикл
			Если ВыборкаЗарплата.ПериодРегистрации > ДанныеЗаполнения.ПериодРегистрации Тогда
				ДанныеЗаполнения.ПериодРегистрации = ВыборкаЗарплата.ПериодРегистрации;
			КонецЕсли;
			
			СтрокаЗарплата = Новый Структура(КолонкиЗарплата);
			ЗаполнитьЗначенияСвойств(СтрокаЗарплата, ВыборкаЗарплата);
			СтрокаЗарплата.ИдентификаторСтроки = ИдСтрокиСостава;
			ДанныеЗаполнения.Зарплата.Добавить(СтрокаЗарплата);
		КонецЦикла;
		
		НДФЛ = НДФЛПоДокументуОснованию(ДокументОснование, ФизическоеЛицо);
		Для Каждого НДФЛРаспределенный Из НДФЛ Цикл
			НДФЛВДокумент = Новый Структура(КолонкиНДФЛ);
			ЗаполнитьЗначенияСвойств(НДФЛВДокумент, НДФЛРаспределенный);
			НДФЛВДокумент.ИдентификаторСтроки = ИдСтрокиСостава;
			ДанныеЗаполнения.НДФЛ.Добавить(НДФЛВДокумент);
		КонецЦикла;
	КонецЦикла;
	
	Если ДанныеЗаполнения.Зарплата.Количество() = 0 И ДанныеЗаполнения.НДФЛ.Количество() = 0 Тогда
		
		ДанныеЗаполнения.СообщениеПользователю = ТекстВыплатаСоздана(ДокументОснование);
		
	КонецЕсли;			
	
	Возврат ДанныеЗаполнения;
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция КолонкиТабличнойЧасти(МетаданныеТабличнаяЧасть)
	
	Результат = Новый Массив;
	
	Для Каждого Колонка Из МетаданныеТабличнаяЧасть.Реквизиты Цикл
		Результат.Добавить(Колонка.Имя);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция НДФЛПоДокументуОснованию(ДокументОснование, ФизическоеЛицо)

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	Запрос.УстановитьПараметр("ФизическоеЛицо", ФизическоеЛицо);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	               |	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	               |	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	               |	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КодДохода КАК КодДохода,
	               |	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	               |	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение КАК Подразделение,
	               |	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ДокументОснование КАК ДокументОснование,
	               |	СУММА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма) КАК Сумма,
	               |	СУММА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СуммаСПревышения) КАК СуммаСПревышения,
	               |	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КатегорияДохода КАК КатегорияДохода,
	               |	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль
	               |ИЗ
	               |	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	               |ГДЕ
	               |	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо = &ФизическоеЛицо
	               |	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ДокументОснование = &ДокументОснование
	               |	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор = &ДокументОснование
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ДокументОснование,
	               |	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо,
	               |	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КодДохода,
	               |	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента,
	               |	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КатегорияДохода,
	               |	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане,
	               |	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода,
	               |	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение,
	               |	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль
	               |
	               |ИМЕЮЩИЕ
	               |	СУММА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма) > 0";
	
	НДФЛДокумента = Запрос.Выполнить().Выгрузить();
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	НачисленияУдержанияПоСотрудникам.ФизическоеЛицо КАК ФизическоеЛицо,
	               |	НачисленияУдержанияПоСотрудникам.СтатьяФинансирования КАК СтатьяФинансирования,
	               |	НачисленияУдержанияПоСотрудникам.СтатьяРасходов КАК СтатьяРасходов,
	               |	НачисленияУдержанияПоСотрудникам.Подразделение КАК Подразделение,
	               |	НачисленияУдержанияПоСотрудникам.МестоПолученияДохода КАК МестоПолученияДохода,
	               |	НачисленияУдержанияПоСотрудникам.ТерриторияВыполненияРаботВОрганизации КАК ТерриторияВыполненияРабот,
	               |	СУММА(ВЫБОР
	               |			КОГДА НачисленияУдержанияПоСотрудникам.НачислениеУдержание = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.НДФЛ)
	               |				ТОГДА НачисленияУдержанияПоСотрудникам.Сумма
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК Сумма,
	               |	СУММА(ВЫБОР
	               |			КОГДА НачисленияУдержанияПоСотрудникам.НачислениеУдержание = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.НДФЛСПревышения)
	               |				ТОГДА НачисленияУдержанияПоСотрудникам.Сумма
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК СуммаСПревышения,
	               |	НачисленияУдержанияПоСотрудникам.КатегорияДохода КАК КатегорияДохода
	               |ИЗ
	               |	РегистрНакопления.НачисленияУдержанияПоСотрудникам КАК НачисленияУдержанияПоСотрудникам
	               |ГДЕ
	               |	НачисленияУдержанияПоСотрудникам.Регистратор = &ДокументОснование
	               |	И НачисленияУдержанияПоСотрудникам.ФизическоеЛицо = &ФизическоеЛицо
	               |	И НачисленияУдержанияПоСотрудникам.НачислениеУдержание В (ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.НДФЛ), ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.НДФЛСПревышения))
	               |	И НЕ НачисленияУдержанияПоСотрудникам.Сторно
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	НачисленияУдержанияПоСотрудникам.МестоПолученияДохода,
	               |	НачисленияУдержанияПоСотрудникам.ФизическоеЛицо,
	               |	НачисленияУдержанияПоСотрудникам.Подразделение,
	               |	НачисленияУдержанияПоСотрудникам.ТерриторияВыполненияРаботВОрганизации,
	               |	НачисленияУдержанияПоСотрудникам.СтатьяФинансирования,
	               |	НачисленияУдержанияПоСотрудникам.СтатьяРасходов,
	               |	НачисленияУдержанияПоСотрудникам.КатегорияДохода";
	
	
	НДФЛПоСтатьям = Запрос.Выполнить().Выгрузить();
	Для Каждого Строка Из НДФЛПоСтатьям Цикл
		Если ЗначениеЗаполнено(Строка.ТерриторияВыполненияРабот) Тогда
			Строка.Подразделение = Строка.ТерриторияВыполненияРабот;
		ИначеЕсли ЗначениеЗаполнено(Строка.МестоПолученияДохода) Тогда
			Строка.Подразделение = Строка.МестоПолученияДохода;
		КонецЕсли;
	КонецЦикла;
	НДФЛПоСтатьям.Свернуть("ФизическоеЛицо, Подразделение, КатегорияДохода, СтатьяФинансирования, СтатьяРасходов", "Сумма, СуммаСПревышения");
	
	ТаблицаРаспределения = НДФЛДокумента.СкопироватьКолонки();
	ТаблицаРаспределения.Колонки.Добавить("СтатьяФинансирования");
	ТаблицаРаспределения.Колонки.Добавить("СтатьяРасходов");
	
	ОтборРаспределение = Новый Структура("ФизическоеЛицо, Подразделение, КатегорияДохода");
	Для Каждого СтрокаНДФЛ Из НДФЛДокумента Цикл
		ЗаполнитьЗначенияСвойств(ОтборРаспределение, СтрокаНДФЛ);
		
		СуммыПоСтатьям = НДФЛПоСтатьям.Скопировать(ОтборРаспределение);
		Если СуммыПоСтатьям.Количество() > 0 Тогда
			
			Суммы = РаспределитьПропорционально(СтрокаНДФЛ.Сумма, СуммыПоСтатьям.ВыгрузитьКолонку("Сумма"), 0);
			СуммыСПревышения = РаспределитьПропорционально(СтрокаНДФЛ.СуммаСПревышения,
				СуммыПоСтатьям.ВыгрузитьКолонку("СуммаСПревышения"), 0); 
			
			Для Индекс = 0 По СуммыПоСтатьям.Количество() - 1 Цикл
				НоваяСтрока = ТаблицаРаспределения.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаНДФЛ);
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СуммыПоСтатьям[Индекс], "СтатьяФинансирования, СтатьяРасходов");
				НоваяСтрока.Сумма = Суммы[Индекс];
				НоваяСтрока.СуммаСПревышения = СуммыСПревышения[Индекс];
			КонецЦикла;
		Иначе
			НоваяСтрока = ТаблицаРаспределения.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаНДФЛ);
		КонецЕсли;
	КонецЦикла;
	
	НДФЛРаспределениеУчестьВыплаты(ТаблицаРаспределения, ДокументОснование, ФизическоеЛицо);
	
	Возврат ТаблицаРаспределения;
КонецФункции

Процедура НДФЛРаспределениеУчестьВыплаты(ТаблицаРаспределения, ДокументОснование, ФизическоеЛицо)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	Запрос.УстановитьПараметр("ФизическоеЛицо", ФизическоеЛицо);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	НДФЛКПеречислению.ФизическоеЛицо КАК ФизическоеЛицо,
	               |	СУММА(НДФЛКПеречислению.Сумма) КАК Сумма,
	               |	СУММА(НДФЛКПеречислению.СуммаСПревышения) КАК СуммаСПревышения,
	               |	НДФЛКПеречислению.СтатьяФинансирования КАК СтатьяФинансирования,
	               |	НДФЛКПеречислению.СтатьяРасходов КАК СтатьяРасходов,
	               |	НДФЛКПеречислению.КатегорияДохода КАК КатегорияДохода,
	               |	НДФЛКПеречислению.Подразделение КАК Подразделение,
	               |	НДФЛКПеречислению.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	               |	НДФЛКПеречислению.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	               |	НДФЛКПеречислению.КодДохода КАК КодДохода,
	               |	НДФЛКПеречислению.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль
	               |ИЗ
	               |	РегистрНакопления.НДФЛКПеречислению КАК НДФЛКПеречислению
	               |ГДЕ
	               |	НДФЛКПеречислению.ДокументОснование = &ДокументОснование
	               |	И НДФЛКПеречислению.ФизическоеЛицо = &ФизическоеЛицо
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	НДФЛКПеречислению.СтатьяФинансирования,
	               |	НДФЛКПеречислению.ФизическоеЛицо,
	               |	НДФЛКПеречислению.Подразделение,
	               |	НДФЛКПеречислению.СтатьяРасходов,
	               |	НДФЛКПеречислению.КатегорияДохода,
	               |	НДФЛКПеречислению.СтавкаНалогообложенияРезидента,
	               |	НДФЛКПеречислению.РегистрацияВНалоговомОргане,
	               |	НДФЛКПеречислению.КодДохода,
	               |	НДФЛКПеречислению.ВключатьВДекларациюПоНалогуНаПрибыль
	               |
	               |ИМЕЮЩИЕ
	               |	(СУММА(НДФЛКПеречислению.Сумма) <> 0
	               |		ИЛИ СУММА(НДФЛКПеречислению.СуммаСПревышения) <> 0)";
	
	ВыборкаВыплачено = Запрос.Выполнить().Выбрать();
	
	Выплачено = 0;
	ВыплаченоСПревышения = 0;
	Пока ВыборкаВыплачено.Следующий() Цикл
		НоваяСтрока = ТаблицаРаспределения.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаВыплачено, , "Сумма, СуммаСПревышения");
		НоваяСтрока.Сумма = -ВыборкаВыплачено.Сумма;
		НоваяСтрока.СуммаСПревышения = -ВыборкаВыплачено.СуммаСПревышения;
		Выплачено = Выплачено + ВыборкаВыплачено.Сумма;
		ВыплаченоСПревышения = ВыплаченоСПревышения + ВыборкаВыплачено.Сумма;
	КонецЦикла;
	
	КолонкиГруппы = "";
	Для Каждого Колонка Из ТаблицаРаспределения.Колонки Цикл
		Если Колонка.Имя <> "Сумма" И Колонка.Имя <> "СуммаСПревышения" Тогда
			КолонкиГруппы = КолонкиГруппы + ?(ПустаяСтрока(КолонкиГруппы), "", ",") + Колонка.Имя;
		КонецЕсли;
	КонецЦикла;
	ТаблицаРаспределения.Свернуть(КолонкиГруппы, "Сумма, СуммаСПревышения");
	
	ОтборНулевые = Новый Структура("Сумма, СуммаСПревышения", 0, 0);
	СтрокиУдалить = ТаблицаРаспределения.НайтиСтроки(ОтборНулевые);
	Для Каждого Строка Из СтрокиУдалить Цикл
		ТаблицаРаспределения.Удалить(Строка);
	КонецЦикла;
	
	ТаблицаРаспределения.Колонки.Добавить("Распределить", Новый ОписаниеТипов("Булево"));
	Для Каждого Строка Из ТаблицаРаспределения Цикл
		Строка.Распределить = Строка.Сумма < 0 ИЛИ Строка.СуммаСПревышения < 0;
	КонецЦикла;
	
	Перераспределить = ТаблицаРаспределения.НайтиСтроки(Новый Структура("Распределить", Истина));
	Для Каждого СтрокаУбрать Из Перераспределить Цикл
		Оставить = ТаблицаРаспределения.НайтиСтроки(Новый Структура("Распределить", Ложь));
		КоэффициентыСумма = РаспределитьПропорционально(
			СтрокаУбрать.Сумма, ОбщегоНазначения.ВыгрузитьКолонку(Оставить, "Сумма"), 0);
		КоэффициентыСуммаСПревышения = РаспределитьПропорционально(
			СтрокаУбрать.СуммаСПревышения, ОбщегоНазначения.ВыгрузитьКолонку(Оставить, "СуммаСПревышения"), 0);
		Для Индекс = 0 По Оставить.Количество() - 1 Цикл
			Оставить[Индекс].Сумма = Оставить[Индекс].Сумма + КоэффициентыСумма[Индекс];
			Оставить[Индекс].СуммаСПревышения = Оставить[Индекс].СуммаСПревышения + КоэффициентыСуммаСПревышения[Индекс];
		КонецЦикла;
		ТаблицаРаспределения.Удалить(СтрокаУбрать);
	КонецЦикла;
КонецПроцедуры

Функция РаспределитьПропорционально(Значение, Коэффициенты, Точность)
	
	Результат = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(Значение, Коэффициенты, Точность);
	Если НЕ ЗначениеЗаполнено(Результат) Тогда
		Результат = Новый Массив;
		Пока Результат.Количество() < Коэффициенты.Количество() Цикл
			Результат.Добавить(0);
		КонецЦикла;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция ТекстВыплатаСоздана(ДокументОснование)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ЗарплатаКВыплатеОбороты.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрНакопления.ЗарплатаКВыплате.Обороты(, , Регистратор, ДокументОснование = &ДокументОснование) КАК ЗарплатаКВыплатеОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗарплатаКВыплатеОбороты.Регистратор
	|
	|ИМЕЮЩИЕ
	|	СУММА(ЗарплатаКВыплатеОбороты.СуммаКВыплатеРасход) > 0";
	
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	Выборка = Запрос.Выполнить().Выбрать();
	
	СозданныеВедомости = Новый Массив;
	Пока Выборка.Следующий() Цикл
		СозданныеВедомости.Добавить(Выборка.Регистратор);	
	КонецЦикла;

	ТекстВедомости = Новый Массив;
	
	ТекстСоздан = ?(СозданныеВедомости.Количество() > 1, НСтр("ru = 'созданы выплаты'"), НСтр("ru = 'создана выплата'"));
	ТекстВедомости.Добавить(СтрШаблон(НСтр("ru = 'По документу %1 уже %2'"), ДокументОснование, ТекстСоздан));
	
	КоличествоВывести = Мин(2, СозданныеВедомости.Количество());
	Для Индекс = 0 По КоличествоВывести - 1 Цикл
		ВедомостьСсылка = СозданныеВедомости[Индекс];
		ТекстВедомости.Добавить(СтрШаблон("<a href = ""%1"">%3%2</a>", ПолучитьНавигационнуюСсылку(ВедомостьСсылка), Строка(ВедомостьСсылка), Символы.ПС));
	КонецЦикла;                                                                          

	Если КоличествоВывести < СозданныеВедомости.Количество() Тогда
		ТекстВедомости.Добавить(СтрШаблон(НСтр("ru = '%2и другие, всего %1 документа'"), СозданныеВедомости.Количество(), Символы.ПС));
	КонецЕсли;
	
	Возврат СтроковыеФункции.ФорматированнаяСтрока(СтрСоединить(ТекстВедомости, ""));
	
КонецФункции

#КонецОбласти

#КонецЕсли