#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	
	Документ = Неопределено;
	Если Не Параметры.Свойство("Документ", Документ) Тогда
		Возврат;
	КонецЕсли; 
	
	Если Параметры.Свойство("БонуснаяКарта") Тогда
		БонуснаяКарта = Параметры.БонуснаяКарта;
	Иначе
		БонуснаяКарта = Документ.ДисконтнаяКарта;
	КонецЕсли;
	ОграничениеОплаты = 0;
	СуммаУжеПримененныхБонусов = 0;
	Если ТипЗнч(Документ.Ссылка) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда 
		Если Документ.ВидОперации = Перечисления.ВидыОперацийЗаказПокупателя.ЗаказНаряд Тогда
			ОграничениеОплаты = РаботаСБонусами.ПолучитьМаксимальнуюСуммуОплатыДокумента(Документ.Запасы, БонуснаяКарта) +
				РаботаСБонусами.ПолучитьМаксимальнуюСуммуОплатыДокумента(Документ.Работы, БонуснаяКарта);
		  	СуммаУжеПримененныхБонусов = Документ.Запасы.Итог("СуммаСкидкиОплатыБонусом") + Документ.Работы.Итог("СуммаСкидкиОплатыБонусом");
		Иначе
			НомерВарианта = Документ.ОсновнойВариантКП;
			ОтборКП = Новый Структура("НомерВариантаКП", НомерВарианта);
			СтрокиКП = Документ.Запасы.НайтиСтроки(ОтборКП);			 
			ОграничениеОплаты = РаботаСБонусами.ПолучитьМаксимальнуюСуммуОплатыДокумента(СтрокиКП, БонуснаяКарта);
			ЗапасыОсновногоКП = Документ.Запасы.Выгрузить(СтрокиКП, "Всего, СуммаСкидкиОплатыБонусом");
			СуммаУжеПримененныхБонусов = ЗапасыОсновногоКП.Итог("СуммаСкидкиОплатыБонусом");
		КонецЕсли;
	ИначеЕсли ТипЗнч(Документ.Ссылка) = Тип("ДокументСсылка.АктВыполненныхРабот") Тогда
		ОграничениеОплаты = РаботаСБонусами.ПолучитьМаксимальнуюСуммуОплатыДокумента(Документ.РаботыИУслуги, БонуснаяКарта);
	  	СуммаУжеПримененныхБонусов = Документ.РаботыИУслуги.Итог("СуммаСкидкиОплатыБонусом");
	Иначе
		ОграничениеОплаты = РаботаСБонусами.ПолучитьМаксимальнуюСуммуОплатыДокумента(Документ.Запасы, БонуснаяКарта);
		СуммаУжеПримененныхБонусов = Документ.Запасы.Итог("СуммаСкидкиОплатыБонусом");
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(БонуснаяКарта) Тогда
		БонуснаяКарта = Документ.ДисконтнаяКарта;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(БонуснаяКарта) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	ПараметрыБонуснойПрограммы = РаботаСБонусами.РеквизитыБонуснойПрограммы(БонуснаяКарта);

	Если Параметры.Свойство("КОплате") Тогда
		КОплате = Параметры.КОплате;
	Иначе
		Возврат;
	КонецЕсли;
	СуммаОплатыВВалюте = КОплате;

	КурсБонусов = ?(ПараметрыБонуснойПрограммы.КурсБонусов = 0, 1, ПараметрыБонуснойПрограммы.КурсБонусов);
	Валюта = УправлениеНебольшойФирмойПовтИсп.ПолучитьВалютуУчета();
	Если КурсБонусов = 1 Тогда
		Элементы.СуммаОплатыВВалюте.Видимость = Ложь;
		Элементы.ОстатокВВалюте.Видимость = Ложь;
		Элементы.МаксимальнаяСуммаВВалюте.Видимость = Ложь;
		Элементы.ГруппаКурсБаллов.Видимость = Ложь;
	КонецЕсли;
	
	ПараметрыПрописиМассив = СтрРазделить(Валюта.ПараметрыПрописи, ",", Истина);
	МассивОписанийДляСклонения = Новый Массив;
	МассивОписанийДляСклонения.Добавить(ПараметрыПрописиМассив[0]); 
	МассивОписанийДляСклонения.Добавить(ПараметрыПрописиМассив[4]); 
	МассивОписанийДляСклонения.Добавить(ПараметрыПрописиМассив[8]); 
	ПараметрыПрописи = СтрСоединить(МассивОписанийДляСклонения, ",");

	ОграничениеОплатыБаллами =  Окр(ОграничениеОплаты / КурсБонусов, 2, РежимОкругления.Окр15как10);
	КОплатеБонусов = Окр(СуммаОплатыВВалюте / КурсБонусов, 2, РежимОкругления.Окр15как10);
	
	// Итого, максимум, сколько можно оплатить баллами в данном документе, с учетом других предоплат
	МожноОплатитьБалламиЧисло = Мин(СуммаОплатыВВалюте, ОграничениеОплаты);
	//МожноОплатитьБаллами = ПолучитьСклоненияСтрокиПоЧислу("", МожноОплатитьБалламиЧисло, ПараметрыПрописи)[0];
	Если МожноОплатитьБалламиЧисло = 0 Тогда
		МожноОплатитьБаллами = "";
	Иначе
		МожноОплатитьБаллами = Формат(МожноОплатитьБалламиЧисло, "ЧДЦ=2") +" "+ Строка(Валюта);
		МожноОплатитьБаллами = "("+МожноОплатитьБаллами+")";
	КонецЕсли;
	МожноПотратитьБаллов = Окр(МожноОплатитьБалламиЧисло / КурсБонусов, 2, РежимОкругления.Окр15как10);
	
	Если Параметры.Свойство("СуммаБонусов") Тогда
		// Из документов в качестве параметра СуммаБонусов передается сумма скидки за оплаты бунусами, т.е. сумма в валюте документа
		СуммаБонусов = Окр(Параметры.СуммаБонусов / КурсБонусов, 2);
	КонецЕсли;
	
	Если Не Документ = Неопределено Тогда
		
		// Получим остаток и владельца
		СтруктураДанных = РаботаСБонусами.ПолучитьДанныеБонуснойКарты(Документ.ДисконтнаяКарта, Документ.Дата, Документ.Ссылка);
		Остаток = СтруктураДанных.Остаток;
		ДвижениеОплачено = 0;
		Если СтруктураДанных.Свойство("ДвиженияДокумента") Тогда
			ДвижениеОплачено = СтруктураДанных.ДвиженияДокумента.Оплачено;
		КонецЕсли;
		// Если документ был проведен ранее, то учтем сумму уже потраченных бонусов
		Остаток = СтруктураДанных.Остаток + ДвижениеОплачено;
		СтруктураОстатка.Загрузить(СтруктураДанных.ТаблицаДвижений);
		Владелец = СтруктураДанных.Владелец;
		
	КонецЕсли;
	
	ОстатокВВалютеЧисло =  Окр(Остаток * КурсБонусов, 2);
	//ОстатокВВалюте = ПолучитьСклоненияСтрокиПоЧислу("", ОстатокВВалютеЧисло, ПараметрыПрописи)[0];
	Если ОстатокВВалютеЧисло = 0 Тогда
		ОстатокВВалюте = "";
	Иначе
		ОстатокВВалюте = Формат(ОстатокВВалютеЧисло, "ЧДЦ=2") +" "+ Строка(Валюта);
		ОстатокВВалюте = "(" + ОстатокВВалюте + ")";
	КонецЕсли;
	
	Если Остаток < МожноПотратитьБаллов Тогда
		Элементы.ГруппаСуммаОплаты.Видимость = Ложь;
	КонецЕсли;
	
	ДоступноКСписаниюБаллов = Мин(Остаток, КОплатеБонусов, ОграничениеОплатыБаллами);
	СуммаБонусов = Мин(СуммаБонусов, ДоступноКСписаниюБаллов);
	//СуммаОплатыВВалютеДокумента = ПолучитьСклоненияСтрокиПоЧислу("", Окр(СуммаБонусов * КурсБонусов, 2), ПараметрыПрописи)[0];
	Если СуммаБонусов = 0 Тогда
		СуммаОплатыВВалютеДокумента = "";
	Иначе
		СуммаОплатыВВалютеДокумента = Формат(Окр(СуммаБонусов * КурсБонусов, 2), "ЧДЦ=2") +" "+ Строка(Валюта);
		СуммаОплатыВВалютеДокумента = "("+СуммаОплатыВВалютеДокумента+")";
	КонецЕсли;
	
	ШаблонТекстаПодсказки = НСтр("ru = '%1 (К оплате)'");
	Если Остаток = ДоступноКСписаниюБаллов Тогда  
		ШаблонТекстаПодсказки = НСтр("ru = '%1 (Остаток)'");
	ИначеЕсли ОграничениеОплатыБаллами = ДоступноКСписаниюБаллов Тогда
		ШаблонТекстаПодсказки = НСтр("ru = '%1 (Макс.)'");
	КонецЕсли;
	Элементы.СуммаБонусов.СписокВыбора.Добавить(ДоступноКСписаниюБаллов, СтрШаблон(ШаблонТекстаПодсказки, ДоступноКСписаниюБаллов));
	ЧислоДоступныхБалловСтрокой = ПолучитьСклоненияСтрокиПоЧислу("", ДоступноКСписаниюБаллов, "бонусный балл")[0];
	Элементы.ДекорацияМожноСписатьМаксимум.Заголовок = СтрШаблон(НСтр("ru = 'Использовать %1'"), ЧислоДоступныхБалловСтрокой);
КонецПроцедуры

&НаКлиенте
Процедура СуммаОплатыПриИзменении(Элемент)    
	ОбновитьРасчетПоКурсу();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ОК(Команда)
	
	Если СуммаБонусов > Остаток Тогда
		ТекстСообщения = НСтр("ru = 'Превышен остаток баллов по карте!'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,, "СуммаОплаты", "СуммаОплаты");
		Возврат;
	КонецЕсли;
	
	Если СуммаБонусов > КОплате / КурсБонусов Тогда
		ТекстСообщения = НСтр("ru = 'Сумма оплаты не может превышать сумму документа!'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,, "СуммаОплаты", "СуммаОплаты");
		Возврат;
	КонецЕсли;
	
	Если СуммаБонусов > ОграничениеОплатыБаллами Тогда
		ТекстСообщения = НСтр("ru = 'Сумма оплаты не может превышать ограничение, установленное для бонусной программы!'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,, "СуммаОплаты", "СуммаОплаты");
		Возврат;
	КонецЕсли;
	
	Если СуммаБонусов = 0 Тогда
		ПараметрыЗакрытия = Неопределено;
	Иначе
		ПараметрыЗакрытия = Новый Структура("БонуснаяКарта, СуммаБонусов, ВидОплаты, ЕстьОплатаБонусами",
			БонуснаяКарта,
			СуммаБонусов,
			ПредопределенноеЗначение("Перечисление.ВидыБезналичныхОплат.Бонусы"),
			Истина);
	КонецЕсли;
	
	Закрыть(ПараметрыЗакрытия);
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияМожноСписатьМаксимумНажатие(Элемент)
	СуммаБонусов = ДоступноКСписаниюБаллов;
	ОбновитьРасчетПоКурсу();
	ОК(Неопределено);
КонецПроцедуры  

&НаКлиенте
Процедура ОбновитьРасчетПоКурсу()
	Если КурсБонусов = 0 Тогда
		СуммаОплатыВВалютеДокумента = "";
	Иначе 
		СуммаОплатыВВалютеДокумента = "("+Формат(Окр(СуммаБонусов * КурсБонусов, 2)) + " " + Валюта + ")";
	КонецЕсли;
КонецПроцедуры
#КонецОбласти
