#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает реквизиты первичного документа для занесения в графу 2 КУДиР
// 
// Параметры:
//	Номер - Строка
//
// Возвращаемое значение:
//	Строка - значение номера без лидирующих нулей
Функция НомерПервичногоДокумента(Знач Номер) Экспорт
	Пока Лев(Номер, 1)="0" Цикл
		Номер = Сред(Номер, 2);
	КонецЦикла;
	Возврат Номер;
КонецФункции

// Выполняет формирование табличной части отчета Книга учета доходов и расходов.
//
// Параметры:
//  ПараметрыОтчета	 - Структура:
//   * Организация - СправочникСсылка.Организации,
//   * НачалоПериода - Дата,
//   * КонецПериода - Дата,
//   * Период - Дата,
//	 * ОбъектНалогообложенияУСН - ПеречислениеСсылка.ВидыОбъектовНалогообложения
//   * РежимПечатиГраф4и6 - Число
//   * РежимПечатиНДС - Число
//   * НалоговыйПериодРасширен - Булево
//   * НачалоНалоговогоПериода - Дата
//   * СписокСформированныхЛистов - СписокЗначений
//  АдресХранилища - адрес во временном хранилище, куда будет помещён СписокЗначений из ТабличныхДокументов
//					- результат формирования Книги учета доходов по патенту.
//
Процедура СформироватьОтчет(ПараметрыОтчета, АдресХранилища) Экспорт
	
	ПараметрыОтчета.СписокСформированныхЛистов.Очистить();
	
	// в связи со спецификой отчета переопределим период
	ПараметрыОтчета.Период = КонецКвартала(ПараметрыОтчета.КонецПериода);
	
	ПараметрыВывода = НастройкиРазделовОтчета(ПараметрыОтчета);
	
	ПечатьТитульногоЛиста(ПараметрыОтчета, ПараметрыВывода.ТитульныйЛист);
	
	ПечатьРаздела1(ПараметрыОтчета, ПараметрыВывода.ДоходыРасходы);
	
	ПечатьРаздела2(ПараметрыОтчета, ПараметрыВывода.ОсновныеСредстваНМА);
	
	ПечатьРаздела3(ПараметрыОтчета, ПараметрыВывода.Убытки);
	
	ПечатьРазделаВзносы(ПараметрыОтчета, ПараметрыВывода.СтраховыеВзносы);
	
	ПечатьРазделаТорговыйСбор(ПараметрыОтчета, ПараметрыВывода.ТорговыйСбор);
	
	ПоместитьВоВременноеХранилище(ПараметрыОтчета.СписокСформированныхЛистов, АдресХранилища);
	
КонецПроцедуры

// Возвращает представление периода с начала года.
// 
// Параметры:
//   Период - Дата - Дата окончания периода
// 
// Возвращаемое значение:
//   Строка - Текстовое представление периода.
// 
Функция ПолучитьПредставлениеПериода(Период) Экспорт

	КонДата = ?(КонДата = Неопределено, Период, КонДата);
	Возврат ПредставлениеПериода(НачалоГода(КонДата), КонецДня(КонДата), "ФП = Истина");

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПечатьТитульногоЛиста(ПараметрыОтчета, ПараметрыВывода)
	
	Период      = ПараметрыОтчета.Период;
	Организация = ПараметрыОтчета.Организация;
	
	ДанныеТитульногоЛиста = Новый Структура;
	ДанныеТитульногоЛиста.Вставить("НаПериод", "на " + Формат(Период,"ДФ=гггг") + " год");
	ДанныеТитульногоЛиста.Вставить("КодОКПО", Организация.КодПоОКПО);
	ДанныеТитульногоЛиста.Вставить("ПолноеНаименованиеОрганизации", Организация.НаименованиеПолное);
	
	ЗапросПоДопСведениям = Новый Запрос(
	"ВЫБРАТЬ
	|	СистемыНалогообложенияОрганизацийСрезПоследних.ОбъектНалогообложения
	|ИЗ
	|	РегистрСведений.СистемыНалогообложенияОрганизаций.СрезПоследних(
	|			&КонДата,
	|			 Организация = &Организация) КАК СистемыНалогообложенияОрганизацийСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БанковскиеСчета.НомерСчета,
	|	БанковскиеСчета.Банк
	|ИЗ
	|	Справочник.БанковскиеСчета КАК БанковскиеСчета
	|ГДЕ
	|	БанковскиеСчета.Владелец = &Организация
	|	И (БанковскиеСчета.ДатаОткрытия <= &КонДата
	|			ИЛИ БанковскиеСчета.ДатаОткрытия = ДАТАВРЕМЯ(1, 1, 1))
	|	И (БанковскиеСчета.ДатаЗакрытия = ДАТАВРЕМЯ(1, 1, 1)
	|			ИЛИ БанковскиеСчета.ДатаЗакрытия >= &НачДата)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОрганизацииКонтактнаяИнформация.Представление КАК ЮридическийАдрес
	|ИЗ
	|	Справочник.Организации.КонтактнаяИнформация КАК ОрганизацииКонтактнаяИнформация
	|ГДЕ
	|	ОрганизацииКонтактнаяИнформация.Ссылка = &Организация
	|	И ОрганизацииКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ЮрАдресОрганизации)");
	
	ЗапросПоДопСведениям.УстановитьПараметр("НачДата", НачалоГода(Период));
	ЗапросПоДопСведениям.УстановитьПараметр("КонДата", КонецГода(Период));
	ЗапросПоДопСведениям.УстановитьПараметр("Организация", Организация);
	
	РезультатЗапроса = ЗапросПоДопСведениям.ВыполнитьПакет();
	
	// Объект налогообложения
	ОбъектНалогообложения = РезультатЗапроса[0].Выбрать();
	Если ОбъектНалогообложения.Следующий() Тогда
		ДанныеТитульногоЛиста.Вставить("ОбъектНалогообложения", ОбъектНалогообложения.ОбъектНалогообложения);
	Иначе
		ДанныеТитульногоЛиста.Вставить("ОбъектНалогообложения", "");
	КонецЕсли;
	
	
	// Банковские счета
	БанковскиеСчета = РезультатЗапроса[1].Выбрать();
	СчетаСтрока = "";
	
	Пока БанковскиеСчета.Следующий() Цикл
		СчетаСтрока = СчетаСтрока + "№" + БанковскиеСчета.НомерСчета + " в " + БанковскиеСчета.Банк + ", ";
	КонецЦикла;
	
	Если СтрДлина(СчетаСтрока) > 2 Тогда
		СчетаСтрока = Лев(СчетаСтрока, СтрДлина(СчетаСтрока) -2);
	КонецЕсли;
	
	ДанныеТитульногоЛиста.Вставить("Счета", СчетаСтрока);
	
	// Юридический адрес
	ДанныеТитульногоЛиста.Вставить("АдресОрганизации", "");
	ДанныеТитульногоЛиста.Вставить("АдресОрганизации2", "");
	
	МаксДлинаАдреса = 45;
	ЮридическийАдрес = РезультатЗапроса[2].Выбрать();
	Если ЮридическийАдрес.Следующий() Тогда
		ЮридическийАдресСтрока = ЮридическийАдрес.ЮридическийАдрес;
		
		// Если адрес Отчетной единицы не поместится в первую строку, то разрежем его
		//
		Если СтрДлина(ЮридическийАдресСтрока) > МаксДлинаАдреса Тогда
			
			ПозицияПереноса = 0;
			СтрокаПоиска = ЮридическийАдресСтрока;
			РезультатПоиска = Найти(СтрокаПоиска, ",");
			
			Пока (РезультатПоиска + ПозицияПереноса < МаксДлинаАдреса) И (РезультатПоиска > 0) Цикл
				ПозицияПереноса = ПозицияПереноса + РезультатПоиска;
				СтрокаПоиска = Прав(СтрокаПоиска, СтрДлина(СтрокаПоиска) - РезультатПоиска);
				РезультатПоиска = Найти(СтрокаПоиска, ",");
			КонецЦикла;
			
			Если НЕ ПозицияПереноса = 0 Тогда
				ДанныеТитульногоЛиста.АдресОрганизации = Лев(ЮридическийАдресСтрока, ПозицияПереноса);
				ДанныеТитульногоЛиста.АдресОрганизации2 = Прав(ЮридическийАдресСтрока, СтрДлина(ЮридическийАдресСтрока) - ПозицияПереноса);
			Иначе
				СтрокаПоиска = ЮридическийАдресСтрока;
				РезультатПоиска = Найти(СтрокаПоиска, " ");
				Пока (РезультатПоиска + ПозицияПереноса < МаксДлинаАдреса) И (РезультатПоиска > 0) Цикл
					ПозицияПереноса = ПозицияПереноса + РезультатПоиска;
					СтрокаПоиска = Прав(СтрокаПоиска, СтрДлина(СтрокаПоиска) - РезультатПоиска);
					РезультатПоиска = Найти(СтрокаПоиска, " ");
				КонецЦикла;
				ПозицияПереноса = ?(ПозицияПереноса = 0, МаксДлинаАдреса, ПозицияПереноса);
				ДанныеТитульногоЛиста.АдресОрганизации = Лев(ЮридическийАдресСтрока, ПозицияПереноса);
				ДанныеТитульногоЛиста.АдресОрганизации2 = Прав(ЮридическийАдресСтрока, СтрДлина(ЮридическийАдресСтрока) - ПозицияПереноса);
			КонецЕсли;
			
		Иначе
			ДанныеТитульногоЛиста.АдресОрганизации = ЮридическийАдресСтрока;
		КонецЕсли;
	КонецЕсли;

	Результат = Новый ТабличныйДокумент;
	Макет = ПолучитьМакет(ПараметрыВывода.ИмяМакета);
	Макет.Параметры.Заполнить(ДанныеТитульногоЛиста);
	Результат.Вывести(Макет);
	
	ИНН = Организация.ИНН;
	Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Организация,"ЮридическоеФизическоеЛицо") = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо Тогда
		ИмяОбластиИНН = "ПрИНН";
	Иначе
		ИмяОбластиИНН = "ИНН";
		КПП = Организация.КПП;
		Для к = 1 По 9 Цикл
			Результат.Область("КПП"+ к).Текст = Сред(КПП, к, 1);
		КонецЦикла;
	КонецЕсли;
	Для к = 1 По 12 Цикл
		Результат.Область(ИмяОбластиИНН + к).Текст = Сред(ИНН, к, 1);
	КонецЦикла;
	
	Результат.ТолькоПросмотр = Истина;
	
	ПараметрыОтчета.СписокСформированныхЛистов.Добавить(Результат, ПараметрыВывода.Представление);
	
КонецПроцедуры

Процедура ПечатьРаздела1(ПараметрыОтчета, ПараметрыВывода)
	
	Период      = ПараметрыОтчета.Период;
	Организация = ПараметрыОтчета.Организация;
	СНачалаГода = Истина; 
	
	Если ПараметрыОтчета.РежимПечатиГраф4и6 < 3 Тогда
		ТолькоБаза = Ложь;
	Иначе
		ТолькоБаза = Истина;
	КонецЕсли;
	
	Результат = Новый ТабличныйДокумент;

	НазванияКварталов = Новый Соответствие;
	
	НазванияКварталов.Вставить(1, "Итого за I квартал:");
	НазванияКварталов.Вставить(2, "Итого за II квартал:");
	НазванияКварталов.Вставить(3, "Итого за III квартал:");
	НазванияКварталов.Вставить(4, "Итого за IV квартал:");
	
	
	НазванияПериодов = Новый Соответствие;
	
	НазванияПериодов.Вставить(1, "<не выводится>");
	НазванияПериодов.Вставить(2, "Итого за полугодие:");
	НазванияПериодов.Вставить(3, "Итого за 9 месяцев:");
	НазванияПериодов.Вставить(4, "Итого за год:");
	
	
	ВыведенностьКвартала = Новый Соответствие;
	
	ВыведенностьКвартала.Вставить(1, Ложь);
	ВыведенностьКвартала.Вставить(2, Ложь);
	ВыведенностьКвартала.Вставить(3, Ложь);
	ВыведенностьКвартала.Вставить(4, Ложь); 	
	
	Если ТолькоБаза Тогда
		Макет = ПолучитьМакет(ПараметрыВывода.ИмяМакета);
		Шапка = Макет.ПолучитьОбласть("Шапка");  
		СтрокаРезультата = Макет.ПолучитьОбласть("Строка");
	Иначе
		Макет = ПолучитьМакет("Раздел1");
		ВывестиШапкуРаздела1(ПараметрыОтчета, Результат, Макет);
		СтрокаРезультата = Макет.ПолучитьОбласть("Строка|Режим12");
	КонецЕсли;
	
	Итого = Макет.ПолучитьОбласть("Итого");
	
	ЗапросПоНО = Новый Запрос;
	ЗапросПоНО.Текст = 
	"ВЫБРАТЬ
	|	СистемыНалогообложенияОрганизацийСрезПоследних.ОбъектНалогообложения
	|ИЗ
	|	РегистрСведений.СистемыНалогообложенияОрганизаций.СрезПоследних(&КонДата, Организация = &Организация) КАК СистемыНалогообложенияОрганизацийСрезПоследних
	|;";
	ЗапросПоНО.УстановитьПараметр("Организация",Организация);
	ЗапросПоНО.УстановитьПараметр("КонДата", КонецГода(Период));
	ВыборкаНО = ЗапросПоНО.Выполнить().Выбрать();
	
	Если ВыборкаНО.Следующий() Тогда
		НеобходимоПечататьРасходы = (ВыборкаНО.ОбъектНалогообложения = Перечисления.ВидыОбъектовНалогообложения.ДоходыМинусРасходы);
	Иначе
		НеобходимоПечататьРасходы = Истина;
	КонецЕсли;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	КнигаУчетаДоходовИРасходов.ДоходВсего КАК ПечДоходыБУ,
	|	КнигаУчетаДоходовИРасходов.ДоходБаза КАК ПечДоходы,
	|	ВЫБОР
	|		КОГДА &НеобходимоПечататьРасходы
	|			ТОГДА КнигаУчетаДоходовИРасходов.РасходВсего
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПечРасходыБУ,
	|	ВЫБОР
	|		КОГДА &НеобходимоПечататьРасходы
	|			ТОГДА КнигаУчетаДоходовИРасходов.РасходБаза
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПечРасходы,
	|	КнигаУчетаДоходовИРасходов.НДС КАК НДС,
	|	КнигаУчетаДоходовИРасходов.Содержание КАК Содержание,
	|	КнигаУчетаДоходовИРасходов.ДатаПервичногоДокумента КАК ДатаПервичногоДокумента,
	|	КнигаУчетаДоходовИРасходов.НомерПервичногоДокумента КАК НомерПервичногоДокумента,
	|	КнигаУчетаДоходовИРасходов.ПервичныйДокумент КАК Регистратор,
	|	КВАРТАЛ(КнигаУчетаДоходовИРасходов.Период) КАК ГруппировкаКварталов
	|ИЗ
	|	РегистрНакопления.КнигаУчетаДоходовИРасходов КАК КнигаУчетаДоходовИРасходов
	|ГДЕ
	|	КнигаУчетаДоходовИРасходов.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И КнигаУчетаДоходовИРасходов.Организация = &Организация
	|	И (&НеобходимоПечататьРасходы
	|			ИЛИ КнигаУчетаДоходовИРасходов.ДоходБаза <> 0
	|			ИЛИ КнигаУчетаДоходовИРасходов.ДоходВсего <> 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ГруппировкаКварталов,
	|	ДатаПервичногоДокумента
	|ИТОГИ
	|	СУММА(ПечДоходыБУ),
	|	СУММА(ПечДоходы),
	|	СУММА(ПечРасходыБУ),
	|	СУММА(ПечРасходы),
	|	СУММА(НДС)
	|ПО
	|	ОБЩИЕ,
	|	ГруппировкаКварталов");
	
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Если СНачалаГода Тогда
		Запрос.УстановитьПараметр("ДатаНачала", НачалоГода(Период));
	Иначе
		Запрос.УстановитьПараметр("ДатаНачала", НачалоКвартала(Период));
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(Период));
	Запрос.УстановитьПараметр("НеобходимоПечататьРасходы", НеобходимоПечататьРасходы);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаКварталов = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"ГруппировкаКварталов");
	
	Г4ЗаГод = 0;
	Г5ЗаГод = 0;
	Г6ЗаГод = 0;
	Г7ЗаГод = 0;
	
	сч = 1; СтрокаОт = НСтр("ru=' от '");
	
	
	Пока ВыборкаКварталов.Следующий() Цикл
		
		Если ТолькоБаза Тогда
			Результат.Вывести(Шапка); 		
		Иначе
			ВывестиШапкуРаздела1(ПараметрыОтчета, Результат, Макет);
		КонецЕсли; 
		
		Выборка = ВыборкаКварталов.Выбрать();
		
		
		// Проверим, нет ли пропуска кварталов (нет сведений за эти кварталы)
		// Если пропуск есть, то выведем пустую отбиву за квартал по предыдущим периодам
		Если ВыборкаКварталов.ГруппировкаКварталов > 1 И СНачалаГода Тогда
			
			Для К = 1 По ВыборкаКварталов.ГруппировкаКварталов-1 Цикл
				
				Если НЕ ВыведенностьКвартала[к] Тогда
					
					Если Не ТолькоБаза Тогда
						Итого.Параметры.ПечДоходыБУ = Г4ЗаГод;
						Итого.Параметры.ПечРасходыБУ = Г6ЗаГод;
					КонецЕсли;
					
					Итого.Параметры.ПечДоходы = 0;
					Итого.Параметры.ПечРасходы = 0;
					
					Итого.Параметры.ПечТекстИтогов = НазванияКварталов[к];
					Результат.Вывести(Итого);
					
					Если к > 1 Тогда
						Итого.Параметры.ПечДоходы = Г5ЗаГод;
						Итого.Параметры.ПечРасходы = Г7ЗаГод;
						Итого.Параметры.ПечТекстИтогов = НазванияПериодов[к];
						Результат.Вывести(Итого);
					КонецЕсли;
					
					Результат.ТолькоПросмотр = Истина;
					Результат.ПовторятьПриПечатиСтроки = Результат.Область(6,,6,);
					ПараметрыОтчета.СписокСформированныхЛистов.Добавить(Результат, "Раздел I за " + к + " кв. (Доходы и расходы)");
					
					Результат = Новый ТабличныйДокумент;
					
					ВыведенностьКвартала[к] = Истина;
					
					Если ТолькоБаза Тогда
						Результат.Вывести(Шапка); 		
					Иначе
						ВывестиШапкуРаздела1(ПараметрыОтчета, Результат, Макет);
					КонецЕсли; 

				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
			
		ВыведенностьКвартала[ВыборкаКварталов.ГруппировкаКварталов] = Истина;
		
		Пока Выборка.Следующий() Цикл
			
			Если Выборка.ТипЗаписи() <> ТипЗаписиЗапроса.ДетальнаяЗапись Тогда
				
				Г4ЗаГод = Г4ЗаГод+Выборка.ПечДоходыБУ;
				Г5ЗаГод = Г5ЗаГод+Выборка.ПечДоходы;
				Г6ЗаГод = Г6ЗаГод+Выборка.ПечРасходыБУ;
				Г7ЗаГод = Г7ЗаГод+Выборка.ПечРасходы;
				Продолжить;
				
			КонецЕсли;
			
			СтрокаРезультата.Параметры.Заполнить(Выборка);
			
			Если Выборка.НДС = 0 
				//ИЛИ ВыделятьНДС 
				Тогда
				
				СтрокаРезультата.Параметры.ПечРасходы = Выборка.ПечРасходыБУ;
				
			ИначеЕсли ПараметрыОтчета.РежимПечатиНДС = 1 Тогда
				
				СтрокаРезультата.Параметры.ПечРасходы = "" + Формат(Выборка.ПечРасходыБУ + Выборка.НДС, "ЧДЦ=2") + "
				|в т.ч. НДС
				|" + Формат(Выборка.НДС, "ЧДЦ=2");
				Г6ЗаГод = Г6ЗаГод+Выборка.НДС;
				Г7ЗаГод = Г7ЗаГод+Выборка.НДС;				
			Иначе // ПараметрыОтчета.РежимПечатиНДС = 2
				
				СтрокаРезультата.Параметры.ПечРасходы = Выборка.ПечРасходыБУ;
				
			КонецЕсли;
			
			СтрокаРезультата.Параметры.НомерПП = сч;
			СтрокаРезультата.Параметры.ТекРасшифровка = Выборка.Регистратор;
			
			СтрокаРезультата.Параметры.ПечДатаНомерДок = 
				"№ "
				+НомерПервичногоДокумента(Выборка.НомерПервичногоДокумента) 
				+СтрокаОт 
				+ Формат(Выборка.ДатаПервичногоДокумента,"ДФ=dd.MM.yy");
				
			СтрокаРезультата.Параметры.Регистратор = Выборка.Регистратор;
			СтрокаРезультата.Параметры.ПечСодержОпер = Выборка.Содержание;
			
			Результат.Вывести(СтрокаРезультата); 	
			
			// Выведем строку НДС
			Если ПараметрыОтчета.РежимПечатиНДС = 2 И Выборка.НДС <> 0 Тогда
				Г6ЗаГод = Г6ЗаГод+Выборка.НДС;
				Г7ЗаГод = Г7ЗаГод+Выборка.НДС;
				
				сч = сч+1; 			
				СтрокаРезультата.Параметры.Заполнить(Выборка);
				
				СтрокаРезультата.Параметры.НомерПП = сч;
				СтрокаРезультата.Параметры.ТекРасшифровка = Выборка.Регистратор; 
				СтрокаРезультата.Параметры.ПечДатаНомерДок = 
				"№ "
				+НомерПервичногоДокумента(Выборка.НомерПервичногоДокумента) 
				+СтрокаОт 
				+ Формат(Выборка.ДатаПервичногоДокумента,"ДФ=dd.MM.yy"); 
				СтрокаРезультата.Параметры.Регистратор = Выборка.Регистратор; 
				
				СтрокаРезультата.Параметры.ПечРасходы = Выборка.НДС;				
				СтрокаРезультата.Параметры.ПечСодержОпер = Выборка.Содержание +" (НДС)";	
				
				Результат.Вывести(СтрокаРезультата); 
			КонецЕсли;
			
			сч = сч+1;
			
		КонецЦикла;
		
		Итого.Параметры.Заполнить(ВыборкаКварталов);  
		Итого.Параметры.ПечРасходы = ВыборкаКварталов.ПечРасходы + ВыборкаКварталов.НДС; 
		Итого.Параметры.ПечТекстИтогов = НазванияКварталов[ВыборкаКварталов.ГруппировкаКварталов];
		Результат.Вывести(Итого);
		
		Если СНачалаГода И ВыборкаКварталов.ГруппировкаКварталов > 1 Тогда
			Если Не ТолькоБаза Тогда
				Итого.Параметры.ПечДоходыБУ = Г4ЗаГод;
				Итого.Параметры.ПечРасходыБУ = Г6ЗаГод;
			КонецЕсли;
			
			Итого.Параметры.ПечДоходы = Г5ЗаГод;
			Итого.Параметры.ПечРасходы = Г7ЗаГод;
			
			Итого.Параметры.ПечТекстИтогов = НазванияПериодов[ВыборкаКварталов.ГруппировкаКварталов];
			Результат.Вывести(Итого);
		КонецЕсли;
		Если ВыборкаКварталов.ГруппировкаКварталов < 4 Тогда
			Результат.ТолькоПросмотр = Истина;
			Результат.ПовторятьПриПечатиСтроки = Результат.Область(6,,6,);
			ПараметрыОтчета.СписокСформированныхЛистов.Добавить(Результат, "Раздел I за " + ВыборкаКварталов.ГруппировкаКварталов + " кв. (Доходы и расходы)");
			
			Результат = Новый ТабличныйДокумент;
		КонецЕсли;
		
	КонецЦикла;
	
	// проверим, все ли кварталы ввывдены, при выводах с начала года
	Если СНачалаГода Тогда
		Для К = 1 По 4 Цикл
			Если НЕ ВыведенностьКвартала[к] Тогда
				
				Если ТолькоБаза Тогда
					Результат.Вывести(Шапка); 		
				Иначе
					ВывестиШапкуРаздела1(ПараметрыОтчета, Результат, Макет);
				КонецЕсли; 

				Если Не ТолькоБаза Тогда
					Итого.Параметры.ПечДоходыБУ = Г4ЗаГод;
					Итого.Параметры.ПечРасходыБУ = Г6ЗаГод;
				КонецЕсли;
				
				Итого.Параметры.ПечДоходы = 0;
				Итого.Параметры.ПечРасходы = 0;
				
				Итого.Параметры.ПечТекстИтогов = НазванияКварталов[к];
				Результат.Вывести(Итого);
				
				Если к > 1 Тогда
					Итого.Параметры.ПечДоходы = Г5ЗаГод;
					Итого.Параметры.ПечРасходы = Г7ЗаГод;
					Итого.Параметры.ПечТекстИтогов = НазванияПериодов[к];
					Результат.Вывести(Итого);
				КонецЕсли;
				
				Если к < 4 Тогда
					Результат.ТолькоПросмотр = Истина;
					Результат.ПовторятьПриПечатиСтроки = Результат.Область(6,,6,);
					ПараметрыОтчета.СписокСформированныхЛистов.Добавить(Результат, "Раздел I за " + к + " кв. (Доходы и расходы)");
					
					Результат = Новый ТабличныйДокумент;
				КонецЕсли;
				
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
		// Выведем подвал
	Если ТолькоБаза И ПолучитьНомерКвартала(Период) = 4 И Период >= Дата("20060101") Тогда
		Секция = Макет.ПолучитьОбласть("Справка");
		
		П010 = Г5ЗаГод;
		П020 = Г7ЗаГод;
        П030 = 0;
		
		
		Секция.Параметры.ПечДоходы = П010;
		Секция.Параметры.ПечРасходы = П020;
		Секция.Параметры.Убыток030 = П030;
		
		Если П010 - П020 - П030 >= 0 Тогда
			Секция.Параметры.ИтогоДоходы = П010 - П020 - П030;
		Иначе
			Секция.Параметры.ИтогоРасходы = П020 + П030 - П010;
		КонецЕсли;
		
		Результат.Вывести(Секция);
	КонецЕсли;
	
	
	Результат.ТолькоПросмотр = Истина;
	Результат.ПовторятьПриПечатиСтроки = Результат.Область(6,,6,);
	
	ПараметрыОтчета.СписокСформированныхЛистов.Добавить(Результат, "Раздел I за 4 кв. (Доходы и расходы)");
	
КонецПроцедуры 

Процедура ВывестиШапкуРаздела1(ПараметрыОтчета, ТабличныйДокумент, Макет)
	
	Секция = Макет.ПолучитьОбласть("Шапка|Основная");
	ТабличныйДокумент.Вывести(Секция);
	Секция = Макет.ПолучитьОбласть(?(ПараметрыОтчета.РежимПечатиГраф4и6 = 3, "Шапка|Режим3","Шапка|Режим12"));
	Если ПараметрыОтчета.РежимПечатиГраф4и6 = 3 Тогда
		Секция = Макет.ПолучитьОбласть("Шапка|Режим3");
		Секция.Параметры.Заголовок4 = "Доходы, учитываемые при исчислении налоговой базы";
		Секция.Параметры.Заголовок6 = "Расходы, учитываемые при исчислении налоговой базы";
	Иначе
		Секция = Макет.ПолучитьОбласть("Шапка|Режим12");
		Секция.Параметры.Заголовок5 = "в т.ч. доходы, учитываемые при исчислении налоговой базы";
		Секция.Параметры.Заголовок7 = "в т.ч. расходы, учитываемые при исчислении налоговой базы";
	КонецЕсли;
	
	ТабличныйДокумент.Присоединить(Секция);
	
КонецПроцедуры

Процедура ПечатьРаздела2(ПараметрыОтчета, ПараметрыВывода)
	
	Результат = Новый ТабличныйДокумент;
	Результат.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	Результат.АвтоМасштаб = Истина;
	
	Период      = ПараметрыОтчета.Период;
	Организация = ПараметрыОтчета.Организация;
	
	ДанныеРаздела = Новый Структура;
	ДанныеРаздела.Вставить("ЗаПериод", СтрШаблон("за %1 год", Формат(Период,"ДФ=гггг"))); 
	
	Макет = ПолучитьМакет(ПараметрыВывода.ИмяМакета);
	
	Шапка = Макет.ПолучитьОбласть("Шапка");
	Шапка.Параметры.Заполнить(ДанныеРаздела);
	Результат.Вывести(Шапка);
	
	Строка = Макет.ПолучитьОбласть("Строка");
	Итог = Макет.ПолучитьОбласть("Итог");
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	СправочникВнеоборотныеАктивы.Ссылка КАК ОсновноеСредство,
	|	СправочникВнеоборотныеАктивы.ДатаОплаты,
	|	СправочникВнеоборотныеАктивы.ДатаРегистрации КАК Графа4_ГосударственнаяРегистрация,
	|	МАКСИМУМ(ПринятиеКУчетуВА.Дата) КАК ПечДатаВводаВЭксплуатацию,
	|	СправочникВнеоборотныеАктивы.НачальнаяСтоимость КАК ПервоначальнаяСтоимость,
	|	0 КАК ОстаточнаяСтоимость,
	|	5 - КВАРТАЛ(МАКСИМУМ(ПринятиеКУчетуВА.Дата)) КАК КоличествоКварталовВНалоговомПериоде,
	|	100 КАК ПроцентПринятыхРасходов,
	|	ВЫРАЗИТЬ(1 / (5 - КВАРТАЛ(МАКСИМУМ(ПринятиеКУчетуВА.Дата))) КАК ЧИСЛО(5, 2)) КАК ПроцентПринятыхРасходовЗаКвартал,
	|	ВЫРАЗИТЬ(1 / (5 - КВАРТАЛ(МАКСИМУМ(ПринятиеКУчетуВА.Дата))) * СправочникВнеоборотныеАктивы.НачальнаяСтоимость КАК ЧИСЛО(15, 2)) КАК СуммаРасходовЗаПоследнийКвартал,
	|	СправочникВнеоборотныеАктивы.НачальнаяСтоимость КАК СуммаРасходовЗаОтчетныйПериод,
	|	0 КАК СуммаРасходовПредыдущихПериодов,
	|	0 КАК СуммаРасходовНеВключенныхВСоставРасходов,
	|	"""" КАК ПечДатаВыбытия,
	|	СправочникВнеоборотныеАктивы.Наименование КАК НаименованиеОС
	|ИЗ
	|	Справочник.ВнеоборотныеАктивы КАК СправочникВнеоборотныеАктивы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПринятиеКУчетуВА.ВнеоборотныеАктивы КАК ПринятиеКУчетуВАТаблица
	|		ПО (СправочникВнеоборотныеАктивы.УчитыватьВНУ)
	|			И (СправочникВнеоборотныеАктивы.ДатаОплаты <> &ПустаяДата)
	|			И СправочникВнеоборотныеАктивы.Ссылка = ПринятиеКУчетуВАТаблица.ВнеоборотныйАктив
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПринятиеКУчетуВА КАК ПринятиеКУчетуВА
	|		ПО (ПринятиеКУчетуВА.Ссылка = ПринятиеКУчетуВАТаблица.Ссылка)
	|			И (ПринятиеКУчетуВА.Проведен)
	|			И (ПринятиеКУчетуВА.Организация = &Организация)
	|			И (ПринятиеКУчетуВА.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания)
	|
	|СГРУППИРОВАТЬ ПО
	|	СправочникВнеоборотныеАктивы.Ссылка,
	|	СправочникВнеоборотныеАктивы.ДатаОплаты,
	|	СправочникВнеоборотныеАктивы.ДатаРегистрации,
	|	СправочникВнеоборотныеАктивы.НачальнаяСтоимость,
	|	СправочникВнеоборотныеАктивы.НачальнаяСтоимость,
	|	СправочникВнеоборотныеАктивы.Наименование
	|ИТОГИ
	|	СУММА(ПервоначальнаяСтоимость),
	|	СУММА(ОстаточнаяСтоимость),
	|	СУММА(СуммаРасходовЗаПоследнийКвартал),
	|	СУММА(СуммаРасходовЗаОтчетныйПериод),
	|	СУММА(СуммаРасходовПредыдущихПериодов),
	|	СУММА(СуммаРасходовНеВключенныхВСоставРасходов)
	|ПО
	|	ОБЩИЕ");
	
	Запрос.УстановитьПараметр("ДатаНачала", НачалоГода(Период));
	Запрос.УстановитьПараметр("ДатаОкончания", Период);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ПустаяДата", Дата(1,1,1));
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	НомерПП = 1;
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.ТипЗаписи() = ТипЗаписиЗапроса.ОбщийИтог Тогда
			Итог.Параметры.Заполнить(Выборка);
			Продолжить;
		КонецЕсли;
		Строка.Параметры.Заполнить(Выборка);
		Строка.Параметры.ОсновноеСредство = Выборка.ОсновноеСредство;
		Строка.Параметры.ПорядковыйНомер = НомерПП;
		
		Результат.Вывести(Строка);
		
		
		НомерПП = НомерПП + 1;
		
	КонецЦикла;
	
	Результат.Вывести(Итог);
	Результат.ПовторятьПриПечатиСтроки = Результат.Область(10,,10,);
	
	
	ПараметрыОтчета.СписокСформированныхЛистов.Добавить(Результат, ПараметрыВывода.Представление);
	
КонецПроцедуры

Процедура ПечатьРаздела3(ПараметрыОтчета, ПараметрыВывода)
	
	Период = ПараметрыОтчета.Период;
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ОриентацияСтраницы	= ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.Автомасштаб			= Истина;
	ТабличныйДокумент.ИмяПараметровПечати = ПараметрыВывода.ПараметрыПечати;
	
	ДанныеРаздела = Новый Структура;
	ДанныеРаздела.Вставить("ЗаПериод", СтрШаблон("за %1 год", Формат(Период, "ДФ=гггг")));
	
	Макет = ПолучитьМакет(ПараметрыВывода.ИмяМакета);
	Макет.Параметры.Заполнить(ДанныеРаздела);
	
	ТабличныйДокумент.Вывести(Макет);
	ТабличныйДокумент.ТолькоПросмотр = Истина;
	
	ПараметрыОтчета.СписокСформированныхЛистов.Добавить(ТабличныйДокумент, ПараметрыВывода.Представление);
	
КонецПроцедуры

Процедура ПечатьРазделаВзносы(ПараметрыОтчета, ПараметрыВывода)
	
	Если НЕ ЗначениеЗаполнено(ПараметрыВывода.ИмяМакета) Тогда
		Возврат;
	КонецЕсли;
	
	Период = ПараметрыОтчета.Период;
	Организация = ПараметрыОтчета.Организация;
	СНачалаГода = Истина;
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ОриентацияСтраницы	= ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.Автомасштаб			= Истина;
	ТабличныйДокумент.ИмяПараметровПечати = ПараметрыВывода.ПараметрыПечати;
	
	Макет = ПолучитьМакет(ПараметрыВывода.ИмяМакета);
	Секция = Макет.ПолучитьОбласть("Шапка");
	Секция.Параметры.ЗаПериод = "за " + ПолучитьПредставлениеПериода(Период);
	ТабличныйДокумент.Вывести(Секция);
	// Проверяем, что объект налогообложения - доходы
	ЗапросНО = Новый Запрос;
	ЗапросНО.Текст =
	"ВЫБРАТЬ
	|	СистемыНалогообложенияОрганизацийСрезПоследних.СтавкаНалога,
	|	СистемыНалогообложенияОрганизацийСрезПоследних.ОбъектНалогообложения
	|ИЗ
	|	РегистрСведений.СистемыНалогообложенияОрганизаций.СрезПоследних(&ОкончаниеПериода, Организация = &Организация) КАК СистемыНалогообложенияОрганизацийСрезПоследних
	|;";
	ЗапросНО.УстановитьПараметр("Организация", Организация);
	ЗапросНО.УстановитьПараметр("ОкончаниеПериода", Период);
	Результат = ЗапросНО.Выполнить().Выбрать();
	Результат.Следующий();
	Если Результат.ОбъектНалогообложения <> Перечисления.ВидыОбъектовНалогообложения.Доходы Тогда
		Секция = Макет.ПолучитьОбласть("Итог");
		Секция.Параметры.ПредставлениеПериодаИтогов = "Итого за " + ПолучитьПредставлениеПериода(Период);
		ТабличныйДокумент.Вывести(Секция);
		
		ТабличныйДокумент.ТолькоПросмотр = Истина;
		
		ПараметрыОтчета.СписокСформированныхЛистов.Добавить(ТабличныйДокумент, "Раздел IV (Уменьшение суммы налога)");
		Возврат;
	КонецЕсли;
	
	НачДата = ?(СНачалаГода, НачалоГода(Период), НачалоКвартала(Период));
	
	НПП = 1;
	
	СистемаНалогообложения = РегистрыСведений.СистемыНалогообложенияОрганизаций.ПолучитьПоследнее(КонецДня(ПараметрыОтчета.Период), Новый Структура("Организация", Организация));
	УчитыватьСтраховыеВзносы = НЕ (СистемаНалогообложения.ПлательщикЕНВД И СистемаНалогообложения.ПлательщикУСН И Организация.ВидУчетаСтраховыхВзносов = Перечисления.ВидыУчетаСтраховыхВзносов.УчитыватьВЕНВД);
	
	Если НачДата <> НачалоГода(Период) Тогда
		
		ЗапросНПП = Новый Запрос();
		ЗапросНПП.УстановитьПараметр("Организация", Организация);
		ЗапросНПП.УстановитьПараметр("НачДата", НачалоГода(Период));
		ЗапросНПП.УстановитьПараметр("КонДата", НачалоКвартала(Период) - 1);
		ВидыВзаиморасчетовВзносыВПФРИФСС = Новый Массив;
		
		ВидыВзаиморасчетовВзносыВПФРИФСС.Добавить(Справочники.ВидыНалогов.ПФРНакопительная);
		ВидыВзаиморасчетовВзносыВПФРИФСС.Добавить(Справочники.ВидыНалогов.ПФРСтраховая);
		ВидыВзаиморасчетовВзносыВПФРИФСС.Добавить(Справочники.ВидыНалогов.ПФРСвыше300ТР);
		ВидыВзаиморасчетовВзносыВПФРИФСС.Добавить(Справочники.ВидыНалогов.ТФОМС);
		ВидыВзаиморасчетовВзносыВПФРИФСС.Добавить(Справочники.ВидыНалогов.ФФОМС);
		ВидыВзаиморасчетовВзносыВПФРИФСС.Добавить(Справочники.ВидыНалогов.ПФРНакопительнаяСотрудники);
		ВидыВзаиморасчетовВзносыВПФРИФСС.Добавить(Справочники.ВидыНалогов.ПФРСтраховаяСотрудники);
		ВидыВзаиморасчетовВзносыВПФРИФСС.Добавить(Справочники.ВидыНалогов.ФСССотрудники);
		ВидыВзаиморасчетовВзносыВПФРИФСС.Добавить(Справочники.ВидыНалогов.ФССТравматизмСотрудники);
		ВидыВзаиморасчетовВзносыВПФРИФСС.Добавить(Справочники.ВидыНалогов.ФОМССотрудники); 
		ВидыВзаиморасчетовВзносыВПФРИФСС.Добавить(Справочники.ВидыНалогов.СтраховыеВзносыЕдиныйТариф);   
		ВидыВзаиморасчетовВзносыВПФРИФСС.Добавить(Справочники.ВидыНалогов.ФиксированныеВзносы_СтраховыеВзносыЕдиныйТариф);
		
		ЗапросНПП.УстановитьПараметр("ВидыВзаиморасчетовВзносыВПФРИФСС", ВидыВзаиморасчетовВзносыВПФРИФСС);
		
		ЗапросНПП.Текст = 
		"ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РасчетыПоНалогам.Регистратор) КАК КоличествоСтрок
		|ИЗ
		|	РегистрНакопления.РасчетыПоНалогам КАК РасчетыПоНалогам
		|ГДЕ
		|	РасчетыПоНалогам.Период МЕЖДУ &НачДата И &КонДата
		|	И РасчетыПоНалогам.Организация = &Организация
		|	И РасчетыПоНалогам.ВидНалога В(&ВидыВзаиморасчетовВзносыВПФРИФСС)";
		
		Если УчитыватьСтраховыеВзносы Тогда
			
			РезультатЗапроса = ЗапросНПП.Выполнить();
			
			Если НЕ РезультатЗапроса.Пустой() Тогда
				ТаблицаРезультата = РезультатЗапроса.Выгрузить();
				НПП = НПП + ТаблицаРезультата.Итог("КоличествоСтрок");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	ТекКвартал 				= ПолучитьНомерКвартала(НачДата);
	ПоследнийКварталПериода = ПолучитьНомерКвартала(Период);
	
	ВыборкаЗаписей = ПолучитьЗаписиУменьшенияНалога(НачДата, КонецДня(Период), Организация);
	
	ТаблицаДанныхУменьшенияНалогаПоКвартально = ПолучитьОборотыУменьшенияНалогаПоКвартально(
		НачалоГода(Период), КонецДня(Период), Организация, УчитыватьСтраховыеВзносы);
		
	Если УчитыватьСтраховыеВзносы Тогда
		Пока ВыборкаЗаписей.Следующий() Цикл
			
			КварталЗаписи = Цел(Месяц(КонецКвартала(ВыборкаЗаписей.ПериодНачисления))/3);
			
			Пока КварталЗаписи <> ТекКвартал Цикл
				
				ВывестиУменьшенияНалогаЗаКвартал(ТаблицаДанныхУменьшенияНалогаПоКвартально, Период, ТекКвартал, ПоследнийКварталПериода, Макет, ТабличныйДокумент);
				ТекКвартал = ТекКвартал + 1;
				
			КонецЦикла;
			
			Секция = Макет.ПолучитьОбласть("Строка");
			Секция.Параметры.НомерПП = НПП;
			Секция.Параметры.ДатаНомер = Формат( ВыборкаЗаписей.ДатаДокумента,"ДФ=dd.MM.yyyy") +" г., №"+
				ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(
						ВыборкаЗаписей.НомерДокумента,
						Истина, 
						Истина);
			Секция.Параметры.Заполнить(ВыборкаЗаписей);
			Секция.Параметры.ИтогоВзносов = ВыборкаЗаписей.ПФР + ВыборкаЗаписей.ФСС + ВыборкаЗаписей.ФОМС + ВыборкаЗаписей.ФСС_НС 
					+ ВыборкаЗаписей.Больничные + ВыборкаЗаписей.Дстрах;
					
			НПП = НПП + 1;
			ТабличныйДокумент.Вывести(Секция);
			
		КонецЦикла;
	КонецЕсли;
	
	Пока ПоследнийКварталПериода >= ТекКвартал Цикл
		
		ВывестиУменьшенияНалогаЗаКвартал(ТаблицаДанныхУменьшенияНалогаПоКвартально, Период, ТекКвартал, ПоследнийКварталПериода, Макет, ТабличныйДокумент);
		ТекКвартал = ТекКвартал + 1;
		
	КонецЦикла;
	
	ТабличныйДокумент.ТолькоПросмотр = Истина;
	
	ПараметрыОтчета.СписокСформированныхЛистов.Добавить(ТабличныйДокумент, ПараметрыВывода.Представление);
	
КонецПроцедуры

Процедура ПечатьРазделаТорговыйСбор(ПараметрыОтчета, ПараметрыВывода)
	
	Если НЕ ЗначениеЗаполнено(ПараметрыВывода.ИмяМакета) Тогда
		Возврат;
	КонецЕсли;
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ОриентацияСтраницы  = ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.Автомасштаб         = Истина;
	ТабличныйДокумент.ИмяПараметровПечати = ПараметрыВывода.ПараметрыПечати;
	
	ДанныеРаздела = Новый Структура;
	ДанныеРаздела.Вставить("ЗаПериод", СтрШаблон("за %1", ПолучитьПредставлениеПериода(ПараметрыОтчета.Период)));
	
	Макет = ПолучитьМакет(ПараметрыВывода.ИмяМакета);
	Секция = Макет.ПолучитьОбласть("Шапка");
	Секция.Параметры.Заполнить(ДанныеРаздела);
	ТабличныйДокумент.Вывести(Секция);
	
	НачДата = НачалоКвартала(ПараметрыОтчета.НачалоПериода);
	
	ТаблицаУплатТорговогоСбора = ПолучитьТаблицуУплатТорговогоСбора(НачДата, ПараметрыОтчета);
	
	НПП = 1;
	ТекКвартал              = ПолучитьНомерКвартала(НачДата);
	ПоследнийКварталПериода = ПолучитьНомерКвартала(ПараметрыОтчета.Период);
	
	Для Каждого ВыборкаЗаписей Из ТаблицаУплатТорговогоСбора Цикл
		
		КварталЗаписи = КварталЗаписи(ВыборкаЗаписей.Период, ПараметрыОтчета);
		
		Пока КварталЗаписи <> ТекКвартал Цикл
			
			ВывестиУплаченныйТорговыйСборЗаКвартал(ПараметрыОтчета, ТекКвартал, Макет, ТабличныйДокумент);
			ТекКвартал = ТекКвартал + 1;
			
		КонецЦикла;
		
		Секция = Макет.ПолучитьОбласть("Строка");
		Секция.Параметры.НомерПП = НПП;
		Секция.Параметры.Заполнить(ВыборкаЗаписей);
		
		ДатаПервичногоДокумента = ?(ЗначениеЗаполнено(ВыборкаЗаписей.ДатаВходящегоДокумента),
			ВыборкаЗаписей.ДатаВходящегоДОкумента,
			ВыборкаЗаписей.Период);
		РеквизитыПервичногоДокумента = РеквизитыПервичногоДокументаДляКУДиР(
			ДатаПервичногоДокумента, ВыборкаЗаписей.НомерВходящегоДокумента, ВыборкаЗаписей.Период);
		Секция.Параметры.ДатаНомер = РеквизитыПервичногоДокумента;
		
		НалоговыйПериод = НачалоКвартала(ДобавитьМесяц(ВыборкаЗаписей.Период, -1));
		ПериодНачисления = ?(ЗначениеЗаполнено(НалоговыйПериод),
			НачалоКвартала(НалоговыйПериод),
			НачалоКвартала(ВыборкаЗаписей.Период));
		
		Секция.Параметры.ПериодНачисленияПредставление = ПредставлениеПериода(
			НачалоКвартала(ПериодНачисления), КонецКвартала(ПериодНачисления), "ФП=Истина");
		
		НПП = НПП + 1;
		ТабличныйДокумент.Вывести(Секция);
		
	КонецЦикла;
	
	Пока ПоследнийКварталПериода >= ТекКвартал Цикл
		
		ВывестиУплаченныйТорговыйСборЗаКвартал(ПараметрыОтчета, ТекКвартал, Макет, ТабличныйДокумент);
		ТекКвартал = ТекКвартал + 1;
		
	КонецЦикла;
	
	ТабличныйДокумент.ТолькоПросмотр = Истина;
	
	ПараметрыОтчета.СписокСформированныхЛистов.Добавить(ТабличныйДокумент, ПараметрыВывода.Представление);
	
КонецПроцедуры

Процедура ВывестиУменьшенияНалогаЗаКвартал(ТаблицаДанныхУменьшенияНалогаПоКвартально,  Период, ТекКвартал, ПоследнийКварталПериода, Макет, ТабличныйДокумент)
	
	Секция = Макет.ПолучитьОбласть("Итог");
	РимскоеЧисло = ТекКвартал;
	Секция.Параметры.ПредставлениеПериодаИтогов = "Итого за "
		+ СтроковыеФункцииКлиентСервер.ПреобразоватьЧислоВРимскуюНотацию(РимскоеЧисло, Ложь) + " квартал";
		
	ПФР 		= 0;
	ФСС 		= 0;
	ФОМС 		= 0;
	ФСС_НС 		= 0;
	Больничные 	= 0;
	Дстрах 		= 0;
		
	Для Каждого ИтогиПериода Из ТаблицаДанныхУменьшенияНалогаПоКвартально Цикл	
		
		Если ПолучитьНомерКвартала(ИтогиПериода.Квартал) > ТекКвартал Тогда
			Прервать;
		КонецЕсли;
		ПФР 		= ПФР + ИтогиПериода.ПФР;
		ФСС 		= ФСС + ИтогиПериода.ФСС;
		ФОМС 		= ФОМС + ИтогиПериода.ФОМС;
		ФСС_НС 		= ФСС_НС + ИтогиПериода.ФСС_НС;
		Больничные 	= Больничные + ИтогиПериода.Больничные;
		Дстрах 		= Дстрах + ИтогиПериода.Дстрах;
		
		ИтогоВзносов = ИтогиПериода.ПФР + ИтогиПериода.ФСС + ИтогиПериода.ФОМС + ИтогиПериода.ФСС_НС + ИтогиПериода.Больничные + ИтогиПериода.Дстрах;
		
		Если ПолучитьНомерКвартала(ИтогиПериода.Квартал) = ТекКвартал Тогда
			Секция.Параметры.Заполнить(ИтогиПериода);
			Секция.Параметры.ИтогоВзносов = ИтогоВзносов;
			ТабличныйДокумент.Вывести(Секция);
		КонецЕсли;
	КонецЦикла;
	
	Если ТекКвартал <> 1 Тогда
		Секция = Макет.ПолучитьОбласть("Итог");
		Секция.Параметры.ПредставлениеПериодаИтогов = "Итого за " + ПолучитьПредставлениеПериода(ДобавитьМесяц(НачалоГода(Период)-1, ТекКвартал*3));
		
		Секция.Параметры.ПФР 		= ПФР;
		Секция.Параметры.ФСС 		= ФСС;
		Секция.Параметры.ФОМС 		= ФОМС;
		Секция.Параметры.ФСС_НС 		= ФСС_НС;
		Секция.Параметры.Больничные 	= Больничные;
		Секция.Параметры.Дстрах 		= Дстрах;
		Секция.Параметры.ИтогоВзносов   = ПФР + ФСС + ФОМС +ФСС_НС + Больничные + Дстрах;
	
		ТабличныйДокумент.Вывести(Секция);
	КонецЕсли;
	
КонецПроцедуры

Функция КварталЗаписи(ПериодЗаписи, ПараметрыОтчета)
	
	Если ПараметрыОтчета.НалоговыйПериодРасширен И ПериодЗаписи < НачалоГода(ПараметрыОтчета.Период) Тогда
		// Записи месяца регистрации (декабря) в случае расширенного налогового периода
		// отражаются в КУДиР первым кварталом следующего года.
		Возврат 1;
	Иначе
		Возврат ПолучитьНомерКвартала(ПериодЗаписи);
	КонецЕсли;
	
КонецФункции

Функция ПолучитьНомерКвартала(ДатаВКвартале)
	
	Возврат Цел(Месяц(КонецКвартала(ДатаВКвартале))/3);
	
КонецФункции

Функция НазваниеПериодаНарастающимИтогом(НомерКвартала)

	ПредставлениеПериода = "";
	
	Если НомерКвартала = 2 Тогда
		ПредставлениеПериода = НСтр("ru = 'полугодие'");
	ИначеЕсли НомерКвартала = 3 Тогда
		ПредставлениеПериода = НСтр("ru = '9 месяцев'");
	ИначеЕсли НомерКвартала = 4 Тогда
		ПредставлениеПериода = НСтр("ru = 'год'");
	КонецЕсли;
	
	Возврат ПредставлениеПериода;

КонецФункции

// Получает поквартальные обороты раздела IV книги учета доходов и расходов за период
//
Функция ПолучитьОборотыУменьшенияНалогаПоКвартально(НачалоПериода, КонецПериода, Организация, УчитыватьСтраховыеВзносы)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РасчетыПоНалогамОбороты.Период,
	|	РасчетыПоНалогамОбороты.ВидНалога КАК ВидВзаиморасчетов,
	|	РасчетыПоНалогамОбороты.СуммаРасход КАК СуммаУплачено
	|ПОМЕСТИТЬ ВзаиморасчетыСБюджетом
	|ИЗ
	|	РегистрНакопления.РасчетыПоНалогам.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			Квартал,
	|			Организация = &Организация
	|				И ВидНалога В (&ВидыВзаиморасчетовВзносыВПФРИФСС)) КАК РасчетыПоНалогамОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ &НеУчитыватьСтраховыеВзносы,
	|	УменьшениеНалога.Квартал,
	|	СУММА(УменьшениеНалога.ПФР) КАК ПФР,
	|	СУММА(УменьшениеНалога.ФСС) КАК ФСС,
	|	СУММА(УменьшениеНалога.ФОМС) КАК ФОМС,
	|	СУММА(УменьшениеНалога.ФСС_НС) КАК ФСС_НС,
	|	СУММА(УменьшениеНалога.Больничные) КАК Больничные,
	|	СУММА(УменьшениеНалога.ДСтрах) КАК ДСтрах
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВзаиморасчетыСБюджетом.Период КАК Квартал,
	|		ВзаиморасчетыСБюджетом.СуммаУплачено КАК ПФР,
	|		0 КАК ФСС,
	|		0 КАК ФОМС,
	|		0 КАК ФСС_НС,
	|		0 КАК Больничные,
	|		0 КАК ДСтрах
	|	ИЗ
	|		ВзаиморасчетыСБюджетом КАК ВзаиморасчетыСБюджетом
	|	ГДЕ
	|		ВзаиморасчетыСБюджетом.ВидВзаиморасчетов В(&ВидыВзаиморасчетовВзносыВПФР)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВзаиморасчетыСБюджетом.Период,
	|		0,
	|		ВзаиморасчетыСБюджетом.СуммаУплачено,
	|		0,
	|		0,
	|		0,
	|		0
	|	ИЗ
	|		ВзаиморасчетыСБюджетом КАК ВзаиморасчетыСБюджетом
	|	ГДЕ
	|		ВзаиморасчетыСБюджетом.ВидВзаиморасчетов = ЗНАЧЕНИЕ(Справочник.ВидыНалогов.ФСССотрудники)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВзаиморасчетыСБюджетом.Период,
	|		0,
	|		0,
	|		ВзаиморасчетыСБюджетом.СуммаУплачено,
	|		0,
	|		0,
	|		0
	|	ИЗ
	|		ВзаиморасчетыСБюджетом КАК ВзаиморасчетыСБюджетом
	|	ГДЕ
	|		ВзаиморасчетыСБюджетом.ВидВзаиморасчетов В(&ВидыВзаиморасчетовВзносыВФОМС)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВзаиморасчетыСБюджетом.Период,
	|		0,
	|		0,
	|		0,
	|		ВзаиморасчетыСБюджетом.СуммаУплачено,
	|		0,
	|		0
	|	ИЗ
	|		ВзаиморасчетыСБюджетом КАК ВзаиморасчетыСБюджетом
	|	ГДЕ
	|		ВзаиморасчетыСБюджетом.ВидВзаиморасчетов = ЗНАЧЕНИЕ(Справочник.ВидыНалогов.ФССТравматизмСотрудники)) КАК УменьшениеНалога
	|
	|СГРУППИРОВАТЬ ПО
	|	УменьшениеНалога.Квартал
	|
	|УПОРЯДОЧИТЬ ПО
	|	УменьшениеНалога.Квартал";
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&НеУчитыватьСтраховыеВзносы,", ?(УчитыватьСтраховыеВзносы, "", "ПЕРВЫЕ 0"));
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	ВидыВзаиморасчетовВзносыВПФРИФСС = Новый Массив;
	
	ВидыВзаиморасчетовВзносыВПФРИФСС.Добавить(Справочники.ВидыНалогов.ПФРНакопительная);
	ВидыВзаиморасчетовВзносыВПФРИФСС.Добавить(Справочники.ВидыНалогов.ПФРСтраховая);
	ВидыВзаиморасчетовВзносыВПФРИФСС.Добавить(Справочники.ВидыНалогов.ПФРСвыше300ТР);
	ВидыВзаиморасчетовВзносыВПФРИФСС.Добавить(Справочники.ВидыНалогов.ТФОМС);
	ВидыВзаиморасчетовВзносыВПФРИФСС.Добавить(Справочники.ВидыНалогов.ФФОМС);
	ВидыВзаиморасчетовВзносыВПФРИФСС.Добавить(Справочники.ВидыНалогов.ПФРНакопительнаяСотрудники);
	ВидыВзаиморасчетовВзносыВПФРИФСС.Добавить(Справочники.ВидыНалогов.ПФРСтраховаяСотрудники);
	ВидыВзаиморасчетовВзносыВПФРИФСС.Добавить(Справочники.ВидыНалогов.ФСССотрудники);
	ВидыВзаиморасчетовВзносыВПФРИФСС.Добавить(Справочники.ВидыНалогов.ФССТравматизмСотрудники);
	ВидыВзаиморасчетовВзносыВПФРИФСС.Добавить(Справочники.ВидыНалогов.ФОМССотрудники); 
	ВидыВзаиморасчетовВзносыВПФРИФСС.Добавить(Справочники.ВидыНалогов.СтраховыеВзносыЕдиныйТариф);
	ВидыВзаиморасчетовВзносыВПФРИФСС.Добавить(Справочники.ВидыНалогов.ФиксированныеВзносы_СтраховыеВзносыЕдиныйТариф);
	
	ВидыВзаиморасчетовВзносыВПФР = Новый Массив;
	ВидыВзаиморасчетовВзносыВПФР.Добавить(Справочники.ВидыНалогов.ПФРНакопительная);
	ВидыВзаиморасчетовВзносыВПФР.Добавить(Справочники.ВидыНалогов.ПФРСтраховая);
	ВидыВзаиморасчетовВзносыВПФР.Добавить(Справочники.ВидыНалогов.ПФРСвыше300ТР);
	ВидыВзаиморасчетовВзносыВПФР.Добавить(Справочники.ВидыНалогов.ПФРНакопительнаяСотрудники);
	ВидыВзаиморасчетовВзносыВПФР.Добавить(Справочники.ВидыНалогов.ПФРСтраховаяСотрудники);  
	ВидыВзаиморасчетовВзносыВПФР.Добавить(Справочники.ВидыНалогов.СтраховыеВзносыЕдиныйТариф);
	ВидыВзаиморасчетовВзносыВПФР.Добавить(Справочники.ВидыНалогов.ФиксированныеВзносы_СтраховыеВзносыЕдиныйТариф); 
	
	ВидыВзаиморасчетовВзносыВФОМС = Новый Массив;
	ВидыВзаиморасчетовВзносыВФОМС.Добавить(Справочники.ВидыНалогов.ТФОМС);
	ВидыВзаиморасчетовВзносыВФОМС.Добавить(Справочники.ВидыНалогов.ФФОМС);
	ВидыВзаиморасчетовВзносыВФОМС.Добавить(Справочники.ВидыНалогов.ФОМССотрудники);
	
	Запрос.УстановитьПараметр("ВидыВзаиморасчетовВзносыВПФРИФСС", ВидыВзаиморасчетовВзносыВПФРИФСС);
	Запрос.УстановитьПараметр("ВидыВзаиморасчетовВзносыВПФР", ВидыВзаиморасчетовВзносыВПФР);
	Запрос.УстановитьПараметр("ВидыВзаиморасчетовВзносыВФОМС", ВидыВзаиморасчетовВзносыВФОМС);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция ПолучитьЗаписиУменьшенияНалога(НачалоПериода, КонецПериода, Организация)
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	ВидыВзаиморасчетовВзносыВПФРИФСС = Новый Массив;
	
	ВидыВзаиморасчетовВзносыВПФРИФСС.Добавить(Справочники.ВидыНалогов.ПФРНакопительная);
	ВидыВзаиморасчетовВзносыВПФРИФСС.Добавить(Справочники.ВидыНалогов.ПФРСтраховая);
	ВидыВзаиморасчетовВзносыВПФРИФСС.Добавить(Справочники.ВидыНалогов.ПФРСвыше300ТР);
	ВидыВзаиморасчетовВзносыВПФРИФСС.Добавить(Справочники.ВидыНалогов.ТФОМС);
	ВидыВзаиморасчетовВзносыВПФРИФСС.Добавить(Справочники.ВидыНалогов.ФФОМС);
	ВидыВзаиморасчетовВзносыВПФРИФСС.Добавить(Справочники.ВидыНалогов.ПФРНакопительнаяСотрудники);
	ВидыВзаиморасчетовВзносыВПФРИФСС.Добавить(Справочники.ВидыНалогов.ПФРСтраховаяСотрудники);
	ВидыВзаиморасчетовВзносыВПФРИФСС.Добавить(Справочники.ВидыНалогов.ФСССотрудники);
	ВидыВзаиморасчетовВзносыВПФРИФСС.Добавить(Справочники.ВидыНалогов.ФССТравматизмСотрудники);
	ВидыВзаиморасчетовВзносыВПФРИФСС.Добавить(Справочники.ВидыНалогов.ФОМССотрудники);
	ВидыВзаиморасчетовВзносыВПФРИФСС.Добавить(Справочники.ВидыНалогов.СтраховыеВзносыЕдиныйТариф);
	ВидыВзаиморасчетовВзносыВПФРИФСС.Добавить(Справочники.ВидыНалогов.ФиксированныеВзносы_СтраховыеВзносыЕдиныйТариф);	
	
	ВидыВзаиморасчетовВзносыВПФР = Новый Массив;
	ВидыВзаиморасчетовВзносыВПФР.Добавить(Справочники.ВидыНалогов.ПФРНакопительная);
	ВидыВзаиморасчетовВзносыВПФР.Добавить(Справочники.ВидыНалогов.ПФРСтраховая);
	ВидыВзаиморасчетовВзносыВПФР.Добавить(Справочники.ВидыНалогов.ПФРСвыше300ТР);
	ВидыВзаиморасчетовВзносыВПФР.Добавить(Справочники.ВидыНалогов.ПФРНакопительнаяСотрудники);
	ВидыВзаиморасчетовВзносыВПФР.Добавить(Справочники.ВидыНалогов.ПФРСтраховаяСотрудники); 
	ВидыВзаиморасчетовВзносыВПФР.Добавить(Справочники.ВидыНалогов.СтраховыеВзносыЕдиныйТариф);
	ВидыВзаиморасчетовВзносыВПФР.Добавить(Справочники.ВидыНалогов.ФиксированныеВзносы_СтраховыеВзносыЕдиныйТариф); 
	
	ВидыВзаиморасчетовВзносыВФОМС = Новый Массив;
	ВидыВзаиморасчетовВзносыВФОМС.Добавить(Справочники.ВидыНалогов.ТФОМС);
	ВидыВзаиморасчетовВзносыВФОМС.Добавить(Справочники.ВидыНалогов.ФФОМС);
	ВидыВзаиморасчетовВзносыВФОМС.Добавить(Справочники.ВидыНалогов.ФОМССотрудники);
	
	Запрос.УстановитьПараметр("ВидыВзаиморасчетовВзносыВПФРИФСС", ВидыВзаиморасчетовВзносыВПФРИФСС);
	Запрос.УстановитьПараметр("ВидыВзаиморасчетовВзносыВПФР", ВидыВзаиморасчетовВзносыВПФР);
	Запрос.УстановитьПараметр("ВидыВзаиморасчетовВзносыВФОМС", ВидыВзаиморасчетовВзносыВФОМС);
	
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РасчетыПоНалогам.Период,
	|	РасчетыПоНалогам.Регистратор.Дата КАК ДатаДокумента,
	|	РасчетыПоНалогам.Регистратор.Номер КАК НомерДокумента,
	|	РасчетыПоНалогам.ВидНалога КАК ВидВзаиморасчетов,
	|	РасчетыПоНалогам.Сумма КАК Сумма
	|ПОМЕСТИТЬ ВзаиморасчетыСБюджетом
	|ИЗ
	|	РегистрНакопления.РасчетыПоНалогам КАК РасчетыПоНалогам
	|ГДЕ
	|	РасчетыПоНалогам.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И РасчетыПоНалогам.Организация = &Организация
	|	И РасчетыПоНалогам.ВидНалога В(&ВидыВзаиморасчетовВзносыВПФРИФСС)
	|	И РасчетыПоНалогам.ВидДвижения = Значение(ВидДвиженияНакопления.Расход)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВзаиморасчетыСБюджетом.Период КАК ПериодНачисления,
	|	ВзаиморасчетыСБюджетом.ДатаДокумента КАК ДатаДокумента,
	|	ВзаиморасчетыСБюджетом.НомерДокумента КАК НомерДокумента,
	|	ВзаиморасчетыСБюджетом.Сумма КАК ПФР,
	|	0 КАК ФСС,
	|	0 КАК ФОМС,
	|	0 КАК ФСС_НС,
	|	0 КАК Больничные,
	|	0 КАК ДСтрах
	|ИЗ
	|	ВзаиморасчетыСБюджетом КАК ВзаиморасчетыСБюджетом
	|ГДЕ
	|	ВзаиморасчетыСБюджетом.ВидВзаиморасчетов В(&ВидыВзаиморасчетовВзносыВПФР)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВзаиморасчетыСБюджетом.Период,
	|	ВзаиморасчетыСБюджетом.ДатаДокумента,
	|	ВзаиморасчетыСБюджетом.НомерДокумента,
	|	0,
	|	ВзаиморасчетыСБюджетом.Сумма,
	|	0,
	|	0,
	|	0,
	|	0
	|ИЗ
	|	ВзаиморасчетыСБюджетом КАК ВзаиморасчетыСБюджетом
	|ГДЕ
	|	ВзаиморасчетыСБюджетом.ВидВзаиморасчетов = ЗНАЧЕНИЕ(Справочник.ВидыНалогов.ФСССотрудники)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВзаиморасчетыСБюджетом.Период,
	|	ВзаиморасчетыСБюджетом.ДатаДокумента,
	|	ВзаиморасчетыСБюджетом.НомерДокумента,
	|	0,
	|	0,
	|	ВзаиморасчетыСБюджетом.Сумма,
	|	0,
	|	0,
	|	0
	|ИЗ
	|	ВзаиморасчетыСБюджетом КАК ВзаиморасчетыСБюджетом
	|ГДЕ
	|	ВзаиморасчетыСБюджетом.ВидВзаиморасчетов В(&ВидыВзаиморасчетовВзносыВФОМС)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВзаиморасчетыСБюджетом.Период,
	|	ВзаиморасчетыСБюджетом.ДатаДокумента,
	|	ВзаиморасчетыСБюджетом.НомерДокумента,
	|	0,
	|	0,
	|	0,
	|	ВзаиморасчетыСБюджетом.Сумма,
	|	0,
	|	0
	|ИЗ
	|	ВзаиморасчетыСБюджетом КАК ВзаиморасчетыСБюджетом
	|ГДЕ
	|	ВзаиморасчетыСБюджетом.ВидВзаиморасчетов = ЗНАЧЕНИЕ(Справочник.ВидыНалогов.ФССТравматизмСотрудники)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВзаиморасчетыСБюджетом.Период,
	|	ВзаиморасчетыСБюджетом.ДатаДокумента";
	
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции

Функция ПолучитьТаблицуУплатТорговогоСбора(Знач НачДата, Знач ПараметрыОтчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РасходИзКассы.Ссылка КАК Регистратор,
	|	РасходИзКассы.Дата КАК Период,
	|	РасходИзКассы.Номер КАК Номер,
	|	РасходИзКассы.Дата КАК ДатаВходящегоДокумента,
	|	&БезНомера КАК НомерВходящегоДокумента,
	|	РасходИзКассы.СуммаДокумента КАК СуммаТорговогоСбора
	|ИЗ
	|	Документ.РасходИзКассы КАК РасходИзКассы
	|ГДЕ
	|	РасходИзКассы.Дата >= &ДатаНачалаФормирования5РазделаКУДиР
	|	И РасходИзКассы.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И РасходИзКассы.Организация = &Организация
	|	И РасходИзКассы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.Налоги)
	|	И РасходИзКассы.ВидНалога = ЗНАЧЕНИЕ(Справочник.ВидыНалогов.ТорговыйСбор)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РасходСоСчета.Ссылка,
	|	РасходСоСчета.Дата,
	|	РасходСоСчета.Номер,
	|	РасходСоСчета.Дата,
	|	РасходСоСчета.НомерВходящегоДокумента,
	|	РасходСоСчета.СуммаДокумента
	|ИЗ
	|	Документ.РасходСоСчета КАК РасходСоСчета
	|ГДЕ
	|	РасходСоСчета.Дата >= &ДатаНачалаФормирования5РазделаКУДиР
	|	И РасходСоСчета.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И РасходСоСчета.Организация = &Организация
	|	И РасходСоСчета.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСоСчета.Налоги)
	|	И РасходСоСчета.ВидНалога = ЗНАЧЕНИЕ(Справочник.ВидыНалогов.ТорговыйСбор)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	
	Запрос.УстановитьПараметр("НачалоПериода",            НачДата);
	Запрос.УстановитьПараметр("КонецПериода",             КонецКвартала(ПараметрыОтчета.КонецПериода));
	Запрос.УстановитьПараметр("БезНомера", НСтр("ru = 'б/н'"));
	Запрос.УстановитьПараметр("Организация", ?(ПараметрыОтчета.ОбъектНалогообложенияУСН = Перечисления.ВидыОбъектовНалогообложения.Доходы, ПараметрыОтчета.Организация, Справочники.Организации.ПустаяСсылка()));
	Запрос.УстановитьПараметр("ДатаНачалаФормирования5РазделаКУДиР", Дата(2018, 1, 1));
	
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции

Функция РеквизитыПервичногоДокументаДляКУДиР(ДатаДокумента, НомерДокумента, ПериодЗаписи)
	
	Если ПериодЗаписи >= НачалоФормированияРазделаТорговыйСбор() Тогда
		Возврат СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("%1, № %2",
			Формат(ДатаДокумента, "ДЛФ=D"),
			ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(НомерДокумента, Истина, Ложь));
	Иначе
		Возврат СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("№ %1 от %2",
			ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(НомерДокумента, Истина, Ложь),
			Формат(ДатаДокумента, "ДЛФ=D"));
	КонецЕсли;
	
КонецФункции

Процедура ВывестиУплаченныйТорговыйСборЗаКвартал(ПараметрыОтчета, ТекущийКвартал, Макет, ТабличныйДокумент)

	Секция = Макет.ПолучитьОбласть("Итог");
	РимскоеЧисло = ТекущийКвартал;
	Секция.Параметры.ПредставлениеПериодаИтогов =
		СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("Итого за %1 квартал",
			СтроковыеФункцииКлиентСервер.ПреобразоватьЧислоВРимскуюНотацию(РимскоеЧисло, Ложь));
	
	УплаченныйСборЗаКвартал         = 0;
	УплаченныйСборНарастающимИтогом = 0;
	
	ТаблицаОборотовРаздела5ПоКварталам = ПолучитьТаблицуОборотовРаздела5ПоКварталам(ПараметрыОтчета);
	
	Для Каждого  ВыборкаИтоги Из ТаблицаОборотовРаздела5ПоКварталам Цикл
	
		Если ПолучитьНомерКвартала(ВыборкаИтоги.Квартал) > ТекущийКвартал Тогда
			Прервать;
		КонецЕсли;
		
		УплаченныйСборНарастающимИтогом = УплаченныйСборНарастающимИтогом + ВыборкаИтоги.СуммаТорговогоСбора;
		
		Если ПолучитьНомерКвартала(ВыборкаИтоги.Квартал) = ТекущийКвартал Тогда
			УплаченныйСборЗаКвартал = УплаченныйСборЗаКвартал + ВыборкаИтоги.СуммаТорговогоСбора;
		КонецЕсли;
	КонецЦикла;
	
	Секция.Параметры.СуммаТорговогоСбора = УплаченныйСборЗаКвартал;
	ТабличныйДокумент.Вывести(Секция);
	
	Если ТекущийКвартал <> 1 Тогда
		Секция = Макет.ПолучитьОбласть("Итог");
		Секция.Параметры.ПредставлениеПериодаИтогов = "Итого за " + НазваниеПериодаНарастающимИтогом(ТекущийКвартал);
		Секция.Параметры.СуммаТорговогоСбора = УплаченныйСборНарастающимИтогом;
		ТабличныйДокумент.Вывести(Секция);
	КонецЕсли;

КонецПроцедуры

Функция ПолучитьТаблицуОборотовРаздела5ПоКварталам(Знач ПараметрыОтчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РасходИзКассы.Дата КАК Период,
	|	РасходИзКассы.СуммаДокумента КАК СуммаТорговогоСбора
	|ПОМЕСТИТЬ ВТОбороты5Раздел
	|ИЗ
	|	Документ.РасходИзКассы КАК РасходИзКассы
	|ГДЕ
	|	РасходИзКассы.Дата >= &ДатаНачалаФормирования5РазделаКУДиР
	|	И РасходИзКассы.Дата МЕЖДУ &НачалоНалоговогоПериода И &КонецПериода
	|	И РасходИзКассы.Организация = &Организация
	|	И РасходИзКассы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходИзКассы.Налоги)
	|	И РасходИзКассы.ВидНалога = ЗНАЧЕНИЕ(Справочник.ВидыНалогов.ТорговыйСбор)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РасходСоСчета.Дата,
	|	РасходСоСчета.СуммаДокумента
	|ИЗ
	|	Документ.РасходСоСчета КАК РасходСоСчета
	|ГДЕ
	|	РасходСоСчета.Дата >= &ДатаНачалаФормирования5РазделаКУДиР
	|	И РасходСоСчета.Дата МЕЖДУ &НачалоНалоговогоПериода И &КонецПериода
	|	И РасходСоСчета.Организация = &Организация
	|	И РасходСоСчета.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСоСчета.Налоги)
	|	И РасходСоСчета.ВидНалога = ЗНАЧЕНИЕ(Справочник.ВидыНалогов.ТорговыйСбор)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА &НалоговыйПериодРасширен
	|				И ГОД(Обороты5Раздел.Период) < ГОД(&КонецПериода)
	|			ТОГДА НАЧАЛОПЕРИОДА(&КонецПериода, ГОД)
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(Обороты5Раздел.Период, КВАРТАЛ)
	|	КОНЕЦ КАК Квартал,
	|	СУММА(Обороты5Раздел.СуммаТорговогоСбора) КАК СуммаТорговогоСбора
	|ИЗ
	|	ВТОбороты5Раздел КАК Обороты5Раздел
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА &НалоговыйПериодРасширен
	|				И ГОД(Обороты5Раздел.Период) < ГОД(&КонецПериода)
	|			ТОГДА НАЧАЛОПЕРИОДА(&КонецПериода, ГОД)
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(Обороты5Раздел.Период, КВАРТАЛ)
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Квартал";
	
	Запрос.УстановитьПараметр("НачалоНалоговогоПериода", ПараметрыОтчета.НачалоНалоговогоПериода);
	Запрос.УстановитьПараметр("КонецПериода",             КонецКвартала(ПараметрыОтчета.КонецПериода));
	Запрос.УстановитьПараметр("Организация", ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("ДатаНачалаФормирования5РазделаКУДиР", НачалоФормированияРазделаТорговыйСбор());
	Запрос.УстановитьПараметр("НалоговыйПериодРасширен",  ПараметрыОтчета.НалоговыйПериодРасширен);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

// Дата начала действия приказа МинФин от 07.12.2016 № 227н
Функция НачалоФормированияРазделаТорговыйСбор()
	
	Возврат '20180101';
	
КонецФункции

Функция РедакцияПриказаМинфина135н(ПараметрыОтчета)
	
	Если ПараметрыОтчета.Период >= НачалоФормированияРазделаТорговыйСбор() Тогда
		// На титульном листе требуется указать дату и номер приказа, добавившего 5 раздел.
		Возврат НСтр("ru = '(в ред. Приказа Минфина России от 07.12.2016 № 227н)'");
	КонецЕсли;
	
	Возврат "";
	
КонецФункции

Функция НастройкиРазделовОтчета(ПараметрыОтчета)
	
	РазделыОтчета = Новый Структура;
	
	Если ПараметрыОтчета.Период <'20130101' Тогда
		ИмяМакетаТитульногоЛиста =  "ТитульныйЛист_154н";
		ИмяМакетаОС = "Раздел2_154н";
		ИмяМакетаУбытки = "Раздел3_154н";
		ИмяМакетаВзносы = "";
	Иначе
		// Приказ Минфина РФ от 07.12.2016 N 227н.
		Если ПараметрыОтчета.Период < НачалоФормированияРазделаТорговыйСбор() Тогда
			ИмяМакетаТорговыйСбор = "";
			ПредставлениеТорговыйСбор = "";
			ПараметрыПечатиТорговыйСбор = "";
		Иначе
			ИмяМакетаТорговыйСбор = "Раздел5_135н";
			ПредставлениеТорговыйСбор = НСтр("ru = 'Раздел V. Уплаченный торговый сбор'");
			ПараметрыПечатиТорговыйСбор = "ПАРАМЕТРЫ_ПЕЧАТИ_КнигаУчетаДоходовИРасходов_Раздел5";
		КонецЕсли;
		
		Если ПараметрыОтчета.Период < РегламентированнаяОтчетностьУСНКлиентСервер.ДатаНачалаДействияПриказаФНС816() Тогда
			ИмяМакетаТитульногоЛиста = "ТитульныйЛист_135н";
			ИмяМакетаДоходыРасходы = "Раздел1ТолькоДоходыРасходы";
			ИмяМакетаОС = "Раздел2_135н";
			ИмяМакетаУбытки = "Раздел3_135н";
			ИмяМакетаВзносы = "Раздел4_135н";
		Иначе
			ИмяМакетаТитульногоЛиста = "ТитульныйЛист_816";
			ИмяМакетаДоходыРасходы = "Раздел1ТолькоДоходыРасходы_816";
			ИмяМакетаОС = "Раздел2_816";
			ИмяМакетаУбытки = "Раздел3_816";
			ИмяМакетаВзносы = "";
			ИмяМакетаТорговыйСбор = "Раздел4_816";
			ПредставлениеТорговыйСбор = НСтр("ru = 'Раздел IV. Уплаченный торговый сбор'");
			ПараметрыПечатиТорговыйСбор = "ПАРАМЕТРЫ_ПЕЧАТИ_КнигаУчетаДоходовИРасходов_ТорговыйСбор";
		КонецЕсли;
		
	КонецЕсли;
	
	ПараметрыТитульный = ДобавитьНастройкуРаздела(ИмяМакетаТитульногоЛиста, НСтр("ru = 'Титульный лист'"));
	РазделыОтчета.Вставить("ТитульныйЛист", ПараметрыТитульный);

	ПараметрыДоходыРасходы = ДобавитьНастройкуРаздела(ИмяМакетаДоходыРасходы, "");
	РазделыОтчета.Вставить("ДоходыРасходы", ПараметрыДоходыРасходы);

	ПараметрыОС = ДобавитьНастройкуРаздела(ИмяМакетаОС, НСтр("ru = 'Раздел II (Расходы на ОС и НМА)'"));
	РазделыОтчета.Вставить("ОсновныеСредстваНМА", ПараметрыОС);
	
	ПараметрыУбытки = ДобавитьНастройкуРаздела(ИмяМакетаУбытки,
		НСтр("ru = 'Раздел III (Расчет суммы убытка)'"),
		"ПАРАМЕТРЫ_ПЕЧАТИ_КнигаУчетаДоходовИРасходов_Раздел3");
	РазделыОтчета.Вставить("Убытки", ПараметрыУбытки);
	
	ПараметрыВзносы = ДобавитьНастройкуРаздела(ИмяМакетаВзносы,
		НСтр("ru = 'Раздел IV (Уменьшение суммы налога)'"),
		"ПАРАМЕТРЫ_ПЕЧАТИ_КнигаУчетаДоходовИРасходов_Раздел4");
	РазделыОтчета.Вставить("СтраховыеВзносы", ПараметрыВзносы);
	
	ПараметрыТорговыйСбор = ДобавитьНастройкуРаздела(ИмяМакетаТорговыйСбор,
		ПредставлениеТорговыйСбор, ПараметрыПечатиТорговыйСбор);
	РазделыОтчета.Вставить("ТорговыйСбор", ПараметрыТорговыйСбор);
	
	Возврат РазделыОтчета;
	
КонецФункции

Функция ДобавитьНастройкуРаздела(ИмяМакета, Представление = "", ПараметрыПечати = "")
	
	СтруктураНастройки = Новый Структура;
	СтруктураНастройки.Вставить("ИмяМакета", ИмяМакета);
	СтруктураНастройки.Вставить("Представление", Представление);
	СтруктураНастройки.Вставить("ПараметрыПечати", ПараметрыПечати);
	
	Возврат СтруктураНастройки;
	
КонецФункции

#КонецОбласти

#КонецЕсли
