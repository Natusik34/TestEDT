
#Область ПрограммныйИнтерфейс

// Создает запись календаря
Функция СоздатьЗаписьКалендаря(Знач ЗаписьКалендаря, Знач ЗначениеКопирования) Экспорт
	
	Если ЗначениеКопирования <> Неопределено Тогда
		
		ОбъектКопирования = ЗначениеКопирования.ПолучитьОбъект();
		ЗаписьКалендаряОбъект = ОбъектКопирования.Скопировать();
		
		Если ТипЗнч(ЗначениеКопирования) = Тип("ДокументСсылка.ЗадачаСотрудника") Тогда
			ЗаписьКалендаряОбъект.Дата = ТекущаяДатаСеанса();
			ЗаписьКалендаряОбъект.ДатаНачала = ЗаписьКалендаря.ДатаНачала;
			ЗаписьКалендаряОбъект.ДатаОкончания = ЗаписьКалендаря.ДатаОкончания;
			
		ИначеЕсли ТипЗнч(ЗначениеКопирования) = Тип("СправочникСсылка.ЗаписиКалендаряСотрудника")
			И ТипЗнч(ЗначениеКопирования.Источник) = Тип("ДокументСсылка.Событие")Тогда
			
			ЗаписьКалендаряОбъект.Начало = ЗаписьКалендаря.ДатаНачала;
			ЗаписьКалендаряОбъект.Окончание = ЗаписьКалендаря.ДатаОкончания;
			
			Событие = ЗначениеКопирования.Источник.ПолучитьОбъект();
			КопияСобытия = Событие.Скопировать();
			КопияСобытия.Дата = ТекущаяДатаСеанса();
			КопияСобытия.НачалоСобытия = ЗаписьКалендаря.ДатаНачала;
			КопияСобытия.ОкончаниеСобытия = ЗаписьКалендаря.ДатаОкончания;
			
		КонецЕсли;
	Иначе
		ЗаписьКалендаряОбъект = Справочники.ЗаписиКалендаряСотрудника.СоздатьЭлемент();
		ЗаписьКалендаряОбъект.Заполнить(ЗаписьКалендаря);
	КонецЕсли;
	
	Если КопияСобытия <> Неопределено Тогда
		
		КопияСобытия.Записать();
		
	Иначе
		
		ЗаписьКалендаряОбъект.ДополнительныеСвойства.Вставить("Цвет", ЗаписьКалендаря.Цвет);
		ЗаписьКалендаряОбъект.Записать();
		
	КонецЕсли;
	
	Результат = Новый Структура("НовыйЭлемент, Напоминание, ДанныеПланировщика");
	
	Возврат Результат;
	
КонецФункции

// Обновляет дату начала и окончания для записи календаря
Процедура ОбновитьДатыНачалаИОкончания(ИзмененнаяЗаписьКалендаря, ОбновленноеВремя, ВариантПериода) Экспорт
	
	Если ВариантПериода <> "Месяц" Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ИзмененнаяЗаписьКалендаря) = Тип("ДокументСсылка.ЗадачаСотрудника") Тогда
		ИзмененнаяДатаНачала = ИзмененнаяЗаписьКалендаря.ДатаНачала;
		ИзмененнаяДатаОкончания = ИзмененнаяЗаписьКалендаря.ДатаОкончания;
	Иначе
		ИзмененнаяДатаНачала = ИзмененнаяЗаписьКалендаря.НачалоСобытия;
		ИзмененнаяДатаОкончания = ИзмененнаяЗаписьКалендаря.ОкончаниеСобытия;
	КонецЕсли;
			
	СмещениеНачала = ИзмененнаяДатаНачала - НачалоДня(ИзмененнаяДатаНачала);
	Если СмещениеНачала <> 0 Тогда
		ОбновленноеВремя.Начало = НачалоДня(ОбновленноеВремя.Начало) + СмещениеНачала;
	КонецЕсли;
	
	СмещениеКонца = ИзмененнаяДатаОкончания - НачалоДня(ИзмененнаяДатаОкончания);
	Если СмещениеКонца <> 0 Тогда
		ОбновленноеВремя.Конец = НачалоДня(ОбновленноеВремя.Конец - 1) + СмещениеКонца;
	КонецЕсли;
	
КонецПроцедуры

// Сохраняет записи календаря сотрудника
Функция СохранитьИзмененияВБазу(ОбрабатываемыеЭлементы) Экспорт
	
	Возврат Справочники.ЗаписиКалендаряСотрудника.СохранитьИзмененияЗаписейКалендарей(ОбрабатываемыеЭлементы);
	
КонецФункции

#КонецОбласти