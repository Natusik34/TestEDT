
#Область ПрограммныйИнтерфейс

// Выполняет обработчик окончания редактирования элемента в планировщике календаря
// 
// Параметры:
//  Планировщик - Планировщик - Элемент формы планировщик
//  НовыйЭлемент - Булево - флаг новый элемент
//  ОтменаРедактирования - Булево - флаг об отмене редактирования
//  ВариантПериода - Строка - вариант выбранного периода отображения календаря (день, неделя, месяц)
//  ПользовательКалендаря - Пользователи - авторизованный пользователь календаря
//
Процедура ОбработкаОкончанияРедактированияЭлемента(Планировщик, НовыйЭлемент, ОтменаРедактирования, ВариантПериода, ПользовательКалендаря) Экспорт
	
	Попытка
		
		Если НовыйЭлемент Тогда
			
			Если Планировщик.ВыделенныеЭлементы.Количество() <> 1 Тогда
				ОтменаРедактирования = Истина;
				Возврат;
			КонецЕсли;
			
			ОбработкаСозданиеЭлемента(Планировщик, ПользовательКалендаря);
			
		Иначе
			
			ОбработкаОкончанияРедактирования(Планировщик, ВариантПериода, ОтменаРедактирования);
			
		КонецЕсли;
		
	Исключение
		
		ОтменаРедактирования = Истина;
		ВызватьИсключение;
		
	КонецПопытки;
	
КонецПроцедуры

// Корректирует дату начала и окончания события с учетом настройки "Весь день" и пустых дат.
// 
// Параметры:
//  ДатаНачала - Дата - дата начала задачи
//  ДатаОкончания - Дата - дата окончания задачи
//  ВесьДень - Булево - флаг длительности проведения весь день
//  НачальноеЗначениеДатаОкончания - Дата - начальная дата начала задачи
//  НачальноеЗначениеДатаОкончания - Дата - начальная дата окончания задачи
//  СохранятьДлительностьПриПереносеДатыОкончания - Булево - флаг сохранения длительности проведения задачи при изменении даты окончания
//  ДлительностьСобытияПоУмолчанию - Число - длительность задачи по умолчанию при расчете длительности новой задачи или при отмене длительности на весь день
//  ИзменятьДатуНачалаИОкончания - Булево - флаг на изменение даты начала и окончания задачи при изменении
//
Процедура СкорректироватьДатуНачалаИОкончания(
	ДатаНачала,
	ДатаОкончания,
	ВесьДень,
	НачальноеЗначениеДатаНачала = Неопределено,
	НачальноеЗначениеДатаОкончания = Неопределено,
	СохранятьДлительностьПриПереносеДатыОкончания = Ложь,
	ИзменилсяВесьДень = Ложь,
	СохранятьДлительностьПриПереносеДатыНачалаВПределахДня = Истина,
	ДлительностьСобытияПоУмолчанию = 3600,
	ИзменятьДатуНачалаИОкончания = Истина) Экспорт
	
	// Очистка времени
	Если Не ЗначениеЗаполнено(ДатаНачала) И Не ЗначениеЗаполнено(ДатаОкончания) Тогда
		НачальноеЗначениеДатаНачала = ДатаНачала;
		НачальноеЗначениеДатаОкончания = ДатаОкончания;
		Возврат;
	КонецЕсли;
	
	// Ввод пустого времени начала
	Если ЗначениеЗаполнено(НачальноеЗначениеДатаНачала)
		И ДатаНачала <> НачальноеЗначениеДатаНачала
		И Не ЗначениеЗаполнено(ДатаНачала) Тогда
		ДатаОкончания = ДатаНачала;
		НачальноеЗначениеДатаНачала = ДатаНачала;
		НачальноеЗначениеДатаОкончания = ДатаОкончания;
		Возврат;
	КонецЕсли;
	
	// Ввод пустого времени окончания
	Если ЗначениеЗаполнено(НачальноеЗначениеДатаОкончания)
		И ДатаОкончания <> НачальноеЗначениеДатаОкончания
		И Не ЗначениеЗаполнено(ДатаОкончания) Тогда
		ДатаНачала = ДатаОкончания;
		НачальноеЗначениеДатаНачала = ДатаНачала;
		НачальноеЗначениеДатаОкончания = ДатаОкончания;
		Возврат;
	КонецЕсли;
	
	Если ИзменятьДатуНачалаИОкончания Тогда
		
		// Сохранение длительность при переносе дата начала.
		Если СохранятьДлительностьПриПереносеДатыНачалаВПределахДня Тогда
			Если ЗначениеЗаполнено(НачальноеЗначениеДатаНачала)
				И ДатаНачала <> НачальноеЗначениеДатаНачала
				И НачальноеЗначениеДатаНачала <= НачальноеЗначениеДатаОкончания Тогда
				НачальнаяДлительность = НачальноеЗначениеДатаОкончания - НачальноеЗначениеДатаНачала;
				ДатаОкончания = ДатаНачала + НачальнаяДлительность;
			КонецЕсли;
		Иначе
			Если ЗначениеЗаполнено(НачальноеЗначениеДатаНачала)
				И НачалоДня(ДатаНачала) <> НачалоДня(НачальноеЗначениеДатаНачала)
				И НачальноеЗначениеДатаНачала <= НачальноеЗначениеДатаОкончания Тогда
				НачальнаяДлительность = НачальноеЗначениеДатаОкончания - НачальноеЗначениеДатаНачала;
				ДатаОкончания = ДатаНачала + НачальнаяДлительность;
			КонецЕсли;
		КонецЕсли;
		
		Если ВесьДень Тогда
			
			Если ЗначениеЗаполнено(ДатаНачала) И НЕ ЗначениеЗаполнено(ДатаОкончания) Тогда
				ДатаОкончания = КонецДня(ДатаНачала);
			ИначеЕсли НЕ ЗначениеЗаполнено(ДатаНачала) И ЗначениеЗаполнено(ДатаОкончания) Тогда
				ДатаНачала = НачалоДня(ДатаОкончания);
			КонецЕсли;
			
			Если ДатаНачала <> НачалоДня(ДатаНачала) Тогда
				ДатаНачала = НачалоДня(ДатаНачала);
			КонецЕсли;
			
			Если ДатаОкончания <> КонецДня(ДатаОкончания) Тогда
				ДатаОкончания = КонецДня(ДатаОкончания);
			КонецЕсли;
			
		Иначе
			
			Если ИзменилсяВесьДень Тогда
				ДатаОкончания = ДатаНачала + ДлительностьСобытияПоУмолчанию;
			ИначеЕсли ЗначениеЗаполнено(ДатаНачала) И НЕ ЗначениеЗаполнено(ДатаОкончания) Тогда
				ДатаОкончания = ДатаНачала + ДлительностьСобытияПоУмолчанию;
			ИначеЕсли НЕ ЗначениеЗаполнено(ДатаНачала) И ЗначениеЗаполнено(ДатаОкончания) Тогда
				Если ДатаОкончания = НачалоДня(ДатаОкончания) Тогда
					ДатаНачала = НачалоДня(ДатаОкончания);
					ДатаОкончания = ДатаНачала + ДлительностьСобытияПоУмолчанию;
				Иначе
					ДатаНачала = ДатаОкончания - ДлительностьСобытияПоУмолчанию;
				КонецЕсли;
			ИначеЕсли СохранятьДлительностьПриПереносеДатыОкончания
				И ЗначениеЗаполнено(НачальноеЗначениеДатаОкончания)
				И ДатаОкончания <> НачальноеЗначениеДатаОкончания
				И НачальноеЗначениеДатаНачала <= НачальноеЗначениеДатаОкончания Тогда
				
				НачальнаяДлительность = НачальноеЗначениеДатаОкончания - НачальноеЗначениеДатаНачала;
				ДатаНачала = ДатаОкончания - НачальнаяДлительность;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	НачальноеЗначениеДатаНачала = ДатаНачала;
	НачальноеЗначениеДатаОкончания = ДатаОкончания;
	
КонецПроцедуры

// Приводит переданную дату к концу получаса
//
// Параметры:
//  Дата - Дата
// 
// Возвращаемое значение:
//  Число - конец получаса в секундах
//
Функция КонецПолучаса(Дата) Экспорт
	
	Если Дата = НачалоЧаса(Дата) ИЛИ Дата = (НачалоЧаса(Дата) + 1800) Тогда
		Возврат Дата;
	КонецЕсли;
	
	КонецПолучаса = КонецЧаса(Дата) + 1;
	
	Если КонецПолучаса - Дата > 1800 Тогда
		
		КонецПолучаса = КонецПолучаса - 1800;
		
	КонецЕсли;
	
	Возврат КонецПолучаса;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОбработкаСозданиеЭлемента(Планировщик, ПользовательКалендаря)
	
	ВыделенныйЭлемент = Планировщик.ВыделенныеЭлементы[0];
	ДляПользователя = ВыделенныйЭлемент.ЗначенияИзмерений.Получить("Пользователь");
	Если ДляПользователя = Неопределено Тогда
		ДляПользователя = ПользовательКалендаря;
	КонецЕсли;
	СозданнаяЗаписьКалендаря = Новый Структура("ДатаНачала, ДатаОкончания, Описание, Цвет, Пользователь");
	СозданнаяЗаписьКалендаря.ДатаНачала = ВыделенныйЭлемент.Начало;
	СозданнаяЗаписьКалендаря.ДатаОкончания = ВыделенныйЭлемент.Конец;
	СозданнаяЗаписьКалендаря.Описание = ВыделенныйЭлемент.Текст;
	СозданнаяЗаписьКалендаря.Цвет = ВыделенныйЭлемент.ЦветФона;
	СозданнаяЗаписьКалендаря.Пользователь = ДляПользователя;
	
	ЗначениеКопирования = Неопределено;
	Если ВыделенныйЭлемент.Значение <> Неопределено Тогда
		Если ТипЗнч(ВыделенныйЭлемент.Значение.ЗаписьКалендаря) =
			Тип("СправочникСсылка.ЗаписиКалендаряСотрудника")
			ИЛИ ТипЗнч(ВыделенныйЭлемент.Значение.ЗаписьКалендаря) =
			Тип("ДокументСсылка.ЗадачаСотрудника") Тогда
			ЗначениеКопирования = ВыделенныйЭлемент.Значение.ЗаписьКалендаря;
		КонецЕсли;
	КонецЕсли;
	
	Результат = РаботаСКалендаремВызовСервера.СоздатьЗаписьКалендаря(СозданнаяЗаписьКалендаря, ЗначениеКопирования);
	
КонецПроцедуры

Процедура ОбработкаОкончанияРедактирования(Планировщик, ВариантПериода, ОтменаРедактирования)
	
	ОбрабатываемыеЭлементы = Новый Массив;
	
	Для Каждого ВыделенныйЭлемент Из Планировщик.ВыделенныеЭлементы Цикл
		
		Если ВыделенныйЭлемент.Значение.РедактированиеЗапрещено Тогда
			ОтменаРедактирования = Истина;
			Возврат;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ВыделенныйЭлемент.Значение.ЗаписьКалендаря) Тогда
			
			ОбрабатываемыйЭлемент = Новый Структура;
			
			Если ТипЗнч(ВыделенныйЭлемент.Значение.ЗаписьКалендаря) = Тип("ДокументСсылка.ЗадачаСотрудника") Тогда
				ОбрабатываемыйЭлемент.Вставить("Источник", ВыделенныйЭлемент.Значение.ЗаписьКалендаря);
			Иначе
				ОбрабатываемыйЭлемент.Вставить("Источник", ВыделенныйЭлемент.Значение.Источник);
			КонецЕсли;
			
			ОбновленноеВремя = Новый Структура;
			ОбновленноеВремя.Вставить("Начало", ВыделенныйЭлемент.Начало);
			ОбновленноеВремя.Вставить("Конец", ВыделенныйЭлемент.Конец);
			РаботаСКалендаремВызовСервера.ОбновитьДатыНачалаИОкончания(ОбрабатываемыйЭлемент.Источник, ОбновленноеВремя, ВариантПериода);
			
			ОбрабатываемыйЭлемент.Вставить("ЗаписьКалендаря",		ВыделенныйЭлемент.Значение.ЗаписьКалендаря);
			ОбрабатываемыйЭлемент.Вставить("НомерСтрокиИсточника",	ВыделенныйЭлемент.Значение.НомерСтрокиИсточника);
			ОбрабатываемыйЭлемент.Вставить("Начало",				ОбновленноеВремя.Начало);
			ОбрабатываемыйЭлемент.Вставить("Конец",					ОбновленноеВремя.Конец);
			ОбрабатываемыеЭлементы.Добавить(ОбрабатываемыйЭлемент);
			ОтменаРедактирования = Не РаботаСКалендаремВызовСервера.СохранитьИзмененияВБазу(ОбрабатываемыеЭлементы);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти