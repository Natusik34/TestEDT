#Область ИнтеграцияСАТУРНПереопределяемый

Процедура ОбработкаЗаполненияДокумента(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	ДокументОбъект.Ответственный = Пользователи.ТекущийПользователь();
	
	Если Не ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура")
		И ДанныеЗаполнения.Свойство("ОрганизацияСАТУРН") Тогда
		
		Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.НакладнаяСАТУРН") Тогда
			ДанныеЗаполнения.Свойство("ОрганизацияСАТУРН", ДокументОбъект.ГрузоотправительОрганизацияСАТУРН);
		ИначеЕсли ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ДокументОбъект, "ОрганизацияСАТУРН") Тогда
			ДанныеЗаполнения.Свойство("ОрганизацияСАТУРН", ДокументОбъект.ОрганизацияСАТУРН);
		КонецЕсли;
		
	КонецЕсли;
	
	МетаданныеДокументаИС = ДокументОбъект.Ссылка.Метаданные();
	
	Основание = Неопределено;
	ФильтрВидПродукции = Неопределено;
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ДанныеЗаполнения.Свойство("Основание", Основание);
		ДанныеЗаполнения.Свойство("Организация", ДокументОбъект.Организация);
		Если ДанныеЗаполнения.Свойство("ИмяФильтра") И ДанныеЗаполнения.ИмяФильтра = "ЗаполнениеСВидомПродукции" Тогда
			ФильтрВидПродукции = ДанныеЗаполнения.ЗначениеФильтра;
		КонецЕсли;
	Иначе
		Основание = ДанныеЗаполнения;
		Если ОбщегоНазначения.ЕстьРеквизитОбъекта("ВидПродукции", МетаданныеДокументаИС)
			И ЗначениеЗаполнено(ДокументОбъект.ВидПродукции) Тогда
			ФильтрВидПродукции = ДокументОбъект.ВидПродукции;
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Основание) Или Не ОбщегоНазначения.ЭтоСсылка(ТипЗнч(Основание)) Тогда
		Возврат;
	КонецЕсли;
	
	МетаданныеДокументаОснования = Основание.Метаданные();
	
	ПараметрыФормированияЗапроса = ИнтеграцияИСУНФ.ПараметрыФормированияЗапросаЗаполнения(МетаданныеДокументаОснования, МетаданныеДокументаИС);
	ПараметрыФормированияЗапроса.ВключатьОпциональныеПоля = Истина;
	Если ЗначениеЗаполнено(ФильтрВидПродукции) Тогда
		ПараметрыФормированияЗапроса.ОтборНоменклатуры = ИнтеграцияИСУНФ.ОпределениеВидаПродукцииТекстаЗапроса("СправочникНоменклатура", ФильтрВидПродукции);
	КонецЕсли;
	
	ЗаполнитьПараметрыФормированияЗапроса(ПараметрыФормированияЗапроса);
	
	ТипОбъекта = ТипЗнч(ДокументОбъект);
	ТипОснования = ТипЗнч(Основание);
	Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.АктИнвентаризацииСАТУРН") Тогда
		//ОбработкаЗаполненияДокументаАктИнвентаризацииСАТУРН(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.АктПримененияСАТУРН") Тогда
		//ОбработкаЗаполненияДокументаАктПримененияСАТУРН(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ИмпортПродукцииСАТУРН") Тогда
		//ОбработкаЗаполненияДокументаИмпортПродукцииСАТУРН(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.НакладнаяСАТУРН") Тогда
		//ОбработкаЗаполненияДокументаНакладнаяСАТУРН(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ПроизводственнаяОперацияСАТУРН") Тогда
		//ОбработкаЗаполненияДокументаПроизводственнаяОперацияСАТУРН(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	КонецЕсли;
	
	ЗаполнитьСтатусыУказанияСерий(ДокументОбъект, ПараметрыФормированияЗапроса);
	
КонецПроцедуры

#КонецОбласти

#Область РасчетСтатусовОформленияСАТУРНПереопределяемый

// См. РасчетСтатусовОформленияСАТУРНПереопределяемый.ПриОпределенииИменРеквизитовДляРасчетаСтатусаОформления
//
Процедура ПриОпределенииИменРеквизитовДляРасчетаСтатусаОформления(
			Знач МетаданныеДокументаОснования, Знач МетаданныеДокументаСАТУРН, Реквизиты) Экспорт
	
	// Определим имя реквизита "Ответственный".
	Если МетаданныеДокументаОснования.Реквизиты.Найти("Ответственный") <> Неопределено Тогда
		Реквизиты.Ответственный = "Ответственный";
	ИначеЕсли МетаданныеДокументаОснования.Реквизиты.Найти("Автор") <> Неопределено Тогда
		Реквизиты.Ответственный = "Автор";
	Иначе
		Реквизиты.Ответственный = "";
	КонецЕсли;
	
КонецПроцедуры

// См. РасчетСтатусовОформленияСАТУРНПереопределяемый.ПриОпределенииТекстаЗапросаДляРасчетаСтатусаОформления
//
Процедура ПриОпределенииТекстаЗапросаДляРасчетаСтатусаОформления(
			Знач МетаданныеДокументаОснования, Знач МетаданныеДокументаСАТУРН, ТекстЗапроса, ДополнительныеПараметрыЗапроса) Экспорт
	
	ПараметрыФормированияЗапроса = ИнтеграцияИСУНФ.ПараметрыФормированияЗапросаЗаполнения(МетаданныеДокументаОснования, МетаданныеДокументаСАТУРН);
	ЗаполнитьПараметрыФормированияЗапроса(ПараметрыФормированияЗапроса);
	Если ПараметрыФормированияЗапроса.ТабличныеЧасти.Количество() Тогда
		ТекстЗапроса = ИнтеграцияИСУНФ.ТекстЗапросаТоварыДокументаОснования(ПараметрыФормированияЗапроса, ДополнительныеПараметрыЗапроса);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьПараметрыФормированияЗапроса(ПараметрыФормированияЗапроса)
	
	МетаданныеДокументаОснования = ПараметрыФормированияЗапроса.МетаданныеДокументаОснования;
	МетаданныеДокументаИС        = ПараметрыФормированияЗапроса.МетаданныеДокументаИСМП;
	
	ТабличнаяЧастьЗапасы = ИнтеграцияИСУНФ.ШаблонОписанияТабличнойЧастиДокумента();
	Если МетаданныеДокументаОснования.ТабличныеЧасти.Найти("СерииНоменклатуры") <> Неопределено Тогда
		ТабличнаяЧастьЗапасы.ИмяТабличнойЧастиСерии = "СерииНоменклатуры";
	КонецЕсли;
	
	ВидыПродукцииСАТУРН = ИнтеграцияСАТУРНКлиентСерверПовтИсп.УчитываемыеВидыПродукции();
	ОтборНоменклатуры   = ИнтеграцияИСУНФ.ОпределениеВидаПродукцииТекстаЗапроса("СправочникНоменклатура", ВидыПродукцииСАТУРН);
	
	ОтборНоменклатурыДокумента = "";
	
	Если МетаданныеДокументаОснования = Метаданные.Документы.КомплектацияЗапасов Тогда
		
	КонецЕсли;
	
	Если ПараметрыФормированияЗапроса.ОтборНоменклатуры = "ИСТИНА" Тогда
		ПараметрыФормированияЗапроса.ОтборНоменклатуры = ОтборНоменклатурыДокумента;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьСтатусыУказанияСерий(ДокументОбъект, ПараметрыФормированияЗапроса)
	
	ИмяТабличнойЧасти = ПараметрыФормированияЗапроса.ИмяТабличнойЧастиТоварыИС;
	
	ТЧТовары = ПараметрыФормированияЗапроса.МетаданныеДокументаИСМП.ТабличныеЧасти.Найти(ИмяТабличнойЧасти);
	Если ТЧТовары = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если ТЧТовары.Реквизиты.Найти("Серия") = Неопределено
		ИЛИ ТЧТовары.Реквизиты.Найти("СтатусУказанияСерий") = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого СтрокаТЧ Из ДокументОбъект[ИмяТабличнойЧасти] Цикл
		ИмяФормы = "Документ." + ПараметрыФормированияЗапроса.МетаданныеДокументаИСМП.Имя + ".Форма.ФормаДокумента";
		ИнтеграцияИСМПУНФВызовСервера.ПроверитьСериюРассчитатьСтатус(СтрокаТЧ, ИмяФормы);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти